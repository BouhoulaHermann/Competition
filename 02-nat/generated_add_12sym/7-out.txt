+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 7-in.txt
+++ output      = 7-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 10
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification Generated from 7-in.txt successfully parsed
+++ Listing
         1: specification Generated
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      +: nat nat -> nat
         9: precedence
        10:      + > s > 0
        11: axioms
        12:      x + 0 = x;
        13:      x + s(y) = s(x + y);
        14: conjectures
        15:      s(s(s(s((s(s(V3)) + s(V3)) + (s(V2) + V1))))) = s(s(s(s((s(V3) + V3) + (s(s(s(V2))) + V1)))));
        16: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x + 0 -> x
	x + s(y) -> s(x + y)
+++ inductive positions:
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	s(s(s(s((s(s(V3)) + s(V3)) + (s(V2) + V1))))) = s(s(s(s((s(V3) + V3) + (s(s(s(V2))) + V1)))))

+++ inference system initiated
--- clause
	s(s(s(s((s(s(V3)) + s(V3)) + (s(V2) + V1))))) = s(s(s(s((s(V3) + V3) + (s(s(s(V2))) + V1)))))
... reduced in 1 step to
	s(s(s(s(s(s(s(V3)) + V3) + (s(V2) + V1))))) = s(s(s(s((s(V3) + V3) + (s(s(s(V2))) + V1)))))
... decomposed into new clause(s)
	s(s(s(V3)) + V3) + (s(V2) + V1) = (s(V3) + V3) + (s(s(s(V2))) + V1)
+++ treating clause
	s(s(s(V3)) + V3) + (s(V2) + V1) = (s(V3) + V3) + (s(s(s(V2))) + V1)
+++ inductive narrowing on conjecture
	s(s(s(V3)) + V3) + (s(V2) + V1) = (s(V3) + V3) + (s(s(s(V2))) + V1)
... induction variables of
	s(s(s(V3)) + V3) + (s(V2) + V1) = (s(V3) + V3) + (s(s(s(V2))) + V1)
... are:
	V1:nat
	V3:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V3)) + V3) + (s(V2) + V1) = (s(V3) + V3) + (s(s(s(V2))) + V1)
... with variable V1
+++ creating new conjecture
	s(s(s(V2)) + V2) + (s(V1) + 0) = (s(V2) + V2) + (s(s(s(V1))) + 0)
+++ creating new conjecture
	s(s(s(V2)) + V2) + (s(V1) + s(xts)) = (s(V2) + V2) + (s(s(s(V1))) + s(xts))
--- clause
	s(s(s(V2)) + V2) + (s(V1) + 0) = (s(V2) + V2) + (s(s(s(V1))) + 0)
... reduced in 6 steps to
	s(s(s(s(V2)) + V2) + V1) = s(s(s((s(V2) + V2) + V1)))
--- clause
	s(s(s(V2)) + V2) + (s(V1) + s(xts)) = (s(V2) + V2) + (s(s(s(V1))) + s(xts))
... reduced in 4 steps to
	s(s(s(s(V2)) + V2) + (s(V1) + xts)) = s((s(V2) + V2) + (s(s(s(V1))) + xts))
... decomposed into new clause(s)
	s(s(s(V2)) + V2) + V1 = s(s((s(V2) + V2) + V1))
... decomposed into new clause(s)
	s(s(s(V2)) + V2) + (s(V1) + xts) = (s(V2) + V2) + (s(s(s(V1))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V3)) + V3) + (s(V2) + V1) = (s(V3) + V3) + (s(s(s(V2))) + V1)
... oriented to rule
	s(s(s(V3)) + V3) + (s(V2) + V1) -> (s(V3) + V3) + (s(s(s(V2))) + V1)
+++ added new clause(s)
	s(s(s(V2)) + V2) + V1 = s(s((s(V2) + V2) + V1))
	s(s(s(V2)) + V2) + (s(V1) + xts) = (s(V2) + V2) + (s(s(s(V1))) + xts)
... to conjectures
--- clause
	s(s(s(V2)) + V2) + (s(V1) + xts) = (s(V2) + V2) + (s(s(s(V1))) + xts)
... reduced to tautology
	(s(V2) + V2) + (s(s(s(V1))) + xts) = (s(V2) + V2) + (s(s(s(V1))) + xts)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2)) + V2) + V1 = s(s((s(V2) + V2) + V1))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(V3)) + V3) + (s(V2) + V1) -> (s(V3) + V3) + (s(s(s(V2))) + V1)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2)) + V2) + V1 = s(s((s(V2) + V2) + V1))
+++ inductive narrowing on conjecture
	s(s(s(V2)) + V2) + V1 = s(s((s(V2) + V2) + V1))
... induction variables of
	s(s(s(V2)) + V2) + V1 = s(s((s(V2) + V2) + V1))
... are:
	V2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2)) + V2) + V1 = s(s((s(V2) + V2) + V1))
... with variable V2
+++ creating new conjecture
	s(s(s(0)) + 0) + V = s(s((s(0) + 0) + V))
+++ creating new conjecture
	s(s(s(s(xts))) + s(xts)) + V = s(s((s(s(xts)) + s(xts)) + V))
--- clause
	s(s(s(0)) + 0) + V = s(s((s(0) + 0) + V))
... reduced in 2 steps to
	s(s(s(0))) + V = s(s(s(0) + V))
--- clause
	s(s(s(s(xts))) + s(xts)) + V = s(s((s(s(xts)) + s(xts)) + V))
... reduced in 2 steps to
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s(s(xts)) + xts) + V))
+++ inductive narrowing succeeded
--- clause
	s(s(s(V2)) + V2) + V1 = s(s((s(V2) + V2) + V1))
... oriented to rule
	s(s(s(V2)) + V2) + V1 -> s(s((s(V2) + V2) + V1))
+++ added new clause(s)
	s(s(s(0))) + V = s(s(s(0) + V))
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s(s(xts)) + xts) + V))
... to conjectures
--- clause
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s(s(xts)) + xts) + V))
... reduced in 1 step to
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s((s(xts) + xts) + V))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0))) + V = s(s(s(0) + V))
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s((s(xts) + xts) + V))))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(V2)) + V2) + V1 -> s(s((s(V2) + V2) + V1))
	s(s(s(V3)) + V3) + (s(V2) + V1) -> (s(V3) + V3) + (s(s(s(V2))) + V1)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(0))) + V = s(s(s(0) + V))
+++ inductive narrowing on conjecture
	s(s(s(0))) + V = s(s(s(0) + V))
... induction variables of
	s(s(s(0))) + V = s(s(s(0) + V))
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0))) + V = s(s(s(0) + V))
... with variable V
+++ creating new conjecture
	s(s(s(0))) + 0 = s(s(s(0) + 0))
+++ creating new conjecture
	s(s(s(0))) + s(xts) = s(s(s(0) + s(xts)))
--- clause
	s(s(s(0))) + 0 = s(s(s(0) + 0))
... reduced to tautology
	s(s(s(0))) = s(s(s(0)))
--- clause
	s(s(s(0))) + s(xts) = s(s(s(0) + s(xts)))
... reduced in 2 steps to
	s(s(s(s(0))) + xts) = s(s(s(s(0) + xts)))
... decomposed into new clause(s)
	s(s(s(0))) + xts = s(s(s(0) + xts))
+++ inductive narrowing succeeded
--- clause
	s(s(s(0))) + V = s(s(s(0) + V))
... oriented to rule
	s(s(s(0))) + V -> s(s(s(0) + V))
+++ added new clause(s)
	s(s(s(0))) + xts = s(s(s(0) + xts))
... to conjectures
--- clause
	s(s(s(0))) + xts = s(s(s(0) + xts))
... reduced to tautology
	s(s(s(0) + xts)) = s(s(s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s((s(xts) + xts) + V))))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(0))) + V -> s(s(s(0) + V))
	s(s(s(V2)) + V2) + V1 -> s(s((s(V2) + V2) + V1))
	s(s(s(V3)) + V3) + (s(V2) + V1) -> (s(V3) + V3) + (s(s(s(V2))) + V1)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s((s(xts) + xts) + V))))
+++ inductive narrowing on conjecture
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s((s(xts) + xts) + V))))
... induction variables of
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s((s(xts) + xts) + V))))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s((s(xts) + xts) + V))))
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0))) + 0)) + V = s(s(s(s((s(0) + 0) + V))))
+++ creating new conjecture
	s(s(s(s(s(s(xts)))) + s(xts))) + V = s(s(s(s((s(s(xts)) + s(xts)) + V))))
--- clause
	s(s(s(s(s(0))) + 0)) + V = s(s(s(s((s(0) + 0) + V))))
... reduced in 2 steps to
	s(s(s(s(s(0))))) + V = s(s(s(s(s(0) + V))))
--- clause
	s(s(s(s(s(s(xts)))) + s(xts))) + V = s(s(s(s((s(s(xts)) + s(xts)) + V))))
... reduced in 3 steps to
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s((s(xts) + xts) + V))))
... oriented to rule
	s(s(s(s(s(xts))) + xts)) + V -> s(s(s(s((s(xts) + xts) + V))))
+++ added new clause(s)
	s(s(s(s(s(0))))) + V = s(s(s(s(s(0) + V))))
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(0))))) + V = s(s(s(s(s(0) + V))))
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(0))) + V -> s(s(s(0) + V))
	s(s(s(V2)) + V2) + V1 -> s(s((s(V2) + V2) + V1))
	s(s(s(s(s(xts))) + xts)) + V -> s(s(s(s((s(xts) + xts) + V))))
	s(s(s(V3)) + V3) + (s(V2) + V1) -> (s(V3) + V3) + (s(s(s(V2))) + V1)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(0))))) + V = s(s(s(s(s(0) + V))))
+++ inductive narrowing on conjecture
	s(s(s(s(s(0))))) + V = s(s(s(s(s(0) + V))))
... induction variables of
	s(s(s(s(s(0))))) + V = s(s(s(s(s(0) + V))))
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(0))))) + V = s(s(s(s(s(0) + V))))
... with variable V
+++ creating new conjecture
	s(s(s(s(s(0))))) + 0 = s(s(s(s(s(0) + 0))))
+++ creating new conjecture
	s(s(s(s(s(0))))) + s(xts) = s(s(s(s(s(0) + s(xts)))))
--- clause
	s(s(s(s(s(0))))) + 0 = s(s(s(s(s(0) + 0))))
... reduced to tautology
	s(s(s(s(s(0))))) = s(s(s(s(s(0)))))
--- clause
	s(s(s(s(s(0))))) + s(xts) = s(s(s(s(s(0) + s(xts)))))
... reduced in 2 steps to
	s(s(s(s(s(s(0))))) + xts) = s(s(s(s(s(s(0) + xts)))))
... decomposed into new clause(s)
	s(s(s(s(s(0))))) + xts = s(s(s(s(s(0) + xts))))
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(0))))) + V = s(s(s(s(s(0) + V))))
... oriented to rule
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(0) + V))))
+++ added new clause(s)
	s(s(s(s(s(0))))) + xts = s(s(s(s(s(0) + xts))))
... to conjectures
--- clause
	s(s(s(s(s(0))))) + xts = s(s(s(s(s(0) + xts))))
... reduced to tautology
	s(s(s(s(s(0) + xts)))) = s(s(s(s(s(0) + xts))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(0))) + V -> s(s(s(0) + V))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(0) + V))))
	s(s(s(V2)) + V2) + V1 -> s(s((s(V2) + V2) + V1))
	s(s(s(s(s(xts))) + xts)) + V -> s(s(s(s((s(xts) + xts) + V))))
	s(s(s(V3)) + V3) + (s(V2) + V1) -> (s(V3) + V3) + (s(s(s(V2))) + V1)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
... induction variables of
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(0)))) + 0))) + V = s(s(s(s(s(s((s(0) + 0) + V))))))
+++ creating new conjecture
	s(s(s(s(s(s(s(s(xts))))) + s(xts)))) + V = s(s(s(s(s(s((s(s(xts)) + s(xts)) + V))))))
--- clause
	s(s(s(s(s(s(s(0)))) + 0))) + V = s(s(s(s(s(s((s(0) + 0) + V))))))
... reduced in 2 steps to
	s(s(s(s(s(s(s(0))))))) + V = s(s(s(s(s(s(s(0) + V))))))
--- clause
	s(s(s(s(s(s(s(s(xts))))) + s(xts)))) + V = s(s(s(s(s(s((s(s(xts)) + s(xts)) + V))))))
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
... oriented to rule
	s(s(s(s(s(s(s(xts)))) + xts))) + V -> s(s(s(s(s(s((s(xts) + xts) + V))))))
+++ added new clause(s)
	s(s(s(s(s(s(s(0))))))) + V = s(s(s(s(s(s(s(0) + V))))))
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(0))))))) + V = s(s(s(s(s(s(s(0) + V))))))
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(0))) + V -> s(s(s(0) + V))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(0) + V))))
	s(s(s(V2)) + V2) + V1 -> s(s((s(V2) + V2) + V1))
	s(s(s(s(s(xts))) + xts)) + V -> s(s(s(s((s(xts) + xts) + V))))
	s(s(s(V3)) + V3) + (s(V2) + V1) -> (s(V3) + V3) + (s(s(s(V2))) + V1)
	s(s(s(s(s(s(s(xts)))) + xts))) + V -> s(s(s(s(s(s((s(xts) + xts) + V))))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(0))))))) + V = s(s(s(s(s(s(s(0) + V))))))
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(0))))))) + V = s(s(s(s(s(s(s(0) + V))))))
... induction variables of
	s(s(s(s(s(s(s(0))))))) + V = s(s(s(s(s(s(s(0) + V))))))
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(0))))))) + V = s(s(s(s(s(s(s(0) + V))))))
... with variable V
+++ creating new conjecture
	s(s(s(s(s(s(s(0))))))) + 0 = s(s(s(s(s(s(s(0) + 0))))))
+++ creating new conjecture
	s(s(s(s(s(s(s(0))))))) + s(xts) = s(s(s(s(s(s(s(0) + s(xts)))))))
--- clause
	s(s(s(s(s(s(s(0))))))) + 0 = s(s(s(s(s(s(s(0) + 0))))))
... reduced to tautology
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0)))))))
--- clause
	s(s(s(s(s(s(s(0))))))) + s(xts) = s(s(s(s(s(s(s(0) + s(xts)))))))
... reduced in 2 steps to
	s(s(s(s(s(s(s(s(0))))))) + xts) = s(s(s(s(s(s(s(s(0) + xts)))))))
... decomposed into new clause(s)
	s(s(s(s(s(s(s(0))))))) + xts = s(s(s(s(s(s(s(0) + xts))))))
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(0))))))) + V = s(s(s(s(s(s(s(0) + V))))))
... oriented to rule
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(0) + V))))))
+++ added new clause(s)
	s(s(s(s(s(s(s(0))))))) + xts = s(s(s(s(s(s(s(0) + xts))))))
... to conjectures
--- clause
	s(s(s(s(s(s(s(0))))))) + xts = s(s(s(s(s(s(s(0) + xts))))))
... reduced to tautology
	s(s(s(s(s(s(s(0) + xts)))))) = s(s(s(s(s(s(s(0) + xts))))))
+++ active wrap
	s(s(s(.))) + V = s(s(.))
... with sequence
	s(s(s(0))) + V = s(s(s(0) + V))
	s(s(s(s(s(0))))) + V = s(s(s(s(s(0) + V))))
	s(s(s(s(s(s(s(0))))))) + V = s(s(s(s(s(s(s(0) + V))))))
+++ primal grammar found for head
	{+, 0, s}
... and wrap
	s(s(s(.))) + V = s(s(.))
+++ Presburger system  = {
	^f0(0) -> 0
	^f0($n0 + 1) -> s(s(^f0($n0)))
	^f1(0; V) -> s(0) + V
	^f1($n1 + 1; V) -> s(s(^f1($n1; V)))
+++ }
+++ Lemma(s)           = 
	s(s(s(^f0($n)))) + V = s(s(^f1($n; V)))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(0))) + V -> s(s(s(0) + V))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(0) + V))))
	s(s(s(V2)) + V2) + V1 -> s(s((s(V2) + V2) + V1))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(0) + V))))))
	s(s(s(s(s(xts))) + xts)) + V -> s(s(s(s((s(xts) + xts) + V))))
	s(s(s(V3)) + V3) + (s(V2) + V1) -> (s(V3) + V3) + (s(s(s(V2))) + V1)
	s(s(s(s(s(s(s(xts)))) + xts))) + V -> s(s(s(s(s(s((s(xts) + xts) + V))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0) -> 0
	^f0($n0 + 1) -> s(s(^f0($n0)))
	^f1(0; V) -> s(0) + V
	^f1($n1 + 1; V) -> s(s(^f1($n1; V)))
+++ }
+++ Lemma(s)           = 
	s(s(s(^f0($n)))) + V = s(s(^f1($n; V)))

+++ treating clause
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
... induction variables of
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(s(s(0))))) + 0)))) + V = s(s(s(s(s(s(s(s((s(0) + 0) + V))))))))
+++ creating new conjecture
	s(s(s(s(s(s(s(s(s(s(xts)))))) + s(xts))))) + V = s(s(s(s(s(s(s(s((s(s(xts)) + s(xts)) + V))))))))
--- clause
	s(s(s(s(s(s(s(s(s(0))))) + 0)))) + V = s(s(s(s(s(s(s(s((s(0) + 0) + V))))))))
... reduced in 2 steps to
	s(s(s(s(s(s(s(s(s(0))))))))) + V = s(s(s(s(s(s(s(s(s(0) + V))))))))
--- clause
	s(s(s(s(s(s(s(s(s(s(xts)))))) + s(xts))))) + V = s(s(s(s(s(s(s(s((s(s(xts)) + s(xts)) + V))))))))
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(s(s(xts)))))) + xts))))) + V = s(s(s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))))
--- clause
	s(s(s(s(s(s(s(s(s(0))))))))) + V = s(s(s(s(s(s(s(s(s(0) + V))))))))
... subsumed by lemma
	s(s(s(^f0($n)))) + V = s(s(^f1($n; V)))
... with substitution
	$n <- 3
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
... oriented to rule
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V -> s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
+++ added new clause(s)
	s(s(s(s(s(s(s(s(s(s(s(xts)))))) + xts))))) + V = s(s(s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))))
... to conjectures
+++ active wrap
	s(.) + V = s(s(.))
... with sequence
	s(s(s(s(s(xts))) + xts)) + V = s(s(s(s((s(xts) + xts) + V))))
	s(s(s(s(s(s(s(xts)))) + xts))) + V = s(s(s(s(s(s((s(xts) + xts) + V))))))
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V = s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
+++ primal grammar found for head
	{+, s}
... and wrap
	s(.) + V = s(s(.))
+++ Presburger system  = {
	^f2(0; xts) -> xts
	^f2($n2 + 1; xts) -> s(^f2($n2; xts))
	^f3(0, $n2; xts) -> s(s(s(^f2($n2; xts)))) + xts
	^f3($n3 + 1, $n2; xts) -> s(^f3($n3, $n2 + 1; xts))
	^f4(0; V, xts) -> (s(xts) + xts) + V
	^f4($n4 + 1; V, xts) -> s(s(^f4($n4; V, xts)))
+++ }
+++ Lemma(s)           = 
	s(s(^f3($n, 0; xts))) + V = s(s(s(s(^f4($n; V, xts)))))
--- clause
	s(s(s(s(s(s(s(s(s(s(s(xts)))))) + xts))))) + V = s(s(s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))))
... subsumed by lemma
	s(s(^f3($n, 0; xts))) + V = s(s(s(s(^f4($n; V, xts)))))
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(0))) + V -> s(s(s(0) + V))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(0) + V))))
	s(s(s(V2)) + V2) + V1 -> s(s((s(V2) + V2) + V1))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(0) + V))))))
	s(s(s(s(s(xts))) + xts)) + V -> s(s(s(s((s(xts) + xts) + V))))
	s(s(s(V3)) + V3) + (s(V2) + V1) -> (s(V3) + V3) + (s(s(s(V2))) + V1)
	s(s(s(s(s(s(s(xts)))) + xts))) + V -> s(s(s(s(s(s((s(xts) + xts) + V))))))
	s(s(s(s(s(s(s(s(s(xts))))) + xts)))) + V -> s(s(s(s(s(s(s(s((s(xts) + xts) + V))))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0) -> 0
	^f0($n0 + 1) -> s(s(^f0($n0)))
	^f1(0; V) -> s(0) + V
	^f1($n1 + 1; V) -> s(s(^f1($n1; V)))
	^f2(0; xts) -> xts
	^f2($n2 + 1; xts) -> s(^f2($n2; xts))
	^f3(0, $n2; xts) -> s(s(s(^f2($n2; xts)))) + xts
	^f3($n3 + 1, $n2; xts) -> s(^f3($n3, $n2 + 1; xts))
	^f4(0; V, xts) -> (s(xts) + xts) + V
	^f4($n4 + 1; V, xts) -> s(s(^f4($n4; V, xts)))
+++ }
+++ Lemma(s)           = 
	s(s(s(^f0($n)))) + V = s(s(^f1($n; V)))
	s(s(^f3($n, 0; xts))) + V = s(s(s(s(^f4($n; V, xts)))))

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 8
... Number of induction steps      = 8
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Number of PG defined symbols   = 5
... Number of PG lemmas            = 2
... Elapsed time (seconds)         = 0.015
