+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 31-in.txt
+++ output      = 31-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 18
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification Generated from 31-in.txt successfully parsed
+++ Listing
         1: specification Generated
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      +: nat nat -> nat
         9: precedence
        10:      + > s > 0
        11: axioms
        12:      x + 0 = x;
        13:      x + s(y) = s(x + y);
        14: conjectures
        15:      s(s(s(s(s(V3) + s((V2 + s(V1)) + s(V2)))))) = s(s(s(s(V2 + (V3 + s(s(s(V2) + s(V1))))))));
        16: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x + 0 -> x
	x + s(y) -> s(x + y)
+++ inductive positions:
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	s(s(s(s(s(V3) + s((V2 + s(V1)) + s(V2)))))) = s(s(s(s(V2 + (V3 + s(s(s(V2) + s(V1))))))))

+++ inference system initiated
--- clause
	s(s(s(s(s(V3) + s((V2 + s(V1)) + s(V2)))))) = s(s(s(s(V2 + (V3 + s(s(s(V2) + s(V1))))))))
... reduced in 11 steps to
	s(s(s(s(s(s(s(V3) + (s(V2 + V1) + V2))))))) = s(s(s(s(s(s(s(V2 + (V3 + (s(V2) + V1)))))))))
... decomposed into new clause(s)
	s(V3) + (s(V2 + V1) + V2) = s(V2 + (V3 + (s(V2) + V1)))
+++ treating clause
	s(V3) + (s(V2 + V1) + V2) = s(V2 + (V3 + (s(V2) + V1)))
+++ inductive narrowing on conjecture
	s(V3) + (s(V2 + V1) + V2) = s(V2 + (V3 + (s(V2) + V1)))
... induction variables of
	s(V3) + (s(V2 + V1) + V2) = s(V2 + (V3 + (s(V2) + V1)))
... are:
	V1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V3) + (s(V2 + V1) + V2) = s(V2 + (V3 + (s(V2) + V1)))
... with variable V1
+++ creating new conjecture
	s(V2) + (s(V1 + 0) + V1) = s(V1 + (V2 + (s(V1) + 0)))
+++ creating new conjecture
	s(V2) + (s(V1 + s(xts)) + V1) = s(V1 + (V2 + (s(V1) + s(xts))))
--- clause
	s(V2) + (s(V1 + 0) + V1) = s(V1 + (V2 + (s(V1) + 0)))
... reduced in 4 steps to
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
--- clause
	s(V2) + (s(V1 + s(xts)) + V1) = s(V1 + (V2 + (s(V1) + s(xts))))
... reduced in 4 steps to
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V1 + (V2 + (s(V1) + xts))))
+++ inductive narrowing succeeded
--- clause
	s(V3) + (s(V2 + V1) + V2) = s(V2 + (V3 + (s(V2) + V1)))
... oriented to rule
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
+++ added new clause(s)
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V1 + (V2 + (s(V1) + xts))))
... to conjectures
--- clause
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V1 + (V2 + (s(V1) + xts))))
... reduced in 1 step to
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V2) + (s(V1 + xts) + V1))

+++ Status of the Inference System
--- Conjectures:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V2) + (s(V1 + xts) + V1))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
+++ inductive narrowing on conjecture
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
... induction variables of
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
... are:
	V1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
... with variable V1
+++ creating new conjecture
	s(V) + (s(0) + 0) = s(s(0 + (V + 0)))
+++ creating new conjecture
	s(V) + (s(s(xts)) + s(xts)) = s(s(s(xts) + (V + s(xts))))
--- clause
	s(V) + (s(0) + 0) = s(s(0 + (V + 0)))
... reduced in 4 steps to
	s(s(V)) = s(s(0 + V))
--- clause
	s(V) + (s(s(xts)) + s(xts)) = s(s(s(xts) + (V + s(xts))))
... reduced in 4 steps to
	s(s(V) + (s(s(xts)) + xts)) = s(s(s(s(xts) + (V + xts))))
... decomposed into new clause(s)
	V = 0 + V
... decomposed into new clause(s)
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
+++ moved
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
... to non-orientable hypotheses
+++ added new clause(s)
	V = 0 + V
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V2) + (s(V1 + xts) + V1))
	V = 0 + V
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
--- Oriented hypotheses:
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V2) + (s(V1 + xts) + V1))
+++ inductive narrowing on conjecture
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V2) + (s(V1 + xts) + V1))
... induction variables of
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V2) + (s(V1 + xts) + V1))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V2) + (s(V1 + xts) + V1))
... with variable xts
+++ creating new conjecture
	s(V2) + (s(s(V1 + 0)) + V1) = s(s(V2) + (s(V1 + 0) + V1))
+++ creating new conjecture
	s(V2) + (s(s(V1 + s(xts))) + V1) = s(s(V2) + (s(V1 + s(xts)) + V1))
--- clause
	s(V2) + (s(s(V1 + 0)) + V1) = s(s(V2) + (s(V1 + 0) + V1))
... reduced in 2 steps to
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
--- clause
	s(V2) + (s(s(V1 + s(xts))) + V1) = s(s(V2) + (s(V1 + s(xts)) + V1))
... reduced in 2 steps to
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(V2) + (s(s(V1 + xts)) + V1))
+++ inductive narrowing succeeded
--- clause
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V2) + (s(V1 + xts) + V1))
... oriented to rule
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
+++ added new clause(s)
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(V2) + (s(s(V1 + xts)) + V1))
... to conjectures
--- clause
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(V2) + (s(s(V1 + xts)) + V1))
... reduced in 1 step to
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))

+++ Status of the Inference System
--- Conjectures:
	V = 0 + V
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
--- Oriented hypotheses:
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
--- Primal Grammar:
	<empty>

+++ treating clause
	V = 0 + V
+++ inductive narrowing on conjecture
	V = 0 + V
... induction variables of
	V = 0 + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	V = 0 + V
... with variable V
+++ creating new conjecture
	0 = 0 + 0
+++ creating new conjecture
	s(xts) = 0 + s(xts)
--- clause
	0 = 0 + 0
... reduced to tautology
	0 = 0
--- clause
	s(xts) = 0 + s(xts)
... reduced in 1 step to
	s(xts) = s(0 + xts)
... decomposed into new clause(s)
	xts = 0 + xts
+++ inductive narrowing succeeded
--- clause
	V = 0 + V
... oriented to rule
	0 + V -> V
+++ added new clause(s)
	xts = 0 + xts
... to conjectures
--- clause
	xts = 0 + xts
... reduced to tautology
	xts = xts

+++ Status of the Inference System
--- Conjectures:
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
--- Oriented hypotheses:
	0 + V -> V
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
+++ inductive narrowing on conjecture
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
... induction variables of
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
... with variable xts
+++ creating new conjecture
	s(V) + (s(s(0)) + 0) = s(s(s(0) + (V + 0)))
+++ creating new conjecture
	s(V) + (s(s(s(xts))) + s(xts)) = s(s(s(s(xts)) + (V + s(xts))))
--- clause
	s(V) + (s(s(0)) + 0) = s(s(s(0) + (V + 0)))
... reduced in 5 steps to
	s(s(s(V))) = s(s(s(0) + V))
--- clause
	s(V) + (s(s(s(xts))) + s(xts)) = s(s(s(s(xts)) + (V + s(xts))))
... reduced in 4 steps to
	s(s(V) + (s(s(s(xts))) + xts)) = s(s(s(s(s(xts)) + (V + xts))))
... decomposed into new clause(s)
	s(V) = s(0) + V
... decomposed into new clause(s)
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
+++ moved
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
... to non-orientable hypotheses
+++ added new clause(s)
	s(V) = s(0) + V
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V) = s(0) + V
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
+++ inductive narrowing on conjecture
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
... induction variables of
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
... are:
	V1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
... with variable V1
+++ creating new conjecture
	s(V) + (s(s(0)) + 0) = s(s(V) + (s(0) + 0))
+++ creating new conjecture
	s(V) + (s(s(s(xts))) + s(xts)) = s(s(V) + (s(s(xts)) + s(xts)))
--- clause
	s(V) + (s(s(0)) + 0) = s(s(V) + (s(0) + 0))
... reduced to tautology
	s(s(s(V))) = s(s(s(V)))
--- clause
	s(V) + (s(s(s(xts))) + s(xts)) = s(s(V) + (s(s(xts)) + s(xts)))
... reduced in 4 steps to
	s(s(V) + (s(s(s(xts))) + xts)) = s(s(s(V) + (s(s(xts)) + xts)))
... decomposed into new clause(s)
	s(V) + (s(s(s(xts))) + xts) = s(s(V) + (s(s(xts)) + xts))
+++ inductive narrowing succeeded
--- clause
	s(V2) + (s(s(V1)) + V1) = s(s(V2) + (s(V1) + V1))
... oriented to rule
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
+++ added new clause(s)
	s(V) + (s(s(s(xts))) + xts) = s(s(V) + (s(s(xts)) + xts))
... to conjectures
--- clause
	s(V) + (s(s(s(xts))) + xts) = s(s(V) + (s(s(xts)) + xts))
... reduced in 1 step to
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))

+++ Status of the Inference System
--- Conjectures:
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V) = s(0) + V
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
+++ inductive narrowing on conjecture
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
... induction variables of
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
... with variable xts
+++ creating new conjecture
	s(V2) + (s(s(s(V1 + 0))) + V1) = s(s(s(V2) + (s(V1 + 0) + V1)))
+++ creating new conjecture
	s(V2) + (s(s(s(V1 + s(xts)))) + V1) = s(s(s(V2) + (s(V1 + s(xts)) + V1)))
--- clause
	s(V2) + (s(s(s(V1 + 0))) + V1) = s(s(s(V2) + (s(V1 + 0) + V1)))
... reduced in 2 steps to
	s(V2) + (s(s(s(V1))) + V1) = s(s(s(V2) + (s(V1) + V1)))
--- clause
	s(V2) + (s(s(s(V1 + s(xts)))) + V1) = s(s(s(V2) + (s(V1 + s(xts)) + V1)))
... reduced in 3 steps to
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
--- clause
	s(V2) + (s(s(s(V1))) + V1) = s(s(s(V2) + (s(V1) + V1)))
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
... oriented to rule
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
+++ added new clause(s)
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(V) = s(0) + V
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(V) = s(0) + V
+++ inductive narrowing on conjecture
	s(V) = s(0) + V
... induction variables of
	s(V) = s(0) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V) = s(0) + V
... with variable V
+++ creating new conjecture
	s(0) = s(0) + 0
+++ creating new conjecture
	s(s(xts)) = s(0) + s(xts)
--- clause
	s(0) = s(0) + 0
... reduced to tautology
	s(0) = s(0)
--- clause
	s(s(xts)) = s(0) + s(xts)
... reduced in 1 step to
	s(s(xts)) = s(s(0) + xts)
... decomposed into new clause(s)
	s(xts) = s(0) + xts
+++ inductive narrowing succeeded
--- clause
	s(V) = s(0) + V
... oriented to rule
	s(0) + V -> s(V)
+++ added new clause(s)
	s(xts) = s(0) + xts
... to conjectures
--- clause
	s(xts) = s(0) + xts
... reduced to tautology
	s(xts) = s(xts)

+++ Status of the Inference System
--- Conjectures:
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
+++ inductive narrowing on conjecture
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
... induction variables of
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
... with variable xts
+++ creating new conjecture
	s(V) + (s(s(s(0))) + 0) = s(s(s(s(0)) + (V + 0)))
+++ creating new conjecture
	s(V) + (s(s(s(s(xts)))) + s(xts)) = s(s(s(s(s(xts))) + (V + s(xts))))
--- clause
	s(V) + (s(s(s(0))) + 0) = s(s(s(s(0)) + (V + 0)))
... reduced in 6 steps to
	s(s(s(s(V)))) = s(s(s(s(0)) + V))
--- clause
	s(V) + (s(s(s(s(xts)))) + s(xts)) = s(s(s(s(s(xts))) + (V + s(xts))))
... reduced in 4 steps to
	s(s(V) + (s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts))) + (V + xts))))
... decomposed into new clause(s)
	s(s(V)) = s(s(0)) + V
... decomposed into new clause(s)
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
+++ moved
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(V)) = s(s(0)) + V
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
	s(s(V)) = s(s(0)) + V
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))
+++ inductive narrowing on conjecture
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))
... induction variables of
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))
... with variable xts
+++ creating new conjecture
	s(V) + (s(s(s(0))) + 0) = s(s(s(V) + (s(0) + 0)))
+++ creating new conjecture
	s(V) + (s(s(s(s(xts)))) + s(xts)) = s(s(s(V) + (s(s(xts)) + s(xts))))
--- clause
	s(V) + (s(s(s(0))) + 0) = s(s(s(V) + (s(0) + 0)))
... reduced to tautology
	s(s(s(s(V)))) = s(s(s(s(V))))
--- clause
	s(V) + (s(s(s(s(xts)))) + s(xts)) = s(s(s(V) + (s(s(xts)) + s(xts))))
... reduced in 5 steps to
	s(s(V) + (s(s(s(s(xts)))) + xts)) = s(s(s(s(s(V) + (s(xts) + xts)))))
... decomposed into new clause(s)
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
+++ inductive narrowing succeeded
--- clause
	s(V) + (s(s(s(xts))) + xts) = s(s(s(V) + (s(xts) + xts)))
... oriented to rule
	s(V) + (s(s(s(xts))) + xts) -> s(s(s(V) + (s(xts) + xts)))
+++ added new clause(s)
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
	s(s(V)) = s(s(0)) + V
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V) + (s(s(s(xts))) + xts) -> s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
+++ inductive narrowing on conjecture
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
... induction variables of
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
... with variable xts
+++ creating new conjecture
	s(V2) + (s(s(s(s(V1 + 0)))) + V1) = s(s(s(s(V2) + (s(V1 + 0) + V1))))
+++ creating new conjecture
	s(V2) + (s(s(s(s(V1 + s(xts))))) + V1) = s(s(s(s(V2) + (s(V1 + s(xts)) + V1))))
--- clause
	s(V2) + (s(s(s(s(V1 + 0)))) + V1) = s(s(s(s(V2) + (s(V1 + 0) + V1))))
... reduced in 2 steps to
	s(V2) + (s(s(s(s(V1)))) + V1) = s(s(s(s(V2) + (s(V1) + V1))))
--- clause
	s(V2) + (s(s(s(s(V1 + s(xts))))) + V1) = s(s(s(s(V2) + (s(V1 + s(xts)) + V1))))
... reduced in 3 steps to
	s(V2) + (s(s(s(s(s(V1 + xts))))) + V1) = s(s(s(s(s(V2) + (s(V1 + xts) + V1)))))
--- clause
	s(V2) + (s(s(s(s(V1)))) + V1) = s(s(s(s(V2) + (s(V1) + V1))))
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
... oriented to rule
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) -> s(s(s(s(V2) + (s(V1 + xts) + V1))))
+++ added new clause(s)
	s(V2) + (s(s(s(s(s(V1 + xts))))) + V1) = s(s(s(s(s(V2) + (s(V1 + xts) + V1)))))
... to conjectures
+++ active wrap
	s(V2) + (s(s(.)) + V1) = s(.)
... with sequence
	s(V2) + (s(s(V1 + xts)) + V1) = s(s(V2) + (s(V1 + xts) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) = s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) = s(s(s(s(V2) + (s(V1 + xts) + V1))))
+++ primal grammar found for head
	{+, s}
... and wrap
	s(V2) + (s(s(.)) + V1) = s(.)
+++ Presburger system  = {
	^f2(0; V, xts) -> V + xts
	^f2($n2 + 1; V, xts) -> s(^f2($n2; V, xts))
	^f3(0; V2, V1, xts) -> s(V2) + (s(V1 + xts) + V1)
	^f3($n3 + 1; V2, V1, xts) -> s(^f3($n3; V2, V1, xts))
+++ }
+++ Lemma(s)           = 
	s(V2) + (s(s(^f2($n; V1, xts))) + V1) = s(^f3($n; V1, V2, xts))
--- clause
	s(V2) + (s(s(s(s(s(V1 + xts))))) + V1) = s(s(s(s(s(V2) + (s(V1 + xts) + V1)))))
... subsumed by lemma
	s(V2) + (s(s(^f2($n; V1, xts))) + V1) = s(^f3($n; V1, V2, xts))
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(V)) = s(s(0)) + V
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V) + (s(s(s(xts))) + xts) -> s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) -> s(s(s(s(V2) + (s(V1 + xts) + V1))))
--- Primal Grammar:
+++ Presburger system  = {
	^f2(0; V, xts) -> V + xts
	^f2($n2 + 1; V, xts) -> s(^f2($n2; V, xts))
	^f3(0; V2, V1, xts) -> s(V2) + (s(V1 + xts) + V1)
	^f3($n3 + 1; V2, V1, xts) -> s(^f3($n3; V2, V1, xts))
+++ }
+++ Lemma(s)           = 
	s(V2) + (s(s(^f2($n; V1, xts))) + V1) = s(^f3($n; V1, V2, xts))

+++ treating clause
	s(s(V)) = s(s(0)) + V
+++ inductive narrowing on conjecture
	s(s(V)) = s(s(0)) + V
... induction variables of
	s(s(V)) = s(s(0)) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(V)) = s(s(0)) + V
... with variable V
+++ creating new conjecture
	s(s(0)) = s(s(0)) + 0
+++ creating new conjecture
	s(s(s(xts))) = s(s(0)) + s(xts)
--- clause
	s(s(0)) = s(s(0)) + 0
... reduced to tautology
	s(s(0)) = s(s(0))
--- clause
	s(s(s(xts))) = s(s(0)) + s(xts)
... reduced in 1 step to
	s(s(s(xts))) = s(s(s(0)) + xts)
... decomposed into new clause(s)
	s(s(xts)) = s(s(0)) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(V)) = s(s(0)) + V
... oriented to rule
	s(s(0)) + V -> s(s(V))
+++ added new clause(s)
	s(s(xts)) = s(s(0)) + xts
... to conjectures
--- clause
	s(s(xts)) = s(s(0)) + xts
... reduced to tautology
	s(s(xts)) = s(s(xts))

+++ Status of the Inference System
--- Conjectures:
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(s(0)) + V -> s(s(V))
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V) + (s(s(s(xts))) + xts) -> s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) -> s(s(s(s(V2) + (s(V1 + xts) + V1))))
--- Primal Grammar:
+++ Presburger system  = {
	^f2(0; V, xts) -> V + xts
	^f2($n2 + 1; V, xts) -> s(^f2($n2; V, xts))
	^f3(0; V2, V1, xts) -> s(V2) + (s(V1 + xts) + V1)
	^f3($n3 + 1; V2, V1, xts) -> s(^f3($n3; V2, V1, xts))
+++ }
+++ Lemma(s)           = 
	s(V2) + (s(s(^f2($n; V1, xts))) + V1) = s(^f3($n; V1, V2, xts))

+++ treating clause
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
+++ inductive narrowing on conjecture
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
... induction variables of
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
... with variable xts
+++ creating new conjecture
	s(V) + (s(s(s(s(0)))) + 0) = s(s(s(s(s(0))) + (V + 0)))
+++ creating new conjecture
	s(V) + (s(s(s(s(s(xts))))) + s(xts)) = s(s(s(s(s(s(xts)))) + (V + s(xts))))
--- clause
	s(V) + (s(s(s(s(0)))) + 0) = s(s(s(s(s(0))) + (V + 0)))
... reduced in 7 steps to
	s(s(s(s(s(V))))) = s(s(s(s(s(0))) + V))
--- clause
	s(V) + (s(s(s(s(s(xts))))) + s(xts)) = s(s(s(s(s(s(xts)))) + (V + s(xts))))
... reduced in 4 steps to
	s(s(V) + (s(s(s(s(s(xts))))) + xts)) = s(s(s(s(s(s(s(xts)))) + (V + xts))))
... decomposed into new clause(s)
	s(s(s(V))) = s(s(s(0))) + V
... decomposed into new clause(s)
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(s(xts)))) + (V + xts)))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
+++ moved
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(V))) = s(s(s(0))) + V
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(s(xts)))) + (V + xts)))
... to conjectures
+++ active wrap
	s(V) + (s(s(.)) + xts) = s(s(s(.) + (V + xts)))
... with sequence
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
+++ primal grammar found for head
	{+, s}
... and wrap
	s(V) + (s(s(.)) + xts) = s(s(s(.) + (V + xts)))
+++ Presburger system  = {
	^f5(0; xts) -> xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	s(V) + (s(s(^f5($n; xts))) + xts) = s(s(s(^f5($n; xts)) + (V + xts)))
--- clause
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(s(xts)))) + (V + xts)))
... subsumed by lemma
	s(V) + (s(s(^f5($n; xts))) + xts) = s(s(s(^f5($n; xts)) + (V + xts)))
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
	s(s(s(V))) = s(s(s(0))) + V
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(s(0)) + V -> s(s(V))
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V) + (s(s(s(xts))) + xts) -> s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) -> s(s(s(s(V2) + (s(V1 + xts) + V1))))
--- Primal Grammar:
+++ Presburger system  = {
	^f2(0; V, xts) -> V + xts
	^f2($n2 + 1; V, xts) -> s(^f2($n2; V, xts))
	^f3(0; V2, V1, xts) -> s(V2) + (s(V1 + xts) + V1)
	^f3($n3 + 1; V2, V1, xts) -> s(^f3($n3; V2, V1, xts))
	^f5(0; xts) -> xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	s(V2) + (s(s(^f2($n; V1, xts))) + V1) = s(^f3($n; V1, V2, xts))
	s(V) + (s(s(^f5($n; xts))) + xts) = s(s(s(^f5($n; xts)) + (V + xts)))

+++ treating clause
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
+++ inductive narrowing on conjecture
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
... induction variables of
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
... with variable xts
+++ creating new conjecture
	s(V) + (s(s(s(s(0)))) + 0) = s(s(s(s(V) + (s(0) + 0))))
+++ creating new conjecture
	s(V) + (s(s(s(s(s(xts))))) + s(xts)) = s(s(s(s(V) + (s(s(xts)) + s(xts)))))
--- clause
	s(V) + (s(s(s(s(0)))) + 0) = s(s(s(s(V) + (s(0) + 0))))
... reduced to tautology
	s(s(s(s(s(V))))) = s(s(s(s(s(V)))))
--- clause
	s(V) + (s(s(s(s(s(xts))))) + s(xts)) = s(s(s(s(V) + (s(s(xts)) + s(xts)))))
... reduced in 5 steps to
	s(s(V) + (s(s(s(s(s(xts))))) + xts)) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
... decomposed into new clause(s)
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
+++ inductive narrowing succeeded
--- clause
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
... oriented to rule
	s(V) + (s(s(s(s(xts)))) + xts) -> s(s(s(s(V) + (s(xts) + xts))))
+++ added new clause(s)
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V))) = s(s(s(0))) + V
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(s(0)) + V -> s(s(V))
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V) + (s(s(s(xts))) + xts) -> s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V) + (s(s(s(s(xts)))) + xts) -> s(s(s(s(V) + (s(xts) + xts))))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) -> s(s(s(s(V2) + (s(V1 + xts) + V1))))
--- Primal Grammar:
+++ Presburger system  = {
	^f2(0; V, xts) -> V + xts
	^f2($n2 + 1; V, xts) -> s(^f2($n2; V, xts))
	^f3(0; V2, V1, xts) -> s(V2) + (s(V1 + xts) + V1)
	^f3($n3 + 1; V2, V1, xts) -> s(^f3($n3; V2, V1, xts))
	^f5(0; xts) -> xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	s(V2) + (s(s(^f2($n; V1, xts))) + V1) = s(^f3($n; V1, V2, xts))
	s(V) + (s(s(^f5($n; xts))) + xts) = s(s(s(^f5($n; xts)) + (V + xts)))

+++ treating clause
	s(s(s(V))) = s(s(s(0))) + V
+++ inductive narrowing on conjecture
	s(s(s(V))) = s(s(s(0))) + V
... induction variables of
	s(s(s(V))) = s(s(s(0))) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V))) = s(s(s(0))) + V
... with variable V
+++ creating new conjecture
	s(s(s(0))) = s(s(s(0))) + 0
+++ creating new conjecture
	s(s(s(s(xts)))) = s(s(s(0))) + s(xts)
--- clause
	s(s(s(0))) = s(s(s(0))) + 0
... reduced to tautology
	s(s(s(0))) = s(s(s(0)))
--- clause
	s(s(s(s(xts)))) = s(s(s(0))) + s(xts)
... reduced in 1 step to
	s(s(s(s(xts)))) = s(s(s(s(0))) + xts)
... decomposed into new clause(s)
	s(s(s(xts))) = s(s(s(0))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(V))) = s(s(s(0))) + V
... oriented to rule
	s(s(s(0))) + V -> s(s(s(V)))
+++ added new clause(s)
	s(s(s(xts))) = s(s(s(0))) + xts
... to conjectures
--- clause
	s(s(s(xts))) = s(s(s(0))) + xts
... reduced to tautology
	s(s(s(xts))) = s(s(s(xts)))
+++ active wrap
	s(.) = s(.) + V
... with sequence
	s(V) = s(0) + V
	s(s(V)) = s(s(0)) + V
	s(s(s(V))) = s(s(s(0))) + V
+++ primal grammar found for head
	{+, 0, s}
... and wrap
	s(.) = s(.) + V
+++ Presburger system  = {
	^f5(0; xts) -> xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0) -> 0
	^f9($n9 + 1) -> s(^f9($n9))
+++ }
+++ Lemma(s)           = 
	s(^f5($n; V)) = s(^f9($n)) + V

+++ Status of the Inference System
--- Conjectures:
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(s(0)) + V -> s(s(V))
	s(s(s(0))) + V -> s(s(s(V)))
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V) + (s(s(s(xts))) + xts) -> s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V) + (s(s(s(s(xts)))) + xts) -> s(s(s(s(V) + (s(xts) + xts))))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) -> s(s(s(s(V2) + (s(V1 + xts) + V1))))
--- Primal Grammar:
+++ Presburger system  = {
	^f2(0; V, xts) -> V + xts
	^f2($n2 + 1; V, xts) -> s(^f2($n2; V, xts))
	^f3(0; V2, V1, xts) -> s(V2) + (s(V1 + xts) + V1)
	^f3($n3 + 1; V2, V1, xts) -> s(^f3($n3; V2, V1, xts))
	^f5(0; xts) -> xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0) -> 0
	^f9($n9 + 1) -> s(^f9($n9))
+++ }
+++ Lemma(s)           = 
	s(V2) + (s(s(^f2($n; V1, xts))) + V1) = s(^f3($n; V1, V2, xts))
	s(V) + (s(s(^f5($n; xts))) + xts) = s(s(s(^f5($n; xts)) + (V + xts)))
	s(^f5($n; V)) = s(^f9($n)) + V

+++ treating clause
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
+++ inductive narrowing on conjecture
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
... induction variables of
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
... with variable xts
+++ creating new conjecture
	s(V) + (s(s(s(s(s(0))))) + 0) = s(s(s(s(s(V) + (s(0) + 0)))))
+++ creating new conjecture
	s(V) + (s(s(s(s(s(s(xts)))))) + s(xts)) = s(s(s(s(s(V) + (s(s(xts)) + s(xts))))))
--- clause
	s(V) + (s(s(s(s(s(0))))) + 0) = s(s(s(s(s(V) + (s(0) + 0)))))
... reduced to tautology
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(V))))))
--- clause
	s(V) + (s(s(s(s(s(s(xts)))))) + s(xts)) = s(s(s(s(s(V) + (s(s(xts)) + s(xts))))))
... reduced in 5 steps to
	s(s(V) + (s(s(s(s(s(s(xts)))))) + xts)) = s(s(s(s(s(s(s(V) + (s(xts) + xts)))))))
... decomposed into new clause(s)
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
+++ inductive narrowing succeeded
--- clause
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
... oriented to rule
	s(V) + (s(s(s(s(s(xts))))) + xts) -> s(s(s(s(s(V) + (s(xts) + xts)))))
+++ added new clause(s)
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(s(0)) + V -> s(s(V))
	s(s(s(0))) + V -> s(s(s(V)))
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V) + (s(s(s(xts))) + xts) -> s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V) + (s(s(s(s(xts)))) + xts) -> s(s(s(s(V) + (s(xts) + xts))))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V) + (s(s(s(s(s(xts))))) + xts) -> s(s(s(s(s(V) + (s(xts) + xts)))))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) -> s(s(s(s(V2) + (s(V1 + xts) + V1))))
--- Primal Grammar:
+++ Presburger system  = {
	^f2(0; V, xts) -> V + xts
	^f2($n2 + 1; V, xts) -> s(^f2($n2; V, xts))
	^f3(0; V2, V1, xts) -> s(V2) + (s(V1 + xts) + V1)
	^f3($n3 + 1; V2, V1, xts) -> s(^f3($n3; V2, V1, xts))
	^f5(0; xts) -> xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0) -> 0
	^f9($n9 + 1) -> s(^f9($n9))
+++ }
+++ Lemma(s)           = 
	s(V2) + (s(s(^f2($n; V1, xts))) + V1) = s(^f3($n; V1, V2, xts))
	s(V) + (s(s(^f5($n; xts))) + xts) = s(s(s(^f5($n; xts)) + (V + xts)))
	s(^f5($n; V)) = s(^f9($n)) + V

+++ treating clause
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
+++ inductive narrowing on conjecture
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
... induction variables of
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
... with variable xts
+++ creating new conjecture
	s(V) + (s(s(s(s(s(s(0)))))) + 0) = s(s(s(s(s(s(V) + (s(0) + 0))))))
+++ creating new conjecture
	s(V) + (s(s(s(s(s(s(s(xts))))))) + s(xts)) = s(s(s(s(s(s(V) + (s(s(xts)) + s(xts)))))))
--- clause
	s(V) + (s(s(s(s(s(s(0)))))) + 0) = s(s(s(s(s(s(V) + (s(0) + 0))))))
... reduced to tautology
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(V)))))))
--- clause
	s(V) + (s(s(s(s(s(s(s(xts))))))) + s(xts)) = s(s(s(s(s(s(V) + (s(s(xts)) + s(xts)))))))
... reduced in 5 steps to
	s(s(V) + (s(s(s(s(s(s(s(xts))))))) + xts)) = s(s(s(s(s(s(s(s(V) + (s(xts) + xts))))))))
... decomposed into new clause(s)
	s(V) + (s(s(s(s(s(s(s(xts))))))) + xts) = s(s(s(s(s(s(s(V) + (s(xts) + xts)))))))
+++ inductive narrowing succeeded
--- clause
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
... oriented to rule
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) -> s(s(s(s(s(s(V) + (s(xts) + xts))))))
+++ added new clause(s)
	s(V) + (s(s(s(s(s(s(s(xts))))))) + xts) = s(s(s(s(s(s(s(V) + (s(xts) + xts)))))))
... to conjectures
+++ active wrap
	s(V) + (s(s(.)) + xts) = s(s(.))
... with sequence
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(V) + (s(xts) + xts))))
	s(V) + (s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(V) + (s(xts) + xts)))))
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) = s(s(s(s(s(s(V) + (s(xts) + xts))))))
+++ primal grammar found for head
	{+, s}
... and wrap
	s(V) + (s(s(.)) + xts) = s(s(.))
+++ Presburger system  = {
	^f11(0; V, xts) -> s(V) + (s(xts) + xts)
	^f11($n11 + 1; V, xts) -> s(^f11($n11; V, xts))
	^f5(0; xts) -> xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	s(V) + (s(s(s(s(^f5($n; xts))))) + xts) = s(s(s(^f11($n; V, xts))))
--- clause
	s(V) + (s(s(s(s(s(s(s(xts))))))) + xts) = s(s(s(s(s(s(s(V) + (s(xts) + xts)))))))
... subsumed by lemma
	s(V) + (s(s(s(s(^f5($n; xts))))) + xts) = s(s(s(^f11($n; V, xts))))
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	s(V2) + (s(V1) + V1) = s(s(V1 + (V2 + V1)))
	s(V) + (s(s(xts)) + xts) = s(s(s(xts) + (V + xts)))
	s(V) + (s(s(s(xts))) + xts) = s(s(s(s(xts)) + (V + xts)))
	s(V) + (s(s(s(s(xts)))) + xts) = s(s(s(s(s(xts))) + (V + xts)))
--- Oriented hypotheses:
	0 + V -> V
	s(0) + V -> s(V)
	s(s(0)) + V -> s(s(V))
	s(s(s(0))) + V -> s(s(s(V)))
	s(V2) + (s(s(V1)) + V1) -> s(s(V2) + (s(V1) + V1))
	s(V3 + (V2 + (s(V3) + V1))) -> s(V3) + (s(V2 + V1) + V2)
	s(V) + (s(s(s(xts))) + xts) -> s(s(s(V) + (s(xts) + xts)))
	s(V2) + (s(s(V1 + xts)) + V1) -> s(s(V2) + (s(V1 + xts) + V1))
	s(V) + (s(s(s(s(xts)))) + xts) -> s(s(s(s(V) + (s(xts) + xts))))
	s(V2) + (s(s(s(V1 + xts))) + V1) -> s(s(s(V2) + (s(V1 + xts) + V1)))
	s(V) + (s(s(s(s(s(xts))))) + xts) -> s(s(s(s(s(V) + (s(xts) + xts)))))
	s(V2) + (s(s(s(s(V1 + xts)))) + V1) -> s(s(s(s(V2) + (s(V1 + xts) + V1))))
	s(V) + (s(s(s(s(s(s(xts)))))) + xts) -> s(s(s(s(s(s(V) + (s(xts) + xts))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f11(0; V, xts) -> s(V) + (s(xts) + xts)
	^f11($n11 + 1; V, xts) -> s(^f11($n11; V, xts))
	^f2(0; V, xts) -> V + xts
	^f2($n2 + 1; V, xts) -> s(^f2($n2; V, xts))
	^f3(0; V2, V1, xts) -> s(V2) + (s(V1 + xts) + V1)
	^f3($n3 + 1; V2, V1, xts) -> s(^f3($n3; V2, V1, xts))
	^f5(0; xts) -> xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0) -> 0
	^f9($n9 + 1) -> s(^f9($n9))
+++ }
+++ Lemma(s)           = 
	s(V2) + (s(s(^f2($n; V1, xts))) + V1) = s(^f3($n; V1, V2, xts))
	s(V) + (s(s(^f5($n; xts))) + xts) = s(s(s(^f5($n; xts)) + (V + xts)))
	s(^f5($n; V)) = s(^f9($n)) + V
	s(V) + (s(s(s(s(^f5($n; xts))))) + xts) = s(s(s(^f11($n; V, xts))))

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 17
... Number of induction steps      = 17
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Number of PG defined symbols   = 5
... Number of PG lemmas            = 4
... Elapsed time (seconds)         = 0.089
