+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 43-in.txt
+++ output      = 43-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 10
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification Generated from 43-in.txt successfully parsed
+++ Listing
         1: specification Generated
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      +: nat nat -> nat
         9: precedence
        10:      + > s > 0
        11: axioms
        12:      x + 0 = x;
        13:      x + s(y) = s(x + y);
        14: conjectures
        15:      s(s(s(z)) + s(s(s(s(s(x) + s(y)))))) = s(s(s(s(x)) + s(s(s(s(z)) + s(y)))));
        16: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x + 0 -> x
	x + s(y) -> s(x + y)
+++ inductive positions:
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	s(s(s(z)) + s(s(s(s(s(x) + s(y)))))) = s(s(s(s(x)) + s(s(s(s(z)) + s(y)))))

+++ inference system initiated
--- clause
	s(s(s(z)) + s(s(s(s(s(x) + s(y)))))) = s(s(s(s(x)) + s(s(s(s(z)) + s(y)))))
... reduced in 10 steps to
	s(s(s(s(s(s(s(s(z)) + (s(x) + y))))))) = s(s(s(s(s(s(s(x)) + (s(s(z)) + y))))))
... decomposed into new clause(s)
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
+++ treating clause
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
+++ inductive narrowing on conjecture
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
... induction variables of
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
... are:
	y:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
... with variable y
+++ creating new conjecture
	s(s(s(z)) + (s(x) + 0)) = s(s(x)) + (s(s(z)) + 0)
+++ creating new conjecture
	s(s(s(z)) + (s(x) + s(xts))) = s(s(x)) + (s(s(z)) + s(xts))
--- clause
	s(s(s(z)) + (s(x) + 0)) = s(s(x)) + (s(s(z)) + 0)
... reduced in 5 steps to
	s(s(s(s(z)) + x)) = s(s(s(s(x)) + z))
--- clause
	s(s(s(z)) + (s(x) + s(xts))) = s(s(x)) + (s(s(z)) + s(xts))
... reduced in 4 steps to
	s(s(s(s(z)) + (s(x) + xts))) = s(s(s(x)) + (s(s(z)) + xts))
... decomposed into new clause(s)
	s(s(z)) + x = s(s(x)) + z
... decomposed into new clause(s)
	s(s(s(z)) + (s(x) + xts)) = s(s(x)) + (s(s(z)) + xts)
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
+++ moved
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(z)) + x = s(s(x)) + z
	s(s(s(z)) + (s(x) + xts)) = s(s(x)) + (s(s(z)) + xts)
... to conjectures
--- clause
	s(s(s(z)) + (s(x) + xts)) = s(s(x)) + (s(s(z)) + xts)
... subsumed by hypothese
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)

+++ Status of the Inference System
--- Conjectures:
	s(s(z)) + x = s(s(x)) + z
--- Non-orientable hypotheses:
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(z)) + x = s(s(x)) + z
+++ inductive narrowing on conjecture
	s(s(z)) + x = s(s(x)) + z
... induction variables of
	s(s(z)) + x = s(s(x)) + z
... are:
	x:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(z)) + x = s(s(x)) + z
... with variable x
+++ creating new conjecture
	s(s(z)) + 0 = s(s(0)) + z
+++ creating new conjecture
	s(s(z)) + s(xts) = s(s(s(xts))) + z
--- clause
	s(s(z)) + 0 = s(s(0)) + z
... reduced in 1 step to
	s(s(z)) = s(s(0)) + z
--- clause
	s(s(z)) + s(xts) = s(s(s(xts))) + z
... reduced in 1 step to
	s(s(s(z)) + xts) = s(s(s(xts))) + z
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(z)) + x = s(s(x)) + z
+++ moved
	s(s(z)) + x = s(s(x)) + z
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(z)) = s(s(0)) + z
	s(s(s(z)) + xts) = s(s(s(xts))) + z
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(z)) + x = s(s(x)) + z
... to clause
	s(s(s(z)) + xts) = s(s(s(xts))) + z
... modified clause
	s(s(s(xts)) + z) = s(s(s(xts))) + z

+++ Status of the Inference System
--- Conjectures:
	s(s(z)) = s(s(0)) + z
	s(s(s(xts)) + z) = s(s(s(xts))) + z
--- Non-orientable hypotheses:
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
	s(s(z)) + x = s(s(x)) + z
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(z)) = s(s(0)) + z
+++ inductive narrowing on conjecture
	s(s(z)) = s(s(0)) + z
... induction variables of
	s(s(z)) = s(s(0)) + z
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(z)) = s(s(0)) + z
... with variable z
+++ creating new conjecture
	s(s(0)) = s(s(0)) + 0
+++ creating new conjecture
	s(s(s(xts))) = s(s(0)) + s(xts)
--- clause
	s(s(0)) = s(s(0)) + 0
... reduced to tautology
	s(s(0)) = s(s(0))
--- clause
	s(s(s(xts))) = s(s(0)) + s(xts)
... reduced in 1 step to
	s(s(s(xts))) = s(s(s(0)) + xts)
... decomposed into new clause(s)
	s(s(xts)) = s(s(0)) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(z)) = s(s(0)) + z
... oriented to rule
	s(s(0)) + z -> s(s(z))
+++ added new clause(s)
	s(s(xts)) = s(s(0)) + xts
... to conjectures
--- clause
	s(s(xts)) = s(s(0)) + xts
... reduced to tautology
	s(s(xts)) = s(s(xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts)) + z) = s(s(s(xts))) + z
--- Non-orientable hypotheses:
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
	s(s(z)) + x = s(s(x)) + z
--- Oriented hypotheses:
	s(s(0)) + z -> s(s(z))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts)) + z) = s(s(s(xts))) + z
+++ inductive narrowing on conjecture
	s(s(s(xts)) + z) = s(s(s(xts))) + z
... induction variables of
	s(s(s(xts)) + z) = s(s(s(xts))) + z
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts)) + z) = s(s(s(xts))) + z
... with variable z
+++ creating new conjecture
	s(s(s(xts)) + 0) = s(s(s(xts))) + 0
+++ creating new conjecture
	s(s(s(xts2)) + s(xts1)) = s(s(s(xts2))) + s(xts1)
--- clause
	s(s(s(xts)) + 0) = s(s(s(xts))) + 0
... reduced to tautology
	s(s(s(xts))) = s(s(s(xts)))
--- clause
	s(s(s(xts2)) + s(xts1)) = s(s(s(xts2))) + s(xts1)
... reduced in 2 steps to
	s(s(s(s(xts2)) + xts1)) = s(s(s(s(xts2))) + xts1)
... decomposed into new clause(s)
	s(s(s(xts2)) + xts1) = s(s(s(xts2))) + xts1
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts)) + z) = s(s(s(xts))) + z
... oriented to rule
	s(s(s(xts))) + z -> s(s(s(xts)) + z)
+++ added new clause(s)
	s(s(s(xts2)) + xts1) = s(s(s(xts2))) + xts1
... to conjectures
--- clause
	s(s(s(xts2)) + xts1) = s(s(s(xts2))) + xts1
... reduced to tautology
	s(s(s(xts2)) + xts1) = s(s(s(xts2)) + xts1)

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	s(s(s(z)) + (s(x) + y)) = s(s(x)) + (s(s(z)) + y)
	s(s(z)) + x = s(s(x)) + z
--- Oriented hypotheses:
	s(s(0)) + z -> s(s(z))
	s(s(s(xts))) + z -> s(s(s(xts)) + z)
--- Primal Grammar:
	<empty>

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 4
... Number of induction steps      = 4
... Number of equational steps     = 1
... Number of case rewriting steps = 0
... Elapsed time (seconds)         = 0.003
