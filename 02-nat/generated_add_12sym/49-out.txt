+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 49-in.txt
+++ output      = 49-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 37
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification Generated from 49-in.txt successfully parsed
+++ Listing
         1: specification Generated
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      +: nat nat -> nat
         9: precedence
        10:      + > s > 0
        11: axioms
        12:      x + 0 = x;
        13:      x + s(y) = s(x + y);
        14: conjectures
        15:      s(s((s(V4) + (s(s(V3)) + (V2 + s(V4)))) + s(V1))) = s(s(s(V4) + s(s(s(V2 + s(V3 + V1))) + V4)));
        16: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x + 0 -> x
	x + s(y) -> s(x + y)
+++ inductive positions:
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	s(s((s(V4) + (s(s(V3)) + (V2 + s(V4)))) + s(V1))) = s(s(s(V4) + s(s(s(V2 + s(V3 + V1))) + V4)))

+++ inference system initiated
--- clause
	s(s((s(V4) + (s(s(V3)) + (V2 + s(V4)))) + s(V1))) = s(s(s(V4) + s(s(s(V2 + s(V3 + V1))) + V4)))
... reduced in 6 steps to
	s(s(s(s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1))) = s(s(s(s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4))))
... decomposed into new clause(s)
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
+++ treating clause
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
+++ inductive narrowing on conjecture
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
... induction variables of
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
... are:
	V1:nat
	V4:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
... with variable V1
+++ creating new conjecture
	s(s(V3) + (s(s(V2)) + (V1 + V3))) + 0 = s(V3) + (s(s(s(V1 + (V2 + 0)))) + V3)
+++ creating new conjecture
	s(s(V3) + (s(s(V2)) + (V1 + V3))) + s(xts) = s(V3) + (s(s(s(V1 + (V2 + s(xts))))) + V3)
--- clause
	s(s(V3) + (s(s(V2)) + (V1 + V3))) + 0 = s(V3) + (s(s(s(V1 + (V2 + 0)))) + V3)
... reduced in 2 steps to
	s(s(V3) + (s(s(V2)) + (V1 + V3))) = s(V3) + (s(s(s(V1 + V2))) + V3)
--- clause
	s(s(V3) + (s(s(V2)) + (V1 + V3))) + s(xts) = s(V3) + (s(s(s(V1 + (V2 + s(xts))))) + V3)
... reduced in 3 steps to
	s(s(s(V3) + (s(s(V2)) + (V1 + V3))) + xts) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
+++ moved
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(V3) + (s(s(V2)) + (V1 + V3))) = s(V3) + (s(s(s(V1 + V2))) + V3)
	s(s(s(V3) + (s(s(V2)) + (V1 + V3))) + xts) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
... to clause
	s(s(s(V3) + (s(s(V2)) + (V1 + V3))) + xts) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)
... modified clause
	s(s(V3) + (s(s(s(V2 + (V1 + xts)))) + V3)) = s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3)

+++ Status of the Inference System
--- Conjectures:
	s(s(V3) + (s(s(V2)) + (V1 + V3))) = s(V3) + (s(s(s(V1 + V2))) + V3)
	s(s(V3) + (s(s(s(V2 + (V1 + xts)))) + V3)) = s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(V3) + (s(s(V2)) + (V1 + V3))) = s(V3) + (s(s(s(V1 + V2))) + V3)
+++ inductive narrowing on conjecture
	s(s(V3) + (s(s(V2)) + (V1 + V3))) = s(V3) + (s(s(s(V1 + V2))) + V3)
... induction variables of
	s(s(V3) + (s(s(V2)) + (V1 + V3))) = s(V3) + (s(s(s(V1 + V2))) + V3)
... are:
	V2:nat
	V3:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(V3) + (s(s(V2)) + (V1 + V3))) = s(V3) + (s(s(s(V1 + V2))) + V3)
... with variable V2
+++ creating new conjecture
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1 + 0))) + V2)
+++ creating new conjecture
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(V1 + s(xts)))) + V2)
--- clause
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1 + 0))) + V2)
... reduced in 1 step to
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1))) + V2)
--- clause
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(V1 + s(xts)))) + V2)
... reduced in 1 step to
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
+++ inductive narrowing succeeded
--- clause
	s(s(V3) + (s(s(V2)) + (V1 + V3))) = s(V3) + (s(s(s(V1 + V2))) + V3)
... oriented to rule
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
+++ added new clause(s)
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1))) + V2)
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
... to conjectures
--- clause
	s(s(V3) + (s(s(s(V2 + (V1 + xts)))) + V3)) = s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3)
... reduced in 1 step to
	s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3)))) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3)))) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1))) + V2)
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3)))) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)
+++ inductive narrowing on conjecture
	s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3)))) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)
... induction variables of
	s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3)))) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)
... are:
	V3:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3)))) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)
... with variable V3
+++ creating new conjecture
	s(s(s(0) + (s(s(V2 + xts)) + (V1 + 0)))) = s(0) + (s(s(s(s(V1 + (V2 + xts))))) + 0)
+++ creating new conjecture
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + s(xts2))))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + s(xts2))
--- clause
	s(s(s(0) + (s(s(V2 + xts)) + (V1 + 0)))) = s(0) + (s(s(s(s(V1 + (V2 + xts))))) + 0)
... reduced in 6 steps to
	s(s(s(0) + (s(s(V2 + xts)) + V1))) = s(s(s(s(s(0) + (V1 + (V2 + xts))))))
--- clause
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + s(xts2))))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + s(xts2))
... reduced in 5 steps to
	s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))) = s(s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2))
... decomposed into new clause(s)
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
... decomposed into new clause(s)
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3)))) = s(V3) + (s(s(s(s(V1 + (V2 + xts))))) + V3)
... oriented to rule
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
+++ added new clause(s)
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1))) + V2)
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1))) + V2)
+++ inductive narrowing on conjecture
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1))) + V2)
... induction variables of
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1))) + V2)
... are:
	V2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1))) + V2)
... with variable V2
+++ creating new conjecture
	s(s(0) + (s(s(0)) + (V + 0))) = s(0) + (s(s(s(V))) + 0)
+++ creating new conjecture
	s(s(s(xts)) + (s(s(0)) + (V + s(xts)))) = s(s(xts)) + (s(s(s(V))) + s(xts))
--- clause
	s(s(0) + (s(s(0)) + (V + 0))) = s(0) + (s(s(s(V))) + 0)
... reduced in 5 steps to
	s(s(0) + (s(s(0)) + V)) = s(s(s(s(0) + V)))
--- clause
	s(s(s(xts)) + (s(s(0)) + (V + s(xts)))) = s(s(xts)) + (s(s(s(V))) + s(xts))
... reduced in 5 steps to
	s(s(s(s(xts)) + (s(s(0)) + (V + xts)))) = s(s(s(xts)) + (s(s(s(V))) + xts))
... decomposed into new clause(s)
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
... decomposed into new clause(s)
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(V2) + (s(s(0)) + (V1 + V2))) = s(V2) + (s(s(s(V1))) + V2)
... oriented to rule
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
+++ added new clause(s)
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
+++ inductive narrowing on conjecture
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
... induction variables of
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
... are:
	V2:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
... with variable V2
+++ creating new conjecture
	s(s(0) + (s(s(s(xts))) + (V + 0))) = s(0) + (s(s(s(s(V + xts)))) + 0)
+++ creating new conjecture
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + s(xts2)))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + s(xts2))
--- clause
	s(s(0) + (s(s(s(xts))) + (V + 0))) = s(0) + (s(s(s(s(V + xts)))) + 0)
... reduced in 6 steps to
	s(s(0) + (s(s(s(xts))) + V)) = s(s(s(s(s(0) + (V + xts)))))
--- clause
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + s(xts2)))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + s(xts2))
... reduced in 5 steps to
	s(s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))) = s(s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2))
... decomposed into new clause(s)
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
... decomposed into new clause(s)
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(V2) + (s(s(s(xts))) + (V1 + V2))) = s(V2) + (s(s(s(s(V1 + xts)))) + V2)
... oriented to rule
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
+++ added new clause(s)
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
+++ inductive narrowing on conjecture
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
... induction variables of
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
... with variable xts
+++ creating new conjecture
	s(0) + (s(s(V2 + 0)) + V1) = s(s(s(0) + (V1 + (V2 + 0))))
+++ creating new conjecture
	s(0) + (s(s(V2 + s(xts))) + V1) = s(s(s(0) + (V1 + (V2 + s(xts)))))
--- clause
	s(0) + (s(s(V2 + 0)) + V1) = s(s(s(0) + (V1 + (V2 + 0))))
... reduced in 2 steps to
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
--- clause
	s(0) + (s(s(V2 + s(xts))) + V1) = s(s(s(0) + (V1 + (V2 + s(xts)))))
... reduced in 4 steps to
	s(0) + (s(s(s(V2 + xts))) + V1) = s(s(s(s(0) + (V1 + (V2 + xts)))))
+++ inductive narrowing succeeded
--- clause
	s(0) + (s(s(V2 + xts)) + V1) = s(s(s(0) + (V1 + (V2 + xts))))
... oriented to rule
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
+++ added new clause(s)
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
	s(0) + (s(s(s(V2 + xts))) + V1) = s(s(s(s(0) + (V1 + (V2 + xts)))))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
	s(0) + (s(s(s(V2 + xts))) + V1) = s(s(s(s(0) + (V1 + (V2 + xts)))))
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
+++ inductive narrowing on conjecture
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
... induction variables of
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(s(xts)) + (s(s(V2 + 0)) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(V1 + (V2 + 0))))) + xts)
+++ creating new conjecture
	s(s(s(s(xts2)) + (s(s(V2 + s(xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + s(xts1)))))) + xts2)
--- clause
	s(s(s(s(xts)) + (s(s(V2 + 0)) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(V1 + (V2 + 0))))) + xts)
... reduced in 2 steps to
	s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(V1 + V2)))) + xts)
--- clause
	s(s(s(s(xts2)) + (s(s(V2 + s(xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + s(xts1)))))) + xts2)
... reduced in 3 steps to
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(V1 + (V2 + xts1))))) + xts2)
... oriented to rule
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
+++ added new clause(s)
	s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(V1 + V2)))) + xts)
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
	s(0) + (s(s(s(V2 + xts))) + V1) = s(s(s(s(0) + (V1 + (V2 + xts)))))
	s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(V1 + V2)))) + xts)
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
+++ inductive narrowing on conjecture
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
... induction variables of
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
... with variable V
+++ creating new conjecture
	s(0) + (s(s(0)) + 0) = s(s(s(0) + 0))
+++ creating new conjecture
	s(0) + (s(s(0)) + s(xts)) = s(s(s(0) + s(xts)))
--- clause
	s(0) + (s(s(0)) + 0) = s(s(s(0) + 0))
... reduced to tautology
	s(s(s(0))) = s(s(s(0)))
--- clause
	s(0) + (s(s(0)) + s(xts)) = s(s(s(0) + s(xts)))
... reduced in 3 steps to
	s(s(0) + (s(s(0)) + xts)) = s(s(s(s(0) + xts)))
... decomposed into new clause(s)
	s(0) + (s(s(0)) + xts) = s(s(s(0) + xts))
+++ inductive narrowing succeeded
--- clause
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
... oriented to rule
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
+++ added new clause(s)
	s(0) + (s(s(0)) + xts) = s(s(s(0) + xts))
... to conjectures
--- clause
	s(0) + (s(s(0)) + xts) = s(s(s(0) + xts))
... reduced to tautology
	s(s(s(0) + xts)) = s(s(s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
	s(0) + (s(s(s(V2 + xts))) + V1) = s(s(s(s(0) + (V1 + (V2 + xts)))))
	s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(V1 + V2)))) + xts)
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
+++ inductive narrowing on conjecture
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
... induction variables of
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(0)) + (V + 0))) = s(s(0)) + (s(s(s(V))) + 0)
+++ creating new conjecture
	s(s(s(s(xts))) + (s(s(0)) + (V + s(xts)))) = s(s(s(xts))) + (s(s(s(V))) + s(xts))
--- clause
	s(s(s(0)) + (s(s(0)) + (V + 0))) = s(s(0)) + (s(s(s(V))) + 0)
... reduced in 5 steps to
	s(s(s(0)) + (s(s(0)) + V)) = s(s(s(s(s(0)) + V)))
--- clause
	s(s(s(s(xts))) + (s(s(0)) + (V + s(xts)))) = s(s(s(xts))) + (s(s(s(V))) + s(xts))
... reduced in 5 steps to
	s(s(s(s(s(xts))) + (s(s(0)) + (V + xts)))) = s(s(s(s(xts))) + (s(s(s(V))) + xts))
... decomposed into new clause(s)
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
... decomposed into new clause(s)
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
... oriented to rule
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
+++ added new clause(s)
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
	s(0) + (s(s(s(V2 + xts))) + V1) = s(s(s(s(0) + (V1 + (V2 + xts)))))
	s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(V1 + V2)))) + xts)
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
+++ inductive narrowing on conjecture
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
... induction variables of
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
... are:
	V:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
... with variable V
+++ creating new conjecture
	s(0) + (s(s(s(xts))) + 0) = s(s(s(s(0) + (0 + xts))))
+++ creating new conjecture
	s(0) + (s(s(s(xts2))) + s(xts1)) = s(s(s(s(0) + (s(xts1) + xts2))))
--- clause
	s(0) + (s(s(s(xts))) + 0) = s(s(s(s(0) + (0 + xts))))
... reduced in 4 steps to
	s(s(s(s(0) + xts))) = s(s(s(s(0) + (0 + xts))))
--- clause
	s(0) + (s(s(s(xts2))) + s(xts1)) = s(s(s(s(0) + (s(xts1) + xts2))))
... reduced in 2 steps to
	s(s(0) + (s(s(s(xts2))) + xts1)) = s(s(s(s(0) + (s(xts1) + xts2))))
... decomposed into new clause(s)
	s(0) + xts = s(0) + (0 + xts)
... decomposed into new clause(s)
	s(0) + (s(s(s(xts2))) + xts1) = s(s(s(0) + (s(xts1) + xts2)))
+++ inductive narrowing succeeded
--- clause
	s(0) + (s(s(s(xts))) + V) = s(s(s(s(0) + (V + xts))))
... oriented to rule
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
+++ added new clause(s)
	s(0) + xts = s(0) + (0 + xts)
	s(0) + (s(s(s(xts2))) + xts1) = s(s(s(0) + (s(xts1) + xts2)))
... to conjectures
--- clause
	s(0) + (s(s(s(V2 + xts))) + V1) = s(s(s(s(0) + (V1 + (V2 + xts)))))
... reduced to tautology
	s(s(s(s(0) + (V2 + (V1 + xts))))) = s(s(s(s(0) + (V2 + (V1 + xts)))))
--- clause
	s(0) + (s(s(s(xts2))) + xts1) = s(s(s(0) + (s(xts1) + xts2)))
... reduced in 1 step to
	s(s(s(s(0) + (xts2 + xts1)))) = s(s(s(0) + (s(xts2) + xts1)))
... decomposed into new clause(s)
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
	s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(V1 + V2)))) + xts)
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
	s(0) + xts = s(0) + (0 + xts)
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
+++ inductive narrowing on conjecture
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
... induction variables of
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V + 0)))) + xts)
+++ creating new conjecture
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + s(xts1))))) + xts2)
--- clause
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V + 0)))) + xts)
... reduced in 1 step to
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
--- clause
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + s(xts1))))) + xts2)
... reduced in 1 step to
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2)
... oriented to rule
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
+++ added new clause(s)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
... to conjectures
--- clause
	s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(V1 + V2)))) + xts)
... reduced in 1 step to
	s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))) = s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))
... decomposed into new clause(s)
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))

+++ Status of the Inference System
--- Conjectures:
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
	s(0) + xts = s(0) + (0 + xts)
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
+++ inductive narrowing on conjecture
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
... induction variables of
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
... are:
	V1:nat
	V2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
... with variable V1
+++ creating new conjecture
	s(0) + (s(s(V)) + 0) = s(s(s(0) + (0 + V)))
+++ creating new conjecture
	s(0) + (s(s(V)) + s(xts)) = s(s(s(0) + (s(xts) + V)))
--- clause
	s(0) + (s(s(V)) + 0) = s(s(s(0) + (0 + V)))
... reduced in 3 steps to
	s(s(s(0) + V)) = s(s(s(0) + (0 + V)))
--- clause
	s(0) + (s(s(V)) + s(xts)) = s(s(s(0) + (s(xts) + V)))
... reduced in 2 steps to
	s(s(0) + (s(s(V)) + xts)) = s(s(s(0) + (s(xts) + V)))
... decomposed into new clause(s)
	s(0) + V = s(0) + (0 + V)
... decomposed into new clause(s)
	s(0) + (s(s(V)) + xts) = s(s(0) + (s(xts) + V))
--- clause
	s(0) + V = s(0) + (0 + V)
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(0) + (s(s(V2)) + V1) = s(s(s(0) + (V1 + V2)))
... oriented to rule
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
+++ added new clause(s)
	s(0) + (s(s(V)) + xts) = s(s(0) + (s(xts) + V))
... to conjectures
--- clause
	s(0) + (s(s(V)) + xts) = s(s(0) + (s(xts) + V))
... reduced in 1 step to
	s(s(s(0) + (xts + V))) = s(s(0) + (s(xts) + V))
... decomposed into new clause(s)
	s(s(0) + (xts + V)) = s(0) + (s(xts) + V)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
	s(0) + xts = s(0) + (0 + xts)
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
	s(s(0) + (xts + V)) = s(0) + (s(xts) + V)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
+++ inductive narrowing on conjecture
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
... induction variables of
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(s(xts)) + (s(s(s(V2 + 0))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + (V2 + 0)))))) + xts)
+++ creating new conjecture
	s(s(s(s(xts2)) + (s(s(s(V2 + s(xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + s(xts1))))))) + xts2)
--- clause
	s(s(s(s(xts)) + (s(s(s(V2 + 0))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + (V2 + 0)))))) + xts)
... reduced in 2 steps to
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + V2))))) + xts)
--- clause
	s(s(s(s(xts2)) + (s(s(s(V2 + s(xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + s(xts1))))))) + xts2)
... reduced in 3 steps to
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(V1 + (V2 + xts1)))))) + xts2)
... oriented to rule
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
+++ added new clause(s)
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + V2))))) + xts)
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
	s(0) + xts = s(0) + (0 + xts)
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
	s(s(0) + (xts + V)) = s(0) + (s(xts) + V)
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + V2))))) + xts)
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
+++ inductive narrowing on conjecture
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
... induction variables of
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
... with variable V
+++ creating new conjecture
	s(s(0)) + (s(s(0)) + 0) = s(s(s(s(0)) + 0))
+++ creating new conjecture
	s(s(0)) + (s(s(0)) + s(xts)) = s(s(s(s(0)) + s(xts)))
--- clause
	s(s(0)) + (s(s(0)) + 0) = s(s(s(s(0)) + 0))
... reduced to tautology
	s(s(s(s(0)))) = s(s(s(s(0))))
--- clause
	s(s(0)) + (s(s(0)) + s(xts)) = s(s(s(s(0)) + s(xts)))
... reduced in 3 steps to
	s(s(s(0)) + (s(s(0)) + xts)) = s(s(s(s(s(0)) + xts)))
... decomposed into new clause(s)
	s(s(0)) + (s(s(0)) + xts) = s(s(s(s(0)) + xts))
+++ inductive narrowing succeeded
--- clause
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
... oriented to rule
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
+++ added new clause(s)
	s(s(0)) + (s(s(0)) + xts) = s(s(s(s(0)) + xts))
... to conjectures
--- clause
	s(s(0)) + (s(s(0)) + xts) = s(s(s(s(0)) + xts))
... reduced to tautology
	s(s(s(s(0)) + xts)) = s(s(s(s(0)) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
	s(0) + xts = s(0) + (0 + xts)
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
	s(s(0) + (xts + V)) = s(0) + (s(xts) + V)
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + V2))))) + xts)
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
... induction variables of
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(0))) + (s(s(0)) + (V + 0))) = s(s(s(0))) + (s(s(s(V))) + 0)
+++ creating new conjecture
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + s(xts)))) = s(s(s(s(xts)))) + (s(s(s(V))) + s(xts))
--- clause
	s(s(s(s(0))) + (s(s(0)) + (V + 0))) = s(s(s(0))) + (s(s(s(V))) + 0)
... reduced in 5 steps to
	s(s(s(s(0))) + (s(s(0)) + V)) = s(s(s(s(s(s(0))) + V)))
--- clause
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + s(xts)))) = s(s(s(s(xts)))) + (s(s(s(V))) + s(xts))
... reduced in 5 steps to
	s(s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts)))) = s(s(s(s(s(xts)))) + (s(s(s(V))) + xts))
... decomposed into new clause(s)
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
... decomposed into new clause(s)
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
... oriented to rule
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
+++ added new clause(s)
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(0) + xts = s(0) + (0 + xts)
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
	s(s(0) + (xts + V)) = s(0) + (s(xts) + V)
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + V2))))) + xts)
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(0) + xts = s(0) + (0 + xts)
+++ inductive narrowing on conjecture
	s(0) + xts = s(0) + (0 + xts)
... induction variables of
	s(0) + xts = s(0) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(0) + xts = s(0) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(0) + 0 = s(0) + (0 + 0)
+++ creating new conjecture
	s(0) + s(xts) = s(0) + (0 + s(xts))
--- clause
	s(0) + 0 = s(0) + (0 + 0)
... reduced to tautology
	s(0) = s(0)
--- clause
	s(0) + s(xts) = s(0) + (0 + s(xts))
... reduced in 3 steps to
	s(s(0) + xts) = s(s(0) + (0 + xts))
... decomposed into new clause(s)
	s(0) + xts = s(0) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(0) + xts = s(0) + (0 + xts)
... oriented to rule
	s(0) + (0 + xts) -> s(0) + xts
+++ added new clause(s)
	s(0) + xts = s(0) + (0 + xts)
... to conjectures
--- clause
	s(0) + xts = s(0) + (0 + xts)
... reduced to tautology
	s(0) + xts = s(0) + xts

+++ Status of the Inference System
--- Conjectures:
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
	s(s(0) + (xts + V)) = s(0) + (s(xts) + V)
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + V2))))) + xts)
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
+++ inductive narrowing on conjecture
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
... induction variables of
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
... with variable xts1
+++ creating new conjecture
	s(s(0) + (xts + 0)) = s(0) + (s(xts) + 0)
+++ creating new conjecture
	s(s(0) + (xts2 + s(xts1))) = s(0) + (s(xts2) + s(xts1))
--- clause
	s(s(0) + (xts + 0)) = s(0) + (s(xts) + 0)
... reduced to tautology
	s(s(0) + xts) = s(s(0) + xts)
--- clause
	s(s(0) + (xts2 + s(xts1))) = s(0) + (s(xts2) + s(xts1))
... reduced in 4 steps to
	s(s(s(0) + (xts2 + xts1))) = s(s(0) + (s(xts2) + xts1))
... decomposed into new clause(s)
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
--- clause
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(s(0) + (xts2 + xts1)) = s(0) + (s(xts2) + xts1)
... oriented to rule
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
--- clause
	s(s(0) + (xts + V)) = s(0) + (s(xts) + V)
... reduced to tautology
	s(s(0) + (xts + V)) = s(s(0) + (xts + V))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + V2))))) + xts)
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
+++ inductive narrowing on conjecture
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
... induction variables of
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(0))) + (V + 0))) = s(s(0)) + (s(s(s(s(V)))) + 0)
+++ creating new conjecture
	s(s(s(s(xts))) + (s(s(s(0))) + (V + s(xts)))) = s(s(s(xts))) + (s(s(s(s(V)))) + s(xts))
--- clause
	s(s(s(0)) + (s(s(s(0))) + (V + 0))) = s(s(0)) + (s(s(s(s(V)))) + 0)
... reduced in 6 steps to
	s(s(s(0)) + (s(s(s(0))) + V)) = s(s(s(s(s(s(0)) + V))))
--- clause
	s(s(s(s(xts))) + (s(s(s(0))) + (V + s(xts)))) = s(s(s(xts))) + (s(s(s(s(V)))) + s(xts))
... reduced in 5 steps to
	s(s(s(s(s(xts))) + (s(s(s(0))) + (V + xts)))) = s(s(s(s(xts))) + (s(s(s(s(V)))) + xts))
... decomposed into new clause(s)
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
... decomposed into new clause(s)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
... oriented to rule
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
+++ added new clause(s)
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + V2))))) + xts)
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
+++ inductive narrowing on conjecture
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
... induction variables of
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(xts)) + (s(s(s(s(0)))) + (V + xts))) = s(s(xts)) + (s(s(s(s(s(V + 0))))) + xts)
+++ creating new conjecture
	s(s(s(xts2)) + (s(s(s(s(s(xts1))))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + s(xts1)))))) + xts2)
--- clause
	s(s(s(xts)) + (s(s(s(s(0)))) + (V + xts))) = s(s(xts)) + (s(s(s(s(s(V + 0))))) + xts)
... reduced in 1 step to
	s(s(s(xts)) + (s(s(s(s(0)))) + (V + xts))) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
--- clause
	s(s(s(xts2)) + (s(s(s(s(s(xts1))))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + s(xts1)))))) + xts2)
... reduced in 1 step to
	s(s(s(xts2)) + (s(s(s(s(s(xts1))))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2)
... oriented to rule
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
+++ added new clause(s)
	s(s(s(xts)) + (s(s(s(s(0)))) + (V + xts))) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
	s(s(s(xts2)) + (s(s(s(s(s(xts1))))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
... to conjectures
--- clause
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(xts)) + (s(s(s(s(s(V1 + V2))))) + xts)
... reduced in 1 step to
	s(s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts)))) = s(s(s(xts)) + (s(s(s(s(V2)))) + (V1 + xts)))
... decomposed into new clause(s)
	s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts))) = s(s(xts)) + (s(s(s(s(V2)))) + (V1 + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts)) + (s(s(s(s(0)))) + (V + xts))) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
	s(s(s(xts2)) + (s(s(s(s(s(xts1))))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
	s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts))) = s(s(xts)) + (s(s(s(s(V2)))) + (V1 + xts))
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
+++ inductive narrowing on conjecture
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
... induction variables of
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(V2)) + (V1 + 0))) = s(s(0)) + (s(s(s(V2))) + (V1 + 0))
+++ creating new conjecture
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + s(xts)))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + s(xts)))
--- clause
	s(s(s(0)) + (s(s(V2)) + (V1 + 0))) = s(s(0)) + (s(s(s(V2))) + (V1 + 0))
... reduced in 2 steps to
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
--- clause
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + s(xts)))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + s(xts)))
... reduced in 6 steps to
	s(s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))) = s(s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)))
... decomposed into new clause(s)
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
... oriented to rule
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
+++ added new clause(s)
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
... to conjectures
--- clause
	s(s(s(s(xts2)) + (s(s(s(s(V2 + xts1)))) + (V1 + xts2)))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
... reduced in 2 steps to
	s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
--- clause
	s(s(s(xts)) + (s(s(s(s(0)))) + (V + xts))) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
... reduced in 2 steps to
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
--- clause
	s(s(s(xts2)) + (s(s(s(s(s(xts1))))) + (V + xts2))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
... reduced in 3 steps to
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
--- clause
	s(s(s(xts)) + (s(s(s(V2))) + (V1 + xts))) = s(s(xts)) + (s(s(s(s(V2)))) + (V1 + xts))
... reduced to tautology
	s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))) = s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
... induction variables of
	s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(s(s(s(xts)) + (s(s(V2 + 0)) + (V1 + xts)))))) = s(s(xts)) + (s(s(s(s(s(s(V1 + (V2 + 0))))))) + xts)
+++ creating new conjecture
	s(s(s(s(s(s(xts2)) + (s(s(V2 + s(xts1))) + (V1 + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + s(xts1)))))))) + xts2)
--- clause
	s(s(s(s(s(s(xts)) + (s(s(V2 + 0)) + (V1 + xts)))))) = s(s(xts)) + (s(s(s(s(s(s(V1 + (V2 + 0))))))) + xts)
... reduced in 2 steps to
	s(s(s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))))) = s(s(xts)) + (s(s(s(s(s(s(V1 + V2)))))) + xts)
--- clause
	s(s(s(s(s(s(xts2)) + (s(s(V2 + s(xts1))) + (V1 + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + s(xts1)))))))) + xts2)
... reduced in 4 steps to
	s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))) = s(s(xts2)) + (s(s(s(s(s(s(s(V1 + (V2 + xts1)))))))) + xts2)
--- clause
	s(s(s(s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))))) = s(s(xts)) + (s(s(s(s(s(s(V1 + V2)))))) + xts)
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V1 + (V2 + xts1))))))) + xts2)
... oriented to rule
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
+++ added new clause(s)
	s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))) = s(s(xts2)) + (s(s(s(s(s(s(s(V1 + (V2 + xts1)))))))) + xts2)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))) = s(s(xts2)) + (s(s(s(s(s(s(s(V1 + (V2 + xts1)))))))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
+++ inductive narrowing on conjecture
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
... induction variables of
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
... with variable V
+++ creating new conjecture
	s(s(s(0))) + (s(s(0)) + 0) = s(s(s(s(s(0))) + 0))
+++ creating new conjecture
	s(s(s(0))) + (s(s(0)) + s(xts)) = s(s(s(s(s(0))) + s(xts)))
--- clause
	s(s(s(0))) + (s(s(0)) + 0) = s(s(s(s(s(0))) + 0))
... reduced to tautology
	s(s(s(s(s(0))))) = s(s(s(s(s(0)))))
--- clause
	s(s(s(0))) + (s(s(0)) + s(xts)) = s(s(s(s(s(0))) + s(xts)))
... reduced in 3 steps to
	s(s(s(s(0))) + (s(s(0)) + xts)) = s(s(s(s(s(s(0))) + xts)))
... decomposed into new clause(s)
	s(s(s(0))) + (s(s(0)) + xts) = s(s(s(s(s(0))) + xts))
+++ inductive narrowing succeeded
--- clause
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
... oriented to rule
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
+++ added new clause(s)
	s(s(s(0))) + (s(s(0)) + xts) = s(s(s(s(s(0))) + xts))
... to conjectures
--- clause
	s(s(s(0))) + (s(s(0)) + xts) = s(s(s(s(s(0))) + xts))
... reduced to tautology
	s(s(s(s(s(0))) + xts)) = s(s(s(s(s(0))) + xts))
+++ active wrap
	s(.) + (s(s(0)) + V) = s(s(s(.) + V))
... with sequence
	s(0) + (s(s(0)) + V) = s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) = s(s(s(s(0)) + V))
	s(s(s(0))) + (s(s(0)) + V) = s(s(s(s(s(0))) + V))
+++ primal grammar found for head
	{+, 0, s}
... and wrap
	s(.) + (s(s(0)) + V) = s(s(s(.) + V))
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))) = s(s(xts2)) + (s(s(s(s(s(s(s(V1 + (V2 + xts1)))))))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))

+++ treating clause
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
... induction variables of
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0)))) + (s(s(0)) + (V + 0))) = s(s(s(s(0)))) + (s(s(s(V))) + 0)
+++ creating new conjecture
	s(s(s(s(s(s(xts))))) + (s(s(0)) + (V + s(xts)))) = s(s(s(s(s(xts))))) + (s(s(s(V))) + s(xts))
--- clause
	s(s(s(s(s(0)))) + (s(s(0)) + (V + 0))) = s(s(s(s(0)))) + (s(s(s(V))) + 0)
... reduced in 5 steps to
	s(s(s(s(s(0)))) + (s(s(0)) + V)) = s(s(s(s(s(s(s(0)))) + V)))
--- clause
	s(s(s(s(s(s(xts))))) + (s(s(0)) + (V + s(xts)))) = s(s(s(s(s(xts))))) + (s(s(s(V))) + s(xts))
... reduced in 5 steps to
	s(s(s(s(s(s(s(xts))))) + (s(s(0)) + (V + xts)))) = s(s(s(s(s(s(xts))))) + (s(s(s(V))) + xts))
... decomposed into new clause(s)
	s(s(s(s(0)))) + (s(s(0)) + V) = s(s(s(s(s(s(0)))) + V))
... decomposed into new clause(s)
	s(s(s(s(s(s(xts))))) + (s(s(0)) + (V + xts))) = s(s(s(s(s(xts))))) + (s(s(s(V))) + xts)
--- clause
	s(s(s(s(0)))) + (s(s(0)) + V) = s(s(s(s(s(s(0)))) + V))
... subsumed by lemma
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
... with substitution
	$n <- 3
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
... oriented to rule
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
+++ added new clause(s)
	s(s(s(s(s(s(xts))))) + (s(s(0)) + (V + xts))) = s(s(s(s(s(xts))))) + (s(s(s(V))) + xts)
... to conjectures
+++ active wrap
	s(s(.) + (s(s(0)) + (V + .))) = s(.) + (s(s(s(V))) + .)
... with sequence
	s(s(s(xts)) + (s(s(0)) + (V + xts))) = s(s(xts)) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) = s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(V))) + xts)
+++ primal grammar found for head
	{+, 0, s}
... and wrap
	s(s(.) + (s(s(0)) + (V + .))) = s(.) + (s(s(s(V))) + .)
+++ Presburger system  = {
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)
--- clause
	s(s(s(s(s(s(xts))))) + (s(s(0)) + (V + xts))) = s(s(s(s(s(xts))))) + (s(s(s(V))) + xts)
... subsumed by lemma
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))) = s(s(xts2)) + (s(s(s(s(s(s(s(V1 + (V2 + xts1)))))))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)

+++ treating clause
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
+++ inductive narrowing on conjecture
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
... induction variables of
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
... with variable V
+++ creating new conjecture
	s(s(0)) + (s(s(s(0))) + 0) = s(s(s(s(s(0)) + 0)))
+++ creating new conjecture
	s(s(0)) + (s(s(s(0))) + s(xts)) = s(s(s(s(s(0)) + s(xts))))
--- clause
	s(s(0)) + (s(s(s(0))) + 0) = s(s(s(s(s(0)) + 0)))
... reduced to tautology
	s(s(s(s(s(0))))) = s(s(s(s(s(0)))))
--- clause
	s(s(0)) + (s(s(s(0))) + s(xts)) = s(s(s(s(s(0)) + s(xts))))
... reduced in 3 steps to
	s(s(s(0)) + (s(s(s(0))) + xts)) = s(s(s(s(s(s(0)) + xts))))
... decomposed into new clause(s)
	s(s(0)) + (s(s(s(0))) + xts) = s(s(s(s(s(0)) + xts)))
+++ inductive narrowing succeeded
--- clause
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
... oriented to rule
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
+++ added new clause(s)
	s(s(0)) + (s(s(s(0))) + xts) = s(s(s(s(s(0)) + xts)))
... to conjectures
--- clause
	s(s(0)) + (s(s(s(0))) + xts) = s(s(s(s(s(0)) + xts)))
... reduced to tautology
	s(s(s(s(s(0)) + xts))) = s(s(s(s(s(0)) + xts)))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))) = s(s(xts2)) + (s(s(s(s(s(s(s(V1 + (V2 + xts1)))))))) + xts2)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)

+++ treating clause
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
... induction variables of
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(0))) + (s(s(s(0))) + (V + 0))) = s(s(s(0))) + (s(s(s(s(V)))) + 0)
+++ creating new conjecture
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + s(xts)))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + s(xts))
--- clause
	s(s(s(s(0))) + (s(s(s(0))) + (V + 0))) = s(s(s(0))) + (s(s(s(s(V)))) + 0)
... reduced in 6 steps to
	s(s(s(s(0))) + (s(s(s(0))) + V)) = s(s(s(s(s(s(s(0))) + V))))
--- clause
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + s(xts)))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + s(xts))
... reduced in 5 steps to
	s(s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts)))) = s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts))
... decomposed into new clause(s)
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
... decomposed into new clause(s)
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
... oriented to rule
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
+++ added new clause(s)
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))) = s(s(xts2)) + (s(s(s(s(s(s(s(V1 + (V2 + xts1)))))))) + xts2)
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)

+++ treating clause
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
+++ inductive narrowing on conjecture
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
... induction variables of
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(s(V)))) + 0)) = s(s(0)) + (s(s(s(s(s(V))))) + 0)
+++ creating new conjecture
	s(s(s(s(xts))) + (s(s(s(s(V)))) + s(xts))) = s(s(s(xts))) + (s(s(s(s(s(V))))) + s(xts))
--- clause
	s(s(s(0)) + (s(s(s(s(V)))) + 0)) = s(s(0)) + (s(s(s(s(s(V))))) + 0)
... reduced to tautology
	s(s(s(s(s(s(s(0)) + V))))) = s(s(s(s(s(s(s(0)) + V)))))
--- clause
	s(s(s(s(xts))) + (s(s(s(s(V)))) + s(xts))) = s(s(s(xts))) + (s(s(s(s(s(V))))) + s(xts))
... reduced in 4 steps to
	s(s(s(s(s(xts))) + (s(s(s(s(V)))) + xts))) = s(s(s(s(xts))) + (s(s(s(s(s(V))))) + xts))
... decomposed into new clause(s)
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
... oriented to rule
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
+++ added new clause(s)
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
... to conjectures
--- clause
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2)))))) = s(s(xts2)) + (s(s(s(s(s(s(V + xts1)))))) + xts2)
... reduced to tautology
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2)))))) = s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (V + xts2))))))
--- clause
	s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))) = s(s(xts2)) + (s(s(s(s(s(s(s(V1 + (V2 + xts1)))))))) + xts2)
... reduced to tautology
	s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))) = s(s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2)))))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)

+++ treating clause
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
+++ inductive narrowing on conjecture
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
... induction variables of
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
... are:
	V1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
... with variable V1
+++ creating new conjecture
	s(s(s(0)) + (s(s(V)) + 0)) = s(s(0)) + (s(s(s(V))) + 0)
+++ creating new conjecture
	s(s(s(0)) + (s(s(V)) + s(xts))) = s(s(0)) + (s(s(s(V))) + s(xts))
--- clause
	s(s(s(0)) + (s(s(V)) + 0)) = s(s(0)) + (s(s(s(V))) + 0)
... reduced to tautology
	s(s(s(s(s(0)) + V))) = s(s(s(s(s(0)) + V)))
--- clause
	s(s(s(0)) + (s(s(V)) + s(xts))) = s(s(0)) + (s(s(s(V))) + s(xts))
... reduced in 4 steps to
	s(s(s(s(0)) + (s(s(V)) + xts))) = s(s(s(0)) + (s(s(s(V))) + xts))
... decomposed into new clause(s)
	s(s(s(0)) + (s(s(V)) + xts)) = s(s(0)) + (s(s(s(V))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
... oriented to rule
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
+++ added new clause(s)
	s(s(s(0)) + (s(s(V)) + xts)) = s(s(0)) + (s(s(s(V))) + xts)
... to conjectures
--- clause
	s(s(s(0)) + (s(s(V)) + xts)) = s(s(0)) + (s(s(s(V))) + xts)
... reduced to tautology
	s(s(s(0)) + (s(s(V)) + xts)) = s(s(s(0)) + (s(s(V)) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)

+++ treating clause
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
+++ inductive narrowing on conjecture
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
... induction variables of
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
... with variable xts
+++ creating new conjecture
	s(s(s(s(0))) + (s(s(V2)) + (V1 + 0))) = s(s(s(0))) + (s(s(s(V2))) + (V1 + 0))
+++ creating new conjecture
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + s(xts)))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + s(xts)))
--- clause
	s(s(s(s(0))) + (s(s(V2)) + (V1 + 0))) = s(s(s(0))) + (s(s(s(V2))) + (V1 + 0))
... reduced in 2 steps to
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
--- clause
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + s(xts)))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + s(xts)))
... reduced in 6 steps to
	s(s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts)))) = s(s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts)))
... decomposed into new clause(s)
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
... oriented to rule
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
+++ added new clause(s)
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)

+++ treating clause
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
+++ inductive narrowing on conjecture
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
... induction variables of
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
... with variable V
+++ creating new conjecture
	s(s(s(0))) + (s(s(s(0))) + 0) = s(s(s(s(s(s(0))) + 0)))
+++ creating new conjecture
	s(s(s(0))) + (s(s(s(0))) + s(xts)) = s(s(s(s(s(s(0))) + s(xts))))
--- clause
	s(s(s(0))) + (s(s(s(0))) + 0) = s(s(s(s(s(s(0))) + 0)))
... reduced to tautology
	s(s(s(s(s(s(0)))))) = s(s(s(s(s(s(0))))))
--- clause
	s(s(s(0))) + (s(s(s(0))) + s(xts)) = s(s(s(s(s(s(0))) + s(xts))))
... reduced in 3 steps to
	s(s(s(s(0))) + (s(s(s(0))) + xts)) = s(s(s(s(s(s(s(0))) + xts))))
... decomposed into new clause(s)
	s(s(s(0))) + (s(s(s(0))) + xts) = s(s(s(s(s(s(0))) + xts)))
+++ inductive narrowing succeeded
--- clause
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
... oriented to rule
	s(s(s(0))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(0))) + V)))
+++ added new clause(s)
	s(s(s(0))) + (s(s(s(0))) + xts) = s(s(s(s(s(s(0))) + xts)))
... to conjectures
--- clause
	s(s(s(0))) + (s(s(s(0))) + xts) = s(s(s(s(s(s(0))) + xts)))
... reduced to tautology
	s(s(s(s(s(s(0))) + xts))) = s(s(s(s(s(s(0))) + xts)))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(s(0))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(0))) + V)))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)

+++ treating clause
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
... induction variables of
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0)))) + (s(s(s(0))) + (V + 0))) = s(s(s(s(0)))) + (s(s(s(s(V)))) + 0)
+++ creating new conjecture
	s(s(s(s(s(s(xts))))) + (s(s(s(0))) + (V + s(xts)))) = s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + s(xts))
--- clause
	s(s(s(s(s(0)))) + (s(s(s(0))) + (V + 0))) = s(s(s(s(0)))) + (s(s(s(s(V)))) + 0)
... reduced in 6 steps to
	s(s(s(s(s(0)))) + (s(s(s(0))) + V)) = s(s(s(s(s(s(s(s(0)))) + V))))
--- clause
	s(s(s(s(s(s(xts))))) + (s(s(s(0))) + (V + s(xts)))) = s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + s(xts))
... reduced in 5 steps to
	s(s(s(s(s(s(s(xts))))) + (s(s(s(0))) + (V + xts)))) = s(s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + xts))
... decomposed into new clause(s)
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
... decomposed into new clause(s)
	s(s(s(s(s(s(xts))))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
... oriented to rule
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
+++ added new clause(s)
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
	s(s(s(s(s(s(xts))))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + xts)
... to conjectures
+++ active wrap
	s(s(s(.)) + (s(s(s(0))) + (V + xts))) = s(s(.)) + (s(s(s(s(V)))) + xts)
... with sequence
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) = s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) = s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
+++ primal grammar found for head
	{+, 0, s}
... and wrap
	s(s(s(.)) + (s(s(s(0))) + (V + xts))) = s(s(.)) + (s(s(s(s(V)))) + xts)
+++ Presburger system  = {
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(^f4($n; xts))) + (s(s(s(0))) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)
--- clause
	s(s(s(s(s(s(xts))))) + (s(s(s(0))) + (V + xts))) = s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + xts)
... subsumed by lemma
	s(s(s(^f4($n; xts))) + (s(s(s(0))) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(s(0))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(0))) + V)))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(s(0))) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)

+++ treating clause
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
... induction variables of
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(0))) + (s(s(s(s(V)))) + 0)) = s(s(s(0))) + (s(s(s(s(s(V))))) + 0)
+++ creating new conjecture
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + s(xts))) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + s(xts))
--- clause
	s(s(s(s(0))) + (s(s(s(s(V)))) + 0)) = s(s(s(0))) + (s(s(s(s(s(V))))) + 0)
... reduced to tautology
	s(s(s(s(s(s(s(s(0))) + V))))) = s(s(s(s(s(s(s(s(0))) + V)))))
--- clause
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + s(xts))) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + s(xts))
... reduced in 4 steps to
	s(s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts))) = s(s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts))
... decomposed into new clause(s)
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
... oriented to rule
	s(s(s(xts))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(xts))) + (s(s(s(s(V)))) + xts))
+++ added new clause(s)
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(s(0))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(0))) + V)))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(xts))) + (s(s(s(s(V)))) + xts))
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(s(0))) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)

+++ treating clause
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
+++ inductive narrowing on conjecture
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
... induction variables of
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
... are:
	V1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
... with variable V1
+++ creating new conjecture
	s(s(s(s(0))) + (s(s(V)) + 0)) = s(s(s(0))) + (s(s(s(V))) + 0)
+++ creating new conjecture
	s(s(s(s(0))) + (s(s(V)) + s(xts))) = s(s(s(0))) + (s(s(s(V))) + s(xts))
--- clause
	s(s(s(s(0))) + (s(s(V)) + 0)) = s(s(s(0))) + (s(s(s(V))) + 0)
... reduced to tautology
	s(s(s(s(s(s(0))) + V))) = s(s(s(s(s(s(0))) + V)))
--- clause
	s(s(s(s(0))) + (s(s(V)) + s(xts))) = s(s(s(0))) + (s(s(s(V))) + s(xts))
... reduced in 4 steps to
	s(s(s(s(s(0))) + (s(s(V)) + xts))) = s(s(s(s(0))) + (s(s(s(V))) + xts))
... decomposed into new clause(s)
	s(s(s(s(0))) + (s(s(V)) + xts)) = s(s(s(0))) + (s(s(s(V))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
... oriented to rule
	s(s(s(0))) + (s(s(s(V2))) + V1) -> s(s(s(s(0))) + (s(s(V2)) + V1))
+++ added new clause(s)
	s(s(s(s(0))) + (s(s(V)) + xts)) = s(s(s(0))) + (s(s(s(V))) + xts)
... to conjectures
--- clause
	s(s(s(s(0))) + (s(s(V)) + xts)) = s(s(s(0))) + (s(s(s(V))) + xts)
... reduced to tautology
	s(s(s(s(0))) + (s(s(V)) + xts)) = s(s(s(s(0))) + (s(s(V)) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(s(0))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(0))) + V)))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(s(s(0))) + (s(s(s(V2))) + V1) -> s(s(s(s(0))) + (s(s(V2)) + V1))
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(xts))) + (s(s(s(s(V)))) + xts))
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(s(0))) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)

+++ treating clause
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
+++ inductive narrowing on conjecture
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
... induction variables of
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0)))) + (s(s(V2)) + (V1 + 0))) = s(s(s(s(0)))) + (s(s(s(V2))) + (V1 + 0))
+++ creating new conjecture
	s(s(s(s(s(s(xts))))) + (s(s(V2)) + (V1 + s(xts)))) = s(s(s(s(s(xts))))) + (s(s(s(V2))) + (V1 + s(xts)))
--- clause
	s(s(s(s(s(0)))) + (s(s(V2)) + (V1 + 0))) = s(s(s(s(0)))) + (s(s(s(V2))) + (V1 + 0))
... reduced in 2 steps to
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
--- clause
	s(s(s(s(s(s(xts))))) + (s(s(V2)) + (V1 + s(xts)))) = s(s(s(s(s(xts))))) + (s(s(s(V2))) + (V1 + s(xts)))
... reduced in 6 steps to
	s(s(s(s(s(s(s(xts))))) + (s(s(V2)) + (V1 + xts)))) = s(s(s(s(s(s(xts))))) + (s(s(s(V2))) + (V1 + xts)))
... decomposed into new clause(s)
	s(s(s(s(s(s(xts))))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(s(xts))))) + (s(s(s(V2))) + (V1 + xts))
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
... oriented to rule
	s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts)))
+++ added new clause(s)
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
	s(s(s(s(s(s(xts))))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(s(xts))))) + (s(s(s(V2))) + (V1 + xts))
... to conjectures
+++ active wrap
	s(s(.) + (s(s(V2)) + (V1 + .))) = s(.) + (s(s(s(.))) + .)
... with sequence
	s(s(s(xts)) + (s(s(V2)) + (V1 + xts))) = s(s(xts)) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts))) = s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts))
+++ primal grammar found for head
	{+, s}
... and wrap
	s(s(.) + (s(s(V2)) + (V1 + .))) = s(.) + (s(s(s(.))) + .)
+++ Presburger system  = {
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(^f4($n; xts))) + (s(s(V2)) + (V1 + xts))) = s(s(^f4($n; xts))) + (s(s(s(V2))) + (V1 + xts))
--- clause
	s(s(s(s(s(s(xts))))) + (s(s(V2)) + (V1 + xts))) = s(s(s(s(s(xts))))) + (s(s(s(V2))) + (V1 + xts))
... subsumed by lemma
	s(s(s(^f4($n; xts))) + (s(s(V2)) + (V1 + xts))) = s(s(^f4($n; xts))) + (s(s(s(V2))) + (V1 + xts))
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(s(0))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(0))) + V)))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(s(s(0))) + (s(s(s(V2))) + V1) -> s(s(s(s(0))) + (s(s(V2)) + V1))
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(xts))) + (s(s(s(s(V)))) + xts))
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(s(0))) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(V2)) + (V1 + xts))) = s(s(^f4($n; xts))) + (s(s(s(V2))) + (V1 + xts))

+++ treating clause
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
+++ inductive narrowing on conjecture
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
... induction variables of
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
... with variable V
+++ creating new conjecture
	s(s(s(s(0)))) + (s(s(s(0))) + 0) = s(s(s(s(s(s(s(0)))) + 0)))
+++ creating new conjecture
	s(s(s(s(0)))) + (s(s(s(0))) + s(xts)) = s(s(s(s(s(s(s(0)))) + s(xts))))
--- clause
	s(s(s(s(0)))) + (s(s(s(0))) + 0) = s(s(s(s(s(s(s(0)))) + 0)))
... reduced to tautology
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0)))))))
--- clause
	s(s(s(s(0)))) + (s(s(s(0))) + s(xts)) = s(s(s(s(s(s(s(0)))) + s(xts))))
... reduced in 3 steps to
	s(s(s(s(s(0)))) + (s(s(s(0))) + xts)) = s(s(s(s(s(s(s(s(0)))) + xts))))
... decomposed into new clause(s)
	s(s(s(s(0)))) + (s(s(s(0))) + xts) = s(s(s(s(s(s(s(0)))) + xts)))
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
... oriented to rule
	s(s(s(s(0)))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(s(0)))) + V)))
+++ added new clause(s)
	s(s(s(s(0)))) + (s(s(s(0))) + xts) = s(s(s(s(s(s(s(0)))) + xts)))
... to conjectures
--- clause
	s(s(s(s(0)))) + (s(s(s(0))) + xts) = s(s(s(s(s(s(s(0)))) + xts)))
... reduced to tautology
	s(s(s(s(s(s(s(0)))) + xts))) = s(s(s(s(s(s(s(0)))) + xts)))
+++ active wrap
	s(s(.)) + (s(s(.)) + V) = s(s(.))
... with sequence
	s(s(0)) + (s(s(s(0))) + V) = s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(s(0))) + V) = s(s(s(s(s(s(0))) + V)))
	s(s(s(s(0)))) + (s(s(s(0))) + V) = s(s(s(s(s(s(s(0)))) + V)))
+++ primal grammar found for head
	{+, 0, s}
... and wrap
	s(s(.)) + (s(s(.)) + V) = s(s(.))
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
+++ }
+++ Lemma(s)           = 
	s(s(^f1($n))) + (s(s(s(0))) + V) = s(s(s(s(s(^f1($n))) + V)))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(s(0))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(0))) + V)))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(s(s(s(0)))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(s(0)))) + V)))
	s(s(s(0))) + (s(s(s(V2))) + V1) -> s(s(s(s(0))) + (s(s(V2)) + V1))
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(xts))) + (s(s(s(s(V)))) + xts))
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(s(0))) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(V2)) + (V1 + xts))) = s(s(^f4($n; xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(^f1($n))) + (s(s(s(0))) + V) = s(s(s(s(s(^f1($n))) + V)))

+++ treating clause
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
... induction variables of
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0)))) + (s(s(s(s(V)))) + 0)) = s(s(s(s(0)))) + (s(s(s(s(s(V))))) + 0)
+++ creating new conjecture
	s(s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + s(xts))) = s(s(s(s(s(xts))))) + (s(s(s(s(s(V))))) + s(xts))
--- clause
	s(s(s(s(s(0)))) + (s(s(s(s(V)))) + 0)) = s(s(s(s(0)))) + (s(s(s(s(s(V))))) + 0)
... reduced to tautology
	s(s(s(s(s(s(s(s(s(0)))) + V))))) = s(s(s(s(s(s(s(s(s(0)))) + V)))))
--- clause
	s(s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + s(xts))) = s(s(s(s(s(xts))))) + (s(s(s(s(s(V))))) + s(xts))
... reduced in 4 steps to
	s(s(s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + xts))) = s(s(s(s(s(s(xts))))) + (s(s(s(s(s(V))))) + xts))
... decomposed into new clause(s)
	s(s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(s(xts))))) + (s(s(s(s(s(V))))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
... oriented to rule
	s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts))
+++ added new clause(s)
	s(s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(s(xts))))) + (s(s(s(s(s(V))))) + xts)
... to conjectures
+++ active wrap
	s(.) = s(s(.)) + (s(s(s(s(.)))) + .)
... with sequence
	s(s(s(xts)) + (s(s(s(s(V)))) + xts)) = s(s(xts)) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(xts))) + (s(s(s(s(V)))) + xts)) = s(s(s(xts))) + (s(s(s(s(s(V))))) + xts)
	s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts)
+++ primal grammar found for head
	{+, s}
... and wrap
	s(.) = s(s(.)) + (s(s(s(s(.)))) + .)
+++ Presburger system  = {
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)) = s(s(^f4($n; xts))) + (s(s(s(s(s(V))))) + xts)
--- clause
	s(s(s(s(s(s(xts))))) + (s(s(s(s(V)))) + xts)) = s(s(s(s(s(xts))))) + (s(s(s(s(s(V))))) + xts)
... subsumed by lemma
	s(s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)) = s(s(^f4($n; xts))) + (s(s(s(s(s(V))))) + xts)
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(s(0))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(0))) + V)))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(s(s(s(0)))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(s(0)))) + V)))
	s(s(s(0))) + (s(s(s(V2))) + V1) -> s(s(s(s(0))) + (s(s(V2)) + V1))
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(xts))) + (s(s(s(s(V)))) + xts))
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(s(0))) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(V2)) + (V1 + xts))) = s(s(^f4($n; xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(^f1($n))) + (s(s(s(0))) + V) = s(s(s(s(s(^f1($n))) + V)))
	s(s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)) = s(s(^f4($n; xts))) + (s(s(s(s(s(V))))) + xts)

+++ treating clause
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
+++ inductive narrowing on conjecture
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
... induction variables of
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
... are:
	V1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
... with variable V1
+++ creating new conjecture
	s(s(s(s(s(0)))) + (s(s(V)) + 0)) = s(s(s(s(0)))) + (s(s(s(V))) + 0)
+++ creating new conjecture
	s(s(s(s(s(0)))) + (s(s(V)) + s(xts))) = s(s(s(s(0)))) + (s(s(s(V))) + s(xts))
--- clause
	s(s(s(s(s(0)))) + (s(s(V)) + 0)) = s(s(s(s(0)))) + (s(s(s(V))) + 0)
... reduced to tautology
	s(s(s(s(s(s(s(0)))) + V))) = s(s(s(s(s(s(s(0)))) + V)))
--- clause
	s(s(s(s(s(0)))) + (s(s(V)) + s(xts))) = s(s(s(s(0)))) + (s(s(s(V))) + s(xts))
... reduced in 4 steps to
	s(s(s(s(s(s(0)))) + (s(s(V)) + xts))) = s(s(s(s(s(0)))) + (s(s(s(V))) + xts))
... decomposed into new clause(s)
	s(s(s(s(s(0)))) + (s(s(V)) + xts)) = s(s(s(s(0)))) + (s(s(s(V))) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
... oriented to rule
	s(s(s(s(0)))) + (s(s(s(V2))) + V1) -> s(s(s(s(s(0)))) + (s(s(V2)) + V1))
+++ added new clause(s)
	s(s(s(s(s(0)))) + (s(s(V)) + xts)) = s(s(s(s(0)))) + (s(s(s(V))) + xts)
... to conjectures
--- clause
	s(s(s(s(s(0)))) + (s(s(V)) + xts)) = s(s(s(s(0)))) + (s(s(s(V))) + xts)
... reduced to tautology
	s(s(s(s(s(0)))) + (s(s(V)) + xts)) = s(s(s(s(s(0)))) + (s(s(V)) + xts))
+++ active wrap
	s(s(s(.)) + (s(s(V2)) + V1)) = s(s(.)) + (s(s(s(V2))) + V1)
... with sequence
	s(s(s(0)) + (s(s(V2)) + V1)) = s(s(0)) + (s(s(s(V2))) + V1)
	s(s(s(s(0))) + (s(s(V2)) + V1)) = s(s(s(0))) + (s(s(s(V2))) + V1)
	s(s(s(s(s(0)))) + (s(s(V2)) + V1)) = s(s(s(s(0)))) + (s(s(s(V2))) + V1)
+++ primal grammar found for head
	{+, 0, s}
... and wrap
	s(s(s(.)) + (s(s(V2)) + V1)) = s(s(.)) + (s(s(s(V2))) + V1)
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
+++ }
+++ Lemma(s)           = 
	s(s(s(^f1($n))) + (s(s(V2)) + V1)) = s(s(^f1($n))) + (s(s(s(V2))) + V1)

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	s(s(V4) + (s(s(V3)) + (V2 + V4))) + V1 = s(V4) + (s(s(s(V2 + (V3 + V1)))) + V4)
--- Oriented hypotheses:
	s(0) + (0 + xts) -> s(0) + xts
	s(0) + (s(s(0)) + V) -> s(s(s(0) + V))
	s(s(0)) + (s(s(0)) + V) -> s(s(s(s(0)) + V))
	s(0) + (s(s(V2)) + V1) -> s(s(s(0) + (V2 + V1)))
	s(0) + (s(xts2) + xts1) -> s(s(0) + (xts2 + xts1))
	s(s(0)) + (s(s(s(0))) + V) -> s(s(s(s(s(0)) + V)))
	s(s(s(0))) + (s(s(0)) + V) -> s(s(s(s(s(0))) + V))
	s(0) + (s(s(s(xts))) + V) -> s(s(s(s(0) + (V + xts))))
	s(s(s(0))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(0))) + V)))
	s(s(0)) + (s(s(s(V2))) + V1) -> s(s(s(0)) + (s(s(V2)) + V1))
	s(0) + (s(s(V2 + xts)) + V1) -> s(s(s(0) + (V2 + (V1 + xts))))
	s(s(V2) + (s(s(0)) + (V1 + V2))) -> s(V2) + (s(s(s(V1))) + V2)
	s(s(s(s(0)))) + (s(s(s(0))) + V) -> s(s(s(s(s(s(s(0)))) + V)))
	s(s(s(0))) + (s(s(s(V2))) + V1) -> s(s(s(s(0))) + (s(s(V2)) + V1))
	s(V3) + (s(s(s(V2 + V1))) + V3) -> s(s(V3) + (s(s(V2)) + (V1 + V3)))
	s(s(s(xts)) + (s(s(0)) + (V + xts))) -> s(s(xts)) + (s(s(s(V))) + xts)
	s(s(s(s(0)))) + (s(s(s(V2))) + V1) -> s(s(s(s(s(0)))) + (s(s(V2)) + V1))
	s(V2) + (s(s(s(s(V1 + xts)))) + V2) -> s(s(V2) + (s(s(s(xts))) + (V1 + V2)))
	s(s(s(s(xts))) + (s(s(0)) + (V + xts))) -> s(s(s(xts))) + (s(s(s(V))) + xts)
	s(s(s(xts)) + (s(s(s(0))) + (V + xts))) -> s(s(xts)) + (s(s(s(s(V)))) + xts)
	s(s(xts)) + (s(s(s(s(s(V))))) + xts) -> s(s(s(xts)) + (s(s(s(s(V)))) + xts))
	s(s(xts)) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(xts)) + (s(s(V2)) + (V1 + xts)))
	s(s(s(s(s(xts)))) + (s(s(0)) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(V))) + xts)
	s(s(s(s(xts))) + (s(s(s(0))) + (V + xts))) -> s(s(s(xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(xts))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(xts))) + (s(s(s(s(V)))) + xts))
	s(s(s(xts))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(xts))) + (s(s(V2)) + (V1 + xts)))
	s(V3) + (s(s(s(s(V2 + (V1 + xts))))) + V3) -> s(s(s(V3) + (s(s(V2 + xts)) + (V1 + V3))))
	s(s(s(s(s(xts)))) + (s(s(s(0))) + (V + xts))) -> s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts)
	s(s(s(s(xts)))) + (s(s(s(s(s(V))))) + xts) -> s(s(s(s(s(xts)))) + (s(s(s(s(V)))) + xts))
	s(s(xts2)) + (s(s(s(s(V + xts1)))) + xts2) -> s(s(s(xts2)) + (s(s(s(xts1))) + (V + xts2)))
	s(s(s(s(xts)))) + (s(s(s(V2))) + (V1 + xts)) -> s(s(s(s(s(xts)))) + (s(s(V2)) + (V1 + xts)))
	s(s(xts2)) + (s(s(s(s(s(V + xts1))))) + xts2) -> s(s(s(xts2)) + (s(s(s(s(xts1)))) + (V + xts2)))
	s(s(xts2)) + (s(s(s(s(V2 + (V1 + xts1))))) + xts2) -> s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(V2 + (V1 + xts1)))))) + xts2) -> s(s(s(s(xts2)) + (s(s(s(V2 + xts1))) + (V1 + xts2))))
	s(s(xts2)) + (s(s(s(s(s(s(V2 + (V1 + xts1))))))) + xts2) -> s(s(s(s(s(s(xts2)) + (s(s(V2 + xts1)) + (V1 + xts2))))))
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0) -> 0
	^f1($n1 + 1) -> s(^f1($n1))
	^f4(0; xts) -> xts
	^f4($n4 + 1; xts) -> s(^f4($n4; xts))
+++ }
+++ Lemma(s)           = 
	s(^f1($n)) + (s(s(0)) + V) = s(s(s(^f1($n)) + V))
	s(s(s(^f4($n; xts))) + (s(s(0)) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(V))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(s(0))) + (V + xts))) = s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)
	s(s(s(^f4($n; xts))) + (s(s(V2)) + (V1 + xts))) = s(s(^f4($n; xts))) + (s(s(s(V2))) + (V1 + xts))
	s(s(^f1($n))) + (s(s(s(0))) + V) = s(s(s(s(s(^f1($n))) + V)))
	s(s(s(^f4($n; xts))) + (s(s(s(s(V)))) + xts)) = s(s(^f4($n; xts))) + (s(s(s(s(s(V))))) + xts)
	s(s(s(^f1($n))) + (s(s(V2)) + V1)) = s(s(^f1($n))) + (s(s(s(V2))) + V1)

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 36
... Number of induction steps      = 36
... Number of equational steps     = 1
... Number of case rewriting steps = 0
... Number of PG defined symbols   = 2
... Number of PG lemmas            = 7
... Elapsed time (seconds)         = 0.729
