+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 19-in.txt
+++ output      = 19-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 10
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification Generated from 19-in.txt successfully parsed
+++ Listing
         1: specification Generated
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      +: nat nat -> nat
         9: precedence
        10:      + > s > 0
        11: axioms
        12:      x + 0 = x;
        13:      x + s(y) = s(x + y);
        14: conjectures
        15:      s(s(s(s(s(s(s(s(v + (w + s(u)))))))))) = s((s(s(u)) + s(s(w))) + v);
        16: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x + 0 -> x
	x + s(y) -> s(x + y)
+++ inductive positions:
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	s(s(s(s(s(s(s(s(v + (w + s(u)))))))))) = s((s(s(u)) + s(s(w))) + v)

+++ inference system initiated
--- clause
	s(s(s(s(s(s(s(s(v + (w + s(u)))))))))) = s((s(s(u)) + s(s(w))) + v)
... reduced in 4 steps to
	s(s(s(s(s(s(s(s(s(v + (w + u)))))))))) = s(s(s(s(s(u)) + w)) + v)
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(v + (w + u))))))))) = s(s(s(s(u)) + w)) + v
+++ treating clause
	s(s(s(s(s(s(s(s(v + (w + u))))))))) = s(s(s(s(u)) + w)) + v
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(s(v + (w + u))))))))) = s(s(s(s(u)) + w)) + v
... induction variables of
	s(s(s(s(s(s(s(s(v + (w + u))))))))) = s(s(s(s(u)) + w)) + v
... are:
	u:nat
	w:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(s(v + (w + u))))))))) = s(s(s(s(u)) + w)) + v
... with variable u
+++ creating new conjecture
	s(s(s(s(s(s(s(s(v + (w + 0))))))))) = s(s(s(s(0)) + w)) + v
+++ creating new conjecture
	s(s(s(s(s(s(s(s(v + (w + s(xts)))))))))) = s(s(s(s(s(xts))) + w)) + v
--- clause
	s(s(s(s(s(s(s(s(v + (w + 0))))))))) = s(s(s(s(0)) + w)) + v
... reduced in 1 step to
	s(s(s(s(s(s(s(s(v + w)))))))) = s(s(s(s(0)) + w)) + v
--- clause
	s(s(s(s(s(s(s(s(v + (w + s(xts)))))))))) = s(s(s(s(s(xts))) + w)) + v
... reduced in 2 steps to
	s(s(s(s(s(s(s(s(s(v + (w + xts)))))))))) = s(s(s(s(s(xts))) + w)) + v
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(s(v + (w + u))))))))) = s(s(s(s(u)) + w)) + v
... oriented to rule
	s(s(s(s(u)) + w)) + v -> s(s(s(s(s(s(s(s(v + (w + u)))))))))
+++ added new clause(s)
	s(s(s(s(s(s(s(s(v + w)))))))) = s(s(s(s(0)) + w)) + v
	s(s(s(s(s(s(s(s(s(v + (w + xts)))))))))) = s(s(s(s(s(xts))) + w)) + v
... to conjectures
--- clause
	s(s(s(s(s(s(s(s(v + w)))))))) = s(s(s(s(0)) + w)) + v
... reduced in 1 step to
	s(s(s(s(s(s(s(s(v + w)))))))) = s(s(s(s(s(s(s(s(v + (w + 0)))))))))
--- clause
	s(s(s(s(s(s(s(s(s(v + (w + xts)))))))))) = s(s(s(s(s(xts))) + w)) + v
... reduced in 1 step to
	s(s(s(s(s(s(s(s(s(v + (w + xts)))))))))) = s(s(s(s(s(s(s(s(v + (w + s(xts))))))))))
... decomposed into new clause(s)
	v + w = v + (w + 0)
... decomposed into new clause(s)
	s(v + (w + xts)) = v + (w + s(xts))

+++ Status of the Inference System
--- Conjectures:
	v + w = v + (w + 0)
	s(v + (w + xts)) = v + (w + s(xts))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(u)) + w)) + v -> s(s(s(s(s(s(s(s(v + (w + u)))))))))
--- Primal Grammar:
	<empty>

--- clause
	v + w = v + (w + 0)
... reduced to tautology
	v + w = v + w
--- clause
	s(v + (w + xts)) = v + (w + s(xts))
... reduced to tautology
	s(v + (w + xts)) = s(v + (w + xts))

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(u)) + w)) + v -> s(s(s(s(s(s(s(s(v + (w + u)))))))))
--- Primal Grammar:
	<empty>

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 2
... Number of induction steps      = 1
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Elapsed time (seconds)         = 0.001
