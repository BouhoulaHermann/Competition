+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 5-in.txt
+++ output      = 5-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 10
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification Generated from 5-in.txt successfully parsed
+++ Listing
         1: specification Generated
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      +: nat nat -> nat
         9: precedence
        10:      + > s > 0
        11: axioms
        12:      x + 0 = x;
        13:      x + s(y) = s(x + y);
        14: conjectures
        15:      s(s(s(s(s(s(s(s(V3) + s(V2))) + V1))))) = s(s(s(s(s(s(V1 + s(V2)))) + s(s(V3)))));
        16: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x + 0 -> x
	x + s(y) -> s(x + y)
+++ inductive positions:
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	s(s(s(s(s(s(s(s(V3) + s(V2))) + V1))))) = s(s(s(s(s(s(V1 + s(V2)))) + s(s(V3)))))

+++ inference system initiated
--- clause
	s(s(s(s(s(s(s(s(V3) + s(V2))) + V1))))) = s(s(s(s(s(s(V1 + s(V2)))) + s(s(V3)))))
... reduced in 4 steps to
	s(s(s(s(s(s(s(s(s(V3) + V2))) + V1))))) = s(s(s(s(s(s(s(s(s(V1 + V2)))) + V3)))))
... decomposed into new clause(s)
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
+++ treating clause
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
+++ inductive narrowing on conjecture
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
... induction variables of
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
... are:
	V2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
... with variable V2
+++ creating new conjecture
	s(s(s(s(V2) + 0))) + V1 = s(s(s(s(V1 + 0)))) + V2
+++ creating new conjecture
	s(s(s(s(V2) + s(xts)))) + V1 = s(s(s(s(V1 + s(xts))))) + V2
--- clause
	s(s(s(s(V2) + 0))) + V1 = s(s(s(s(V1 + 0)))) + V2
... reduced in 2 steps to
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
--- clause
	s(s(s(s(V2) + s(xts)))) + V1 = s(s(s(s(V1 + s(xts))))) + V2
... reduced in 2 steps to
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
+++ moved
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
--- Non-orientable hypotheses:
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
+++ inductive narrowing on conjecture
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
... induction variables of
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
... are:
	V1:nat
	V2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
... with variable V1
+++ creating new conjecture
	s(s(s(s(V)))) + 0 = s(s(s(s(0)))) + V
+++ creating new conjecture
	s(s(s(s(V)))) + s(xts) = s(s(s(s(s(xts))))) + V
--- clause
	s(s(s(s(V)))) + 0 = s(s(s(s(0)))) + V
... reduced in 1 step to
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
--- clause
	s(s(s(s(V)))) + s(xts) = s(s(s(s(s(xts))))) + V
... reduced in 1 step to
	s(s(s(s(s(V)))) + xts) = s(s(s(s(s(xts))))) + V
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
+++ moved
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
	s(s(s(s(s(V)))) + xts) = s(s(s(s(s(xts))))) + V
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
... to clause
	s(s(s(s(s(V)))) + xts) = s(s(s(s(s(xts))))) + V
... modified clause
	s(s(s(s(s(xts)))) + V) = s(s(s(s(s(xts))))) + V

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
	s(s(s(s(s(xts)))) + V) = s(s(s(s(s(xts))))) + V
--- Non-orientable hypotheses:
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
+++ inductive narrowing on conjecture
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
... induction variables of
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(V2) + 0)))) + V1 = s(s(s(s(s(V1 + 0))))) + V2
+++ creating new conjecture
	s(s(s(s(s(V2) + s(xts))))) + V1 = s(s(s(s(s(V1 + s(xts)))))) + V2
--- clause
	s(s(s(s(s(V2) + 0)))) + V1 = s(s(s(s(s(V1 + 0))))) + V2
... reduced in 2 steps to
	s(s(s(s(s(V2))))) + V1 = s(s(s(s(s(V1))))) + V2
--- clause
	s(s(s(s(s(V2) + s(xts))))) + V1 = s(s(s(s(s(V1 + s(xts)))))) + V2
... reduced in 2 steps to
	s(s(s(s(s(s(V2) + xts))))) + V1 = s(s(s(s(s(s(V1 + xts)))))) + V2
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
+++ moved
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(s(s(V2))))) + V1 = s(s(s(s(s(V1))))) + V2
	s(s(s(s(s(s(V2) + xts))))) + V1 = s(s(s(s(s(s(V1 + xts)))))) + V2
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
... to clause
	s(s(s(s(s(V2))))) + V1 = s(s(s(s(s(V1))))) + V2
... modified clause
	s(s(s(s(V2)))) + s(V1) = s(s(s(s(s(V2))))) + V1
--- clause
	s(s(s(s(V2)))) + s(V1) = s(s(s(s(s(V2))))) + V1
... reduced in 1 step to
	s(s(s(s(s(V2)))) + V1) = s(s(s(s(s(V2))))) + V1

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
	s(s(s(s(s(xts)))) + V) = s(s(s(s(s(xts))))) + V
	s(s(s(s(s(V2)))) + V1) = s(s(s(s(s(V2))))) + V1
	s(s(s(s(s(s(V2) + xts))))) + V1 = s(s(s(s(s(s(V1 + xts)))))) + V2
--- Non-orientable hypotheses:
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
... induction variables of
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
... with variable V
+++ creating new conjecture
	s(s(s(s(0)))) = s(s(s(s(0)))) + 0
+++ creating new conjecture
	s(s(s(s(s(xts))))) = s(s(s(s(0)))) + s(xts)
--- clause
	s(s(s(s(0)))) = s(s(s(s(0)))) + 0
... reduced to tautology
	s(s(s(s(0)))) = s(s(s(s(0))))
--- clause
	s(s(s(s(s(xts))))) = s(s(s(s(0)))) + s(xts)
... reduced in 1 step to
	s(s(s(s(s(xts))))) = s(s(s(s(s(0)))) + xts)
... decomposed into new clause(s)
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
... oriented to rule
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
+++ added new clause(s)
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... to conjectures
--- clause
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... reduced to tautology
	s(s(s(s(xts)))) = s(s(s(s(xts))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(xts)))) + V) = s(s(s(s(s(xts))))) + V
	s(s(s(s(s(V2)))) + V1) = s(s(s(s(s(V2))))) + V1
	s(s(s(s(s(s(V2) + xts))))) + V1 = s(s(s(s(s(s(V1 + xts)))))) + V2
--- Non-orientable hypotheses:
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(xts)))) + V) = s(s(s(s(s(xts))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(xts)))) + V) = s(s(s(s(s(xts))))) + V
... induction variables of
	s(s(s(s(s(xts)))) + V) = s(s(s(s(s(xts))))) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(xts)))) + V) = s(s(s(s(s(xts))))) + V
... with variable V
+++ creating new conjecture
	s(s(s(s(s(xts)))) + 0) = s(s(s(s(s(xts))))) + 0
+++ creating new conjecture
	s(s(s(s(s(xts2)))) + s(xts1)) = s(s(s(s(s(xts2))))) + s(xts1)
--- clause
	s(s(s(s(s(xts)))) + 0) = s(s(s(s(s(xts))))) + 0
... reduced to tautology
	s(s(s(s(s(xts))))) = s(s(s(s(s(xts)))))
--- clause
	s(s(s(s(s(xts2)))) + s(xts1)) = s(s(s(s(s(xts2))))) + s(xts1)
... reduced in 2 steps to
	s(s(s(s(s(s(xts2)))) + xts1)) = s(s(s(s(s(s(xts2))))) + xts1)
... decomposed into new clause(s)
	s(s(s(s(s(xts2)))) + xts1) = s(s(s(s(s(xts2))))) + xts1
--- clause
	s(s(s(s(s(xts2)))) + xts1) = s(s(s(s(s(xts2))))) + xts1
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(xts)))) + V) = s(s(s(s(s(xts))))) + V
... oriented to rule
	s(s(s(s(s(xts))))) + V -> s(s(s(s(s(xts)))) + V)
--- clause
	s(s(s(s(s(V2)))) + V1) = s(s(s(s(s(V2))))) + V1
... reduced to tautology
	s(s(s(s(s(V2)))) + V1) = s(s(s(s(s(V2)))) + V1)
--- clause
	s(s(s(s(s(s(V2) + xts))))) + V1 = s(s(s(s(s(s(V1 + xts)))))) + V2
... reduced in 3 steps to
	s(s(s(s(s(s(V2) + xts)))) + V1) = s(s(s(s(s(s(V1 + xts)))) + V2))
... decomposed into new clause(s)
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
--- Non-orientable hypotheses:
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(xts))))) + V -> s(s(s(s(s(xts)))) + V)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
+++ inductive narrowing on conjecture
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
... induction variables of
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(V2) + 0)))) + V1 = s(s(s(s(s(V1 + 0)))) + V2)
+++ creating new conjecture
	s(s(s(s(s(V2) + s(xts))))) + V1 = s(s(s(s(s(V1 + s(xts))))) + V2)
--- clause
	s(s(s(s(s(V2) + 0)))) + V1 = s(s(s(s(s(V1 + 0)))) + V2)
... reduced in 3 steps to
	s(s(s(s(s(V2)))) + V1) = s(s(s(s(s(V1)))) + V2)
--- clause
	s(s(s(s(s(V2) + s(xts))))) + V1 = s(s(s(s(s(V1 + s(xts))))) + V2)
... reduced in 4 steps to
	s(s(s(s(s(s(V2) + xts)))) + V1) = s(s(s(s(s(s(V1 + xts)))) + V2))
... decomposed into new clause(s)
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
... decomposed into new clause(s)
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
--- clause
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
... subsumed by hypothese
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
+++ moved
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
... to conjectures
--- clause
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
... subsumed by hypothese
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	s(s(s(s(V3) + V2))) + V1 = s(s(s(s(V1 + V2)))) + V3
	s(s(s(s(V2)))) + V1 = s(s(s(s(V1)))) + V2
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts))))) + V2
	s(s(s(s(s(V2) + xts)))) + V1 = s(s(s(s(s(V1 + xts)))) + V2)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(xts))))) + V -> s(s(s(s(s(xts)))) + V)
--- Primal Grammar:
	<empty>

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 6
... Number of induction steps      = 6
... Number of equational steps     = 2
... Number of case rewriting steps = 0
... Elapsed time (seconds)         = 0.013
