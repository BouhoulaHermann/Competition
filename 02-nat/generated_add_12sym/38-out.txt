+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 38-in.txt
+++ output      = 38-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 14
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification Generated from 38-in.txt successfully parsed
+++ Listing
         1: specification Generated
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      +: nat nat -> nat
         9: precedence
        10:      + > s > 0
        11: axioms
        12:      x + 0 = x;
        13:      x + s(y) = s(x + y);
        14: conjectures
        15:      s(s(s((V3 + s(V2)) + s(s(s(V2) + s(V1)))))) = s(s(s(V2)) + s(V3)) + (V2 + s(s(s(s(V1)))));
        16: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x + 0 -> x
	x + s(y) -> s(x + y)
+++ inductive positions:
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	s(s(s((V3 + s(V2)) + s(s(s(V2) + s(V1)))))) = s(s(s(V2)) + s(V3)) + (V2 + s(s(s(s(V1)))))

+++ inference system initiated
--- clause
	s(s(s((V3 + s(V2)) + s(s(s(V2) + s(V1)))))) = s(s(s(V2)) + s(V3)) + (V2 + s(s(s(s(V1)))))
... reduced in 14 steps to
	s(s(s(s(s(s(s(V3 + V2) + (s(V2) + V1))))))) = s(s(s(s(s(s(s(s(V2)) + V3)) + (V2 + V1)))))
... decomposed into new clause(s)
	s(s(s(V3 + V2) + (s(V2) + V1))) = s(s(s(s(V2)) + V3)) + (V2 + V1)
+++ treating clause
	s(s(s(V3 + V2) + (s(V2) + V1))) = s(s(s(s(V2)) + V3)) + (V2 + V1)
+++ inductive narrowing on conjecture
	s(s(s(V3 + V2) + (s(V2) + V1))) = s(s(s(s(V2)) + V3)) + (V2 + V1)
... induction variables of
	s(s(s(V3 + V2) + (s(V2) + V1))) = s(s(s(s(V2)) + V3)) + (V2 + V1)
... are:
	V1:nat
	V2:nat
	V3:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V3 + V2) + (s(V2) + V1))) = s(s(s(s(V2)) + V3)) + (V2 + V1)
... with variable V1
+++ creating new conjecture
	s(s(s(V2 + V1) + (s(V1) + 0))) = s(s(s(s(V1)) + V2)) + (V1 + 0)
+++ creating new conjecture
	s(s(s(V2 + V1) + (s(V1) + s(xts)))) = s(s(s(s(V1)) + V2)) + (V1 + s(xts))
--- clause
	s(s(s(V2 + V1) + (s(V1) + 0))) = s(s(s(s(V1)) + V2)) + (V1 + 0)
... reduced in 3 steps to
	s(s(s(s(V2 + V1) + V1))) = s(s(s(s(V1)) + V2)) + V1
--- clause
	s(s(s(V2 + V1) + (s(V1) + s(xts)))) = s(s(s(s(V1)) + V2)) + (V1 + s(xts))
... reduced in 4 steps to
	s(s(s(s(V2 + V1) + (s(V1) + xts)))) = s(s(s(s(s(V1)) + V2)) + (V1 + xts))
... decomposed into new clause(s)
	s(s(s(V2 + V1) + (s(V1) + xts))) = s(s(s(s(V1)) + V2)) + (V1 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V3 + V2) + (s(V2) + V1))) = s(s(s(s(V2)) + V3)) + (V2 + V1)
... oriented to rule
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
+++ added new clause(s)
	s(s(s(s(V2 + V1) + V1))) = s(s(s(s(V1)) + V2)) + V1
	s(s(s(V2 + V1) + (s(V1) + xts))) = s(s(s(s(V1)) + V2)) + (V1 + xts)
... to conjectures
--- clause
	s(s(s(V2 + V1) + (s(V1) + xts))) = s(s(s(s(V1)) + V2)) + (V1 + xts)
... reduced to tautology
	s(s(s(V2 + V1) + (s(V1) + xts))) = s(s(s(V2 + V1) + (s(V1) + xts)))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(V2 + V1) + V1))) = s(s(s(s(V1)) + V2)) + V1
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(V2 + V1) + V1))) = s(s(s(s(V1)) + V2)) + V1
+++ inductive narrowing on conjecture
	s(s(s(s(V2 + V1) + V1))) = s(s(s(s(V1)) + V2)) + V1
... induction variables of
	s(s(s(s(V2 + V1) + V1))) = s(s(s(s(V1)) + V2)) + V1
... are:
	V1:nat
	V2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(V2 + V1) + V1))) = s(s(s(s(V1)) + V2)) + V1
... with variable V1
+++ creating new conjecture
	s(s(s(s(V + 0) + 0))) = s(s(s(s(0)) + V)) + 0
+++ creating new conjecture
	s(s(s(s(V + s(xts)) + s(xts)))) = s(s(s(s(s(xts))) + V)) + s(xts)
--- clause
	s(s(s(s(V + 0) + 0))) = s(s(s(s(0)) + V)) + 0
... reduced in 3 steps to
	s(s(s(s(V)))) = s(s(s(s(0)) + V))
--- clause
	s(s(s(s(V + s(xts)) + s(xts)))) = s(s(s(s(s(xts))) + V)) + s(xts)
... reduced in 3 steps to
	s(s(s(s(s(s(V + xts)) + xts)))) = s(s(s(s(s(s(xts))) + V)) + xts)
... decomposed into new clause(s)
	s(s(V)) = s(s(0)) + V
... decomposed into new clause(s)
	s(s(s(s(s(V + xts)) + xts))) = s(s(s(s(s(xts))) + V)) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(V2 + V1) + V1))) = s(s(s(s(V1)) + V2)) + V1
... oriented to rule
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
+++ added new clause(s)
	s(s(V)) = s(s(0)) + V
	s(s(s(s(s(V + xts)) + xts))) = s(s(s(s(s(xts))) + V)) + xts
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(V)) = s(s(0)) + V
	s(s(s(s(s(V + xts)) + xts))) = s(s(s(s(s(xts))) + V)) + xts
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(V)) = s(s(0)) + V
+++ inductive narrowing on conjecture
	s(s(V)) = s(s(0)) + V
... induction variables of
	s(s(V)) = s(s(0)) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(V)) = s(s(0)) + V
... with variable V
+++ creating new conjecture
	s(s(0)) = s(s(0)) + 0
+++ creating new conjecture
	s(s(s(xts))) = s(s(0)) + s(xts)
--- clause
	s(s(0)) = s(s(0)) + 0
... reduced to tautology
	s(s(0)) = s(s(0))
--- clause
	s(s(s(xts))) = s(s(0)) + s(xts)
... reduced in 1 step to
	s(s(s(xts))) = s(s(s(0)) + xts)
... decomposed into new clause(s)
	s(s(xts)) = s(s(0)) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(V)) = s(s(0)) + V
... oriented to rule
	s(s(0)) + V -> s(s(V))
+++ added new clause(s)
	s(s(xts)) = s(s(0)) + xts
... to conjectures
--- clause
	s(s(xts)) = s(s(0)) + xts
... reduced to tautology
	s(s(xts)) = s(s(xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(V + xts)) + xts))) = s(s(s(s(s(xts))) + V)) + xts
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(V + xts)) + xts))) = s(s(s(s(s(xts))) + V)) + xts
+++ inductive narrowing on conjecture
	s(s(s(s(s(V + xts)) + xts))) = s(s(s(s(s(xts))) + V)) + xts
... induction variables of
	s(s(s(s(s(V + xts)) + xts))) = s(s(s(s(s(xts))) + V)) + xts
... are:
	V:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(V + xts)) + xts))) = s(s(s(s(s(xts))) + V)) + xts
... with variable V
+++ creating new conjecture
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))) + 0)) + xts
+++ creating new conjecture
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(xts1))) + s(xts2))) + xts1
--- clause
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))) + 0)) + xts
... reduced in 1 step to
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))))) + xts
--- clause
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(xts1))) + s(xts2))) + xts1
... reduced in 1 step to
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(V + xts)) + xts))) = s(s(s(s(s(xts))) + V)) + xts
... oriented to rule
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
+++ added new clause(s)
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))))) + xts
+++ inductive narrowing on conjecture
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))))) + xts
... induction variables of
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))))) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))))) + xts
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0 + 0)) + 0))) = s(s(s(s(s(0))))) + 0
+++ creating new conjecture
	s(s(s(s(s(0 + s(xts))) + s(xts)))) = s(s(s(s(s(s(xts)))))) + s(xts)
--- clause
	s(s(s(s(s(0 + 0)) + 0))) = s(s(s(s(s(0))))) + 0
... reduced to tautology
	s(s(s(s(s(0))))) = s(s(s(s(s(0)))))
--- clause
	s(s(s(s(s(0 + s(xts))) + s(xts)))) = s(s(s(s(s(s(xts)))))) + s(xts)
... reduced in 3 steps to
	s(s(s(s(s(s(s(0 + xts))) + xts)))) = s(s(s(s(s(s(s(xts)))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))))) + xts
... oriented to rule
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
+++ added new clause(s)
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
... induction variables of
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
... with variable xts1
+++ creating new conjecture
	s(s(s(s(s(s(xts) + 0)) + 0))) = s(s(s(s(s(s(0))) + xts))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(xts2) + s(xts1))) + s(xts1)))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + s(xts1)
--- clause
	s(s(s(s(s(s(xts) + 0)) + 0))) = s(s(s(s(s(s(0))) + xts))) + 0
... reduced in 3 steps to
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(0))) + xts)))
--- clause
	s(s(s(s(s(s(xts2) + s(xts1))) + s(xts1)))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + s(xts1)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(xts2) + xts1))) + xts1)))) = s(s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1)
... decomposed into new clause(s)
	s(s(s(xts))) = s(s(s(0))) + xts
... decomposed into new clause(s)
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
+++ moved
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(xts))) = s(s(s(0))) + xts
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
	s(s(s(xts))) = s(s(s(0))) + xts
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
--- Non-orientable hypotheses:
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
... induction variables of
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(0 + 0))) + 0))) = s(s(s(s(s(s(0)))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(0 + s(xts)))) + s(xts)))) = s(s(s(s(s(s(s(xts))))))) + s(xts)
--- clause
	s(s(s(s(s(s(0 + 0))) + 0))) = s(s(s(s(s(s(0)))))) + 0
... reduced to tautology
	s(s(s(s(s(s(0)))))) = s(s(s(s(s(s(0))))))
--- clause
	s(s(s(s(s(s(0 + s(xts)))) + s(xts)))) = s(s(s(s(s(s(s(xts))))))) + s(xts)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(0 + xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts))))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
... oriented to rule
	s(s(s(s(s(s(0 + xts))) + xts))) -> s(s(s(s(s(s(xts)))))) + xts
+++ added new clause(s)
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts))) = s(s(s(0))) + xts
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
--- Non-orientable hypotheses:
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(s(s(0 + xts))) + xts))) -> s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts))) = s(s(s(0))) + xts
+++ inductive narrowing on conjecture
	s(s(s(xts))) = s(s(s(0))) + xts
... induction variables of
	s(s(s(xts))) = s(s(s(0))) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts))) = s(s(s(0))) + xts
... with variable xts
+++ creating new conjecture
	s(s(s(0))) = s(s(s(0))) + 0
+++ creating new conjecture
	s(s(s(s(xts)))) = s(s(s(0))) + s(xts)
--- clause
	s(s(s(0))) = s(s(s(0))) + 0
... reduced to tautology
	s(s(s(0))) = s(s(s(0)))
--- clause
	s(s(s(s(xts)))) = s(s(s(0))) + s(xts)
... reduced in 1 step to
	s(s(s(s(xts)))) = s(s(s(s(0))) + xts)
... decomposed into new clause(s)
	s(s(s(xts))) = s(s(s(0))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts))) = s(s(s(0))) + xts
... oriented to rule
	s(s(s(0))) + xts -> s(s(s(xts)))
+++ added new clause(s)
	s(s(s(xts))) = s(s(s(0))) + xts
... to conjectures
--- clause
	s(s(s(xts))) = s(s(s(0))) + xts
... reduced to tautology
	s(s(s(xts))) = s(s(s(xts)))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
--- Non-orientable hypotheses:
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(0))) + xts -> s(s(s(xts)))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(s(s(0 + xts))) + xts))) -> s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
... induction variables of
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
... with variable xts1
+++ creating new conjecture
	s(s(s(s(s(s(s(xts) + 0))) + 0))) = s(s(s(s(s(s(s(0)))) + xts))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(s(xts2) + s(xts1)))) + s(xts1)))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + s(xts1)
--- clause
	s(s(s(s(s(s(s(xts) + 0))) + 0))) = s(s(s(s(s(s(s(0)))) + xts))) + 0
... reduced in 3 steps to
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(s(0)))) + xts)))
--- clause
	s(s(s(s(s(s(s(xts2) + s(xts1)))) + s(xts1)))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + s(xts1)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1)))) = s(s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1)
... decomposed into new clause(s)
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
+++ moved
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
--- Non-orientable hypotheses:
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(0))) + xts -> s(s(s(xts)))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(s(s(0 + xts))) + xts))) -> s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... induction variables of
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(0 + 0)))) + 0))) = s(s(s(s(s(s(s(0))))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(s(0 + s(xts))))) + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + s(xts)
--- clause
	s(s(s(s(s(s(s(0 + 0)))) + 0))) = s(s(s(s(s(s(s(0))))))) + 0
... reduced to tautology
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0)))))))
--- clause
	s(s(s(s(s(s(s(0 + s(xts))))) + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + s(xts)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(0 + xts))))) + xts)))) = s(s(s(s(s(s(s(s(s(xts)))))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(0 + xts))))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... oriented to rule
	s(s(s(s(s(s(s(0 + xts)))) + xts))) -> s(s(s(s(s(s(s(xts))))))) + xts
+++ added new clause(s)
	s(s(s(s(s(s(s(s(0 + xts))))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
... to conjectures
+++ active wrap
	s(s(s(s(s(.)) + xts))) = s(s(s(s(s(.))))) + xts
... with sequence
	s(s(s(s(s(0 + xts)) + xts))) = s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(s(0 + xts))) + xts))) = s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(s(s(s(0 + xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
+++ primal grammar found for head
	{+, 0, s}
... and wrap
	s(s(s(s(s(.)) + xts))) = s(s(s(s(s(.))))) + xts
+++ Presburger system  = {
	^f1(0; xts) -> 0 + xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f2(0; xts) -> xts
	^f2($n2 + 1; xts) -> s(^f2($n2; xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(s(s(^f1($n; xts))) + xts))) = s(s(s(s(s(^f2($n; xts)))))) + xts
--- clause
	s(s(s(s(s(s(s(s(0 + xts))))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
... subsumed by lemma
	s(s(s(s(s(^f1($n; xts))) + xts))) = s(s(s(s(s(^f2($n; xts)))))) + xts
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
--- Non-orientable hypotheses:
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(0))) + xts -> s(s(s(xts)))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(s(s(0 + xts))) + xts))) -> s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
	s(s(s(s(s(s(s(0 + xts)))) + xts))) -> s(s(s(s(s(s(s(xts))))))) + xts
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0; xts) -> 0 + xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f2(0; xts) -> xts
	^f2($n2 + 1; xts) -> s(^f2($n2; xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(s(s(^f1($n; xts))) + xts))) = s(s(s(s(s(^f2($n; xts)))))) + xts

+++ treating clause
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
+++ inductive narrowing on conjecture
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... induction variables of
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... with variable xts
+++ creating new conjecture
	s(s(s(s(0)))) = s(s(s(s(0)))) + 0
+++ creating new conjecture
	s(s(s(s(s(xts))))) = s(s(s(s(0)))) + s(xts)
--- clause
	s(s(s(s(0)))) = s(s(s(s(0)))) + 0
... reduced to tautology
	s(s(s(s(0)))) = s(s(s(s(0))))
--- clause
	s(s(s(s(s(xts))))) = s(s(s(s(0)))) + s(xts)
... reduced in 1 step to
	s(s(s(s(s(xts))))) = s(s(s(s(s(0)))) + xts)
... decomposed into new clause(s)
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... oriented to rule
	s(s(s(s(0)))) + xts -> s(s(s(s(xts))))
+++ added new clause(s)
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... to conjectures
--- clause
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... reduced to tautology
	s(s(s(s(xts)))) = s(s(s(s(xts))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
--- Non-orientable hypotheses:
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(0))) + xts -> s(s(s(xts)))
	s(s(s(s(0)))) + xts -> s(s(s(s(xts))))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(s(s(0 + xts))) + xts))) -> s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
	s(s(s(s(s(s(s(0 + xts)))) + xts))) -> s(s(s(s(s(s(s(xts))))))) + xts
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0; xts) -> 0 + xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f2(0; xts) -> xts
	^f2($n2 + 1; xts) -> s(^f2($n2; xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(s(s(^f1($n; xts))) + xts))) = s(s(s(s(s(^f2($n; xts)))))) + xts

+++ treating clause
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
... induction variables of
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
... with variable xts1
+++ creating new conjecture
	s(s(s(s(s(s(s(s(xts) + 0)))) + 0))) = s(s(s(s(s(s(s(s(0))))) + xts))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(s(s(xts2) + s(xts1))))) + s(xts1)))) = s(s(s(s(s(s(s(s(s(xts1)))))) + xts2))) + s(xts1)
--- clause
	s(s(s(s(s(s(s(s(xts) + 0)))) + 0))) = s(s(s(s(s(s(s(s(0))))) + xts))) + 0
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(s(s(s(s(0))))) + xts)))
--- clause
	s(s(s(s(s(s(s(s(xts2) + s(xts1))))) + s(xts1)))) = s(s(s(s(s(s(s(s(s(xts1)))))) + xts2))) + s(xts1)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))) + xts1)))) = s(s(s(s(s(s(s(s(s(s(xts1)))))) + xts2))) + xts1)
... decomposed into new clause(s)
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(s(xts2) + xts1))))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))) + xts2))) + xts1
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
+++ moved
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
	s(s(s(s(s(s(s(s(s(xts2) + xts1))))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))) + xts2))) + xts1
... to conjectures
+++ active wrap
	s(s(.)) = s(s(.)) + .
... with sequence
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
+++ primal grammar found for head
	{+, s}
... and wrap
	s(s(.)) = s(s(.)) + .
+++ Presburger system  = {
	^f2(0; xts) -> xts
	^f2($n2 + 1; xts) -> s(^f2($n2; xts))
	^f3(0; xts2, xts1) -> s(xts2) + xts1
	^f3($n3 + 1; xts2, xts1) -> s(^f3($n3; xts2, xts1))
+++ }
+++ Lemma(s)           = 
	s(s(s(s(s(^f3($n; xts2, xts1))) + xts2))) = s(s(s(s(s(s(^f2($n; xts2)))) + xts1))) + xts2
--- clause
	s(s(s(s(s(s(s(s(s(xts2) + xts1))))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))) + xts2))) + xts1
... subsumed by lemma
	s(s(s(s(s(^f3($n; xts2, xts1))) + xts2))) = s(s(s(s(s(s(^f2($n; xts2)))) + xts1))) + xts2
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
--- Non-orientable hypotheses:
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(0))) + xts -> s(s(s(xts)))
	s(s(s(s(0)))) + xts -> s(s(s(s(xts))))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(s(s(0 + xts))) + xts))) -> s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
	s(s(s(s(s(s(s(0 + xts)))) + xts))) -> s(s(s(s(s(s(s(xts))))))) + xts
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0; xts) -> 0 + xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f2(0; xts) -> xts
	^f2($n2 + 1; xts) -> s(^f2($n2; xts))
	^f3(0; xts2, xts1) -> s(xts2) + xts1
	^f3($n3 + 1; xts2, xts1) -> s(^f3($n3; xts2, xts1))
+++ }
+++ Lemma(s)           = 
	s(s(s(s(s(^f1($n; xts))) + xts))) = s(s(s(s(s(^f2($n; xts)))))) + xts
	s(s(s(s(s(^f3($n; xts2, xts1))) + xts2))) = s(s(s(s(s(s(^f2($n; xts2)))) + xts1))) + xts2

+++ treating clause
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
+++ inductive narrowing on conjecture
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
... induction variables of
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0))))) = s(s(s(s(s(0))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(0))))) + s(xts)
--- clause
	s(s(s(s(s(0))))) = s(s(s(s(s(0))))) + 0
... reduced to tautology
	s(s(s(s(s(0))))) = s(s(s(s(s(0)))))
--- clause
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(0))))) + s(xts)
... reduced in 1 step to
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(0))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
... oriented to rule
	s(s(s(s(s(0))))) + xts -> s(s(s(s(s(xts)))))
+++ added new clause(s)
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
... to conjectures
--- clause
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
... reduced to tautology
	s(s(s(s(s(xts))))) = s(s(s(s(s(xts)))))

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	s(s(s(s(s(s(xts2) + xts1)) + xts1))) = s(s(s(s(s(s(xts1))) + xts2))) + xts1
	s(s(s(s(s(s(s(xts2) + xts1))) + xts1))) = s(s(s(s(s(s(s(xts1)))) + xts2))) + xts1
	s(s(s(s(s(s(s(s(xts2) + xts1)))) + xts1))) = s(s(s(s(s(s(s(s(xts1))))) + xts2))) + xts1
--- Oriented hypotheses:
	s(s(0)) + V -> s(s(V))
	s(s(s(0))) + xts -> s(s(s(xts)))
	s(s(s(s(0)))) + xts -> s(s(s(s(xts))))
	s(s(s(s(s(0))))) + xts -> s(s(s(s(s(xts)))))
	s(s(s(s(V2)) + V1)) + V2 -> s(s(s(s(V2 + V1) + V1)))
	s(s(s(s(s(0 + xts)) + xts))) -> s(s(s(s(s(xts))))) + xts
	s(s(s(s(s(xts))) + V)) + xts -> s(s(s(s(s(V + xts)) + xts)))
	s(s(s(s(s(s(0 + xts))) + xts))) -> s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(V3)) + V2)) + (V3 + V1) -> s(s(s(V3 + V2) + (s(V2) + V1)))
	s(s(s(s(s(s(s(0 + xts)))) + xts))) -> s(s(s(s(s(s(s(xts))))))) + xts
--- Primal Grammar:
+++ Presburger system  = {
	^f1(0; xts) -> 0 + xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f2(0; xts) -> xts
	^f2($n2 + 1; xts) -> s(^f2($n2; xts))
	^f3(0; xts2, xts1) -> s(xts2) + xts1
	^f3($n3 + 1; xts2, xts1) -> s(^f3($n3; xts2, xts1))
+++ }
+++ Lemma(s)           = 
	s(s(s(s(s(^f1($n; xts))) + xts))) = s(s(s(s(s(^f2($n; xts)))))) + xts
	s(s(s(s(s(^f3($n; xts2, xts1))) + xts2))) = s(s(s(s(s(s(^f2($n; xts2)))) + xts1))) + xts2

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 13
... Number of induction steps      = 13
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Number of PG defined symbols   = 3
... Number of PG lemmas            = 2
... Elapsed time (seconds)         = 0.036
