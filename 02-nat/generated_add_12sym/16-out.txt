+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 16-in.txt
+++ output      = 16-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 10
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification Generated from 16-in.txt successfully parsed
+++ Listing
         1: specification Generated
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      +: nat nat -> nat
         9: precedence
        10:      + > s > 0
        11: axioms
        12:      x + 0 = x;
        13:      x + s(y) = s(x + y);
        14: conjectures
        15:      s(s(s(s(s(x + s(y)))) + s(s(s(x))))) = s(s(s(s(s(x) + y)))) + s(s(s(s(x))));
        16: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x + 0 -> x
	x + s(y) -> s(x + y)
+++ inductive positions:
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	s(s(s(s(s(x + s(y)))) + s(s(s(x))))) = s(s(s(s(s(x) + y)))) + s(s(s(s(x))))

+++ inference system initiated
--- clause
	s(s(s(s(s(x + s(y)))) + s(s(s(x))))) = s(s(s(s(s(x) + y)))) + s(s(s(s(x))))
... reduced in 8 steps to
	s(s(s(s(s(s(s(s(s(x + y)))) + x))))) = s(s(s(s(s(s(s(s(s(x) + y)))) + x))))
... decomposed into new clause(s)
	s(s(s(s(s(x + y)))) + x) = s(s(s(s(s(x) + y)))) + x
+++ treating clause
	s(s(s(s(s(x + y)))) + x) = s(s(s(s(s(x) + y)))) + x
+++ inductive narrowing on conjecture
	s(s(s(s(s(x + y)))) + x) = s(s(s(s(s(x) + y)))) + x
... induction variables of
	s(s(s(s(s(x + y)))) + x) = s(s(s(s(s(x) + y)))) + x
... are:
	y:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(x + y)))) + x) = s(s(s(s(s(x) + y)))) + x
... with variable y
+++ creating new conjecture
	s(s(s(s(s(x + 0)))) + x) = s(s(s(s(s(x) + 0)))) + x
+++ creating new conjecture
	s(s(s(s(s(x + s(xts))))) + x) = s(s(s(s(s(x) + s(xts))))) + x
--- clause
	s(s(s(s(s(x + 0)))) + x) = s(s(s(s(s(x) + 0)))) + x
... reduced in 2 steps to
	s(s(s(s(s(x)))) + x) = s(s(s(s(s(x))))) + x
--- clause
	s(s(s(s(s(x + s(xts))))) + x) = s(s(s(s(s(x) + s(xts))))) + x
... reduced in 2 steps to
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(x + y)))) + x) = s(s(s(s(s(x) + y)))) + x
... oriented to rule
	s(s(s(s(s(x) + y)))) + x -> s(s(s(s(s(x + y)))) + x)
+++ added new clause(s)
	s(s(s(s(s(x)))) + x) = s(s(s(s(s(x))))) + x
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(x)))) + x) = s(s(s(s(s(x))))) + x
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(s(x) + y)))) + x -> s(s(s(s(s(x + y)))) + x)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(x)))) + x) = s(s(s(s(s(x))))) + x
+++ inductive narrowing on conjecture
	s(s(s(s(s(x)))) + x) = s(s(s(s(s(x))))) + x
... induction variables of
	s(s(s(s(s(x)))) + x) = s(s(s(s(s(x))))) + x
... are:
	x:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(x)))) + x) = s(s(s(s(s(x))))) + x
... with variable x
+++ creating new conjecture
	s(s(s(s(s(0)))) + 0) = s(s(s(s(s(0))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(xts))))) + s(xts)) = s(s(s(s(s(s(xts)))))) + s(xts)
--- clause
	s(s(s(s(s(0)))) + 0) = s(s(s(s(s(0))))) + 0
... reduced to tautology
	s(s(s(s(s(0))))) = s(s(s(s(s(0)))))
--- clause
	s(s(s(s(s(s(xts))))) + s(xts)) = s(s(s(s(s(s(xts)))))) + s(xts)
... reduced in 2 steps to
	s(s(s(s(s(s(s(xts))))) + xts)) = s(s(s(s(s(s(s(xts)))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(s(xts)))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(x)))) + x) = s(s(s(s(s(x))))) + x
... oriented to rule
	s(s(s(s(s(x))))) + x -> s(s(s(s(s(x)))) + x)
+++ added new clause(s)
	s(s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(s(xts)))))) + xts
... to conjectures
--- clause
	s(s(s(s(s(s(xts))))) + xts) = s(s(s(s(s(s(xts)))))) + xts
... reduced in 1 step to
	s(s(s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts)))))) + xts

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
	s(s(s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts)))))) + xts
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(s(x))))) + x -> s(s(s(s(s(x)))) + x)
	s(s(s(s(s(x) + y)))) + x -> s(s(s(s(s(x + y)))) + x)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
... induction variables of
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(x + 0))))) + x) = s(s(s(s(s(s(x) + 0))))) + x
+++ creating new conjecture
	s(s(s(s(s(s(x + s(xts)))))) + x) = s(s(s(s(s(s(x) + s(xts)))))) + x
--- clause
	s(s(s(s(s(s(x + 0))))) + x) = s(s(s(s(s(s(x) + 0))))) + x
... reduced in 3 steps to
	s(s(s(s(s(s(x)))) + x)) = s(s(s(s(s(s(x)))))) + x
--- clause
	s(s(s(s(s(s(x + s(xts)))))) + x) = s(s(s(s(s(s(x) + s(xts)))))) + x
... reduced in 2 steps to
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
--- clause
	s(s(s(s(s(s(x)))) + x)) = s(s(s(s(s(s(x)))))) + x
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
... oriented to rule
	s(s(s(s(s(s(x) + xts))))) + x -> s(s(s(s(s(s(x + xts))))) + x)
+++ added new clause(s)
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(s(x))))) + x -> s(s(s(s(s(x)))) + x)
	s(s(s(s(s(x) + y)))) + x -> s(s(s(s(s(x + y)))) + x)
	s(s(s(s(s(s(x) + xts))))) + x -> s(s(s(s(s(s(x + xts))))) + x)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts)))))) + xts
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts)))))) + xts
... induction variables of
	s(s(s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts)))))) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts)))))) + xts
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(0)))) + 0)) = s(s(s(s(s(s(0)))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(s(xts))))) + s(xts))) = s(s(s(s(s(s(s(xts))))))) + s(xts)
--- clause
	s(s(s(s(s(s(0)))) + 0)) = s(s(s(s(s(s(0)))))) + 0
... reduced to tautology
	s(s(s(s(s(s(0)))))) = s(s(s(s(s(s(0))))))
--- clause
	s(s(s(s(s(s(s(xts))))) + s(xts))) = s(s(s(s(s(s(s(xts))))))) + s(xts)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts))))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts)))))) + xts
... oriented to rule
	s(s(s(s(s(s(xts)))))) + xts -> s(s(s(s(s(s(xts)))) + xts))
+++ added new clause(s)
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(s(x))))) + x -> s(s(s(s(s(x)))) + x)
	s(s(s(s(s(x) + y)))) + x -> s(s(s(s(s(x + y)))) + x)
	s(s(s(s(s(s(xts)))))) + xts -> s(s(s(s(s(s(xts)))) + xts))
	s(s(s(s(s(s(x) + xts))))) + x -> s(s(s(s(s(s(x + xts))))) + x)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
... induction variables of
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(x + 0)))))) + x) = s(s(s(s(s(s(s(x) + 0)))))) + x
+++ creating new conjecture
	s(s(s(s(s(s(s(x + s(xts))))))) + x) = s(s(s(s(s(s(s(x) + s(xts))))))) + x
--- clause
	s(s(s(s(s(s(s(x + 0)))))) + x) = s(s(s(s(s(s(s(x) + 0)))))) + x
... reduced in 3 steps to
	s(s(s(s(s(s(s(x)))) + x))) = s(s(s(s(s(s(s(x))))))) + x
--- clause
	s(s(s(s(s(s(s(x + s(xts))))))) + x) = s(s(s(s(s(s(s(x) + s(xts))))))) + x
... reduced in 2 steps to
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
--- clause
	s(s(s(s(s(s(s(x)))) + x))) = s(s(s(s(s(s(s(x))))))) + x
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
... oriented to rule
	s(s(s(s(s(s(s(x) + xts)))))) + x -> s(s(s(s(s(s(s(x + xts)))))) + x)
+++ added new clause(s)
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(s(x))))) + x -> s(s(s(s(s(x)))) + x)
	s(s(s(s(s(x) + y)))) + x -> s(s(s(s(s(x + y)))) + x)
	s(s(s(s(s(s(xts)))))) + xts -> s(s(s(s(s(s(xts)))) + xts))
	s(s(s(s(s(s(x) + xts))))) + x -> s(s(s(s(s(s(x + xts))))) + x)
	s(s(s(s(s(s(s(x) + xts)))))) + x -> s(s(s(s(s(s(s(x + xts)))))) + x)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... induction variables of
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(0)))) + 0))) = s(s(s(s(s(s(s(0))))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(s(s(xts))))) + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + s(xts)
--- clause
	s(s(s(s(s(s(s(0)))) + 0))) = s(s(s(s(s(s(s(0))))))) + 0
... reduced to tautology
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0)))))))
--- clause
	s(s(s(s(s(s(s(s(xts))))) + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + s(xts)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(xts)))) + xts))))) = s(s(s(s(s(s(s(s(s(xts)))))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
... oriented to rule
	s(s(s(s(s(s(s(xts))))))) + xts -> s(s(s(s(s(s(s(xts)))) + xts)))
+++ added new clause(s)
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(s(x))))) + x -> s(s(s(s(s(x)))) + x)
	s(s(s(s(s(x) + y)))) + x -> s(s(s(s(s(x + y)))) + x)
	s(s(s(s(s(s(xts)))))) + xts -> s(s(s(s(s(s(xts)))) + xts))
	s(s(s(s(s(s(x) + xts))))) + x -> s(s(s(s(s(s(x + xts))))) + x)
	s(s(s(s(s(s(s(xts))))))) + xts -> s(s(s(s(s(s(s(xts)))) + xts)))
	s(s(s(s(s(s(s(x) + xts)))))) + x -> s(s(s(s(s(s(s(x + xts)))))) + x)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
... induction variables of
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(s(x + 0))))))) + x) = s(s(s(s(s(s(s(s(x) + 0))))))) + x
+++ creating new conjecture
	s(s(s(s(s(s(s(s(x + s(xts)))))))) + x) = s(s(s(s(s(s(s(s(x) + s(xts)))))))) + x
--- clause
	s(s(s(s(s(s(s(s(x + 0))))))) + x) = s(s(s(s(s(s(s(s(x) + 0))))))) + x
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(x)))) + x)))) = s(s(s(s(s(s(s(s(x)))))))) + x
--- clause
	s(s(s(s(s(s(s(s(x + s(xts)))))))) + x) = s(s(s(s(s(s(s(s(x) + s(xts)))))))) + x
... reduced in 2 steps to
	s(s(s(s(s(s(s(s(s(x + xts)))))))) + x) = s(s(s(s(s(s(s(s(s(x) + xts)))))))) + x
--- clause
	s(s(s(s(s(s(s(s(x)))) + x)))) = s(s(s(s(s(s(s(s(x)))))))) + x
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
... oriented to rule
	s(s(s(s(s(s(s(s(x) + xts))))))) + x -> s(s(s(s(s(s(s(s(x + xts))))))) + x)
+++ added new clause(s)
	s(s(s(s(s(s(s(s(s(x + xts)))))))) + x) = s(s(s(s(s(s(s(s(s(x) + xts)))))))) + x
... to conjectures
+++ active wrap
	s(s(s(s(s(.)))) + x) = s(s(s(s(s(.))))) + x
... with sequence
	s(s(s(s(s(s(x + xts))))) + x) = s(s(s(s(s(s(x) + xts))))) + x
	s(s(s(s(s(s(s(x + xts)))))) + x) = s(s(s(s(s(s(s(x) + xts)))))) + x
	s(s(s(s(s(s(s(s(x + xts))))))) + x) = s(s(s(s(s(s(s(s(x) + xts))))))) + x
+++ primal grammar found for head
	{+, s}
... and wrap
	s(s(s(s(s(.)))) + x) = s(s(s(s(s(.))))) + x
+++ Presburger system  = {
	^f4(0; x, xts) -> x + xts
	^f4($n4 + 1; x, xts) -> s(^f4($n4; x, xts))
	^f5(0; x, xts) -> s(x) + xts
	^f5($n5 + 1; x, xts) -> s(^f5($n5; x, xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(s(s(s(^f4($n; x, xts)))))) + x) = s(s(s(s(s(^f5($n; x, xts)))))) + x
--- clause
	s(s(s(s(s(s(s(s(s(x + xts)))))))) + x) = s(s(s(s(s(s(s(s(s(x) + xts)))))))) + x
... subsumed by lemma
	s(s(s(s(s(s(^f4($n; x, xts)))))) + x) = s(s(s(s(s(^f5($n; x, xts)))))) + x
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(s(x))))) + x -> s(s(s(s(s(x)))) + x)
	s(s(s(s(s(x) + y)))) + x -> s(s(s(s(s(x + y)))) + x)
	s(s(s(s(s(s(xts)))))) + xts -> s(s(s(s(s(s(xts)))) + xts))
	s(s(s(s(s(s(x) + xts))))) + x -> s(s(s(s(s(s(x + xts))))) + x)
	s(s(s(s(s(s(s(xts))))))) + xts -> s(s(s(s(s(s(s(xts)))) + xts)))
	s(s(s(s(s(s(s(x) + xts)))))) + x -> s(s(s(s(s(s(s(x + xts)))))) + x)
	s(s(s(s(s(s(s(s(x) + xts))))))) + x -> s(s(s(s(s(s(s(s(x + xts))))))) + x)
--- Primal Grammar:
+++ Presburger system  = {
	^f4(0; x, xts) -> x + xts
	^f4($n4 + 1; x, xts) -> s(^f4($n4; x, xts))
	^f5(0; x, xts) -> s(x) + xts
	^f5($n5 + 1; x, xts) -> s(^f5($n5; x, xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(s(s(s(^f4($n; x, xts)))))) + x) = s(s(s(s(s(^f5($n; x, xts)))))) + x

+++ treating clause
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
... induction variables of
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(s(0)))) + 0)))) = s(s(s(s(s(s(s(s(0)))))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(s(s(s(xts))))) + s(xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + s(xts)
--- clause
	s(s(s(s(s(s(s(s(0)))) + 0)))) = s(s(s(s(s(s(s(s(0)))))))) + 0
... reduced to tautology
	s(s(s(s(s(s(s(s(0)))))))) = s(s(s(s(s(s(s(s(0))))))))
--- clause
	s(s(s(s(s(s(s(s(s(xts))))) + s(xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + s(xts)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(s(xts)))) + xts)))))) = s(s(s(s(s(s(s(s(s(s(xts))))))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(s(xts)))) + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
... oriented to rule
	s(s(s(s(s(s(s(s(xts)))))))) + xts -> s(s(s(s(s(s(s(s(xts)))) + xts))))
+++ added new clause(s)
	s(s(s(s(s(s(s(s(s(xts)))) + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + xts
... to conjectures
+++ active wrap
	s(s(.)) = s(s(s(s(s(s(.)))))) + xts
... with sequence
	s(s(s(s(s(s(xts)))) + xts)) = s(s(s(s(s(s(xts)))))) + xts
	s(s(s(s(s(s(s(xts)))) + xts))) = s(s(s(s(s(s(s(xts))))))) + xts
	s(s(s(s(s(s(s(s(xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + xts
+++ primal grammar found for head
	{+, s}
... and wrap
	s(s(.)) = s(s(s(s(s(s(.)))))) + xts
+++ Presburger system  = {
	^f6(0; xts) -> s(s(s(s(xts)))) + xts
	^f6($n6 + 1; xts) -> s(^f6($n6; xts))
	^f7(0; xts) -> xts
	^f7($n7 + 1; xts) -> s(^f7($n7; xts))
+++ }
+++ Lemma(s)           = 
	s(s(^f6($n; xts))) = s(s(s(s(s(s(^f7($n; xts))))))) + xts
--- clause
	s(s(s(s(s(s(s(s(s(xts)))) + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + xts
... subsumed by lemma
	s(s(^f6($n; xts))) = s(s(s(s(s(s(^f7($n; xts))))))) + xts
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	s(s(s(s(s(x))))) + x -> s(s(s(s(s(x)))) + x)
	s(s(s(s(s(x) + y)))) + x -> s(s(s(s(s(x + y)))) + x)
	s(s(s(s(s(s(xts)))))) + xts -> s(s(s(s(s(s(xts)))) + xts))
	s(s(s(s(s(s(x) + xts))))) + x -> s(s(s(s(s(s(x + xts))))) + x)
	s(s(s(s(s(s(s(xts))))))) + xts -> s(s(s(s(s(s(s(xts)))) + xts)))
	s(s(s(s(s(s(s(x) + xts)))))) + x -> s(s(s(s(s(s(s(x + xts)))))) + x)
	s(s(s(s(s(s(s(s(xts)))))))) + xts -> s(s(s(s(s(s(s(s(xts)))) + xts))))
	s(s(s(s(s(s(s(s(x) + xts))))))) + x -> s(s(s(s(s(s(s(s(x + xts))))))) + x)
--- Primal Grammar:
+++ Presburger system  = {
	^f4(0; x, xts) -> x + xts
	^f4($n4 + 1; x, xts) -> s(^f4($n4; x, xts))
	^f5(0; x, xts) -> s(x) + xts
	^f5($n5 + 1; x, xts) -> s(^f5($n5; x, xts))
	^f6(0; xts) -> s(s(s(s(xts)))) + xts
	^f6($n6 + 1; xts) -> s(^f6($n6; xts))
	^f7(0; xts) -> xts
	^f7($n7 + 1; xts) -> s(^f7($n7; xts))
+++ }
+++ Lemma(s)           = 
	s(s(s(s(s(s(^f4($n; x, xts)))))) + x) = s(s(s(s(s(^f5($n; x, xts)))))) + x
	s(s(^f6($n; xts))) = s(s(s(s(s(s(^f7($n; xts))))))) + xts

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 8
... Number of induction steps      = 8
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Number of PG defined symbols   = 4
... Number of PG lemmas            = 2
... Elapsed time (seconds)         = 0.026
