+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 39-in.txt
+++ output      = 39-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 68
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification Generated from 39-in.txt successfully parsed
+++ Listing
         1: specification Generated
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      +: nat nat -> nat
         9: precedence
        10:      + > s > 0
        11: axioms
        12:      x + 0 = x;
        13:      x + s(y) = s(x + y);
        14: conjectures
        15:      s((s(V4) + (0 + s(V3))) + s(s(V2) + (V1 + s(V2)))) = (s(V2 + s(s(s(V1) + V3))) + V4) + s(s(0 + V2));
        16: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x + 0 -> x
	x + s(y) -> s(x + y)
+++ inductive positions:
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	s((s(V4) + (0 + s(V3))) + s(s(V2) + (V1 + s(V2)))) = (s(V2 + s(s(s(V1) + V3))) + V4) + s(s(0 + V2))

+++ inference system initiated
--- clause
	s((s(V4) + (0 + s(V3))) + s(s(V2) + (V1 + s(V2)))) = (s(V2 + s(s(s(V1) + V3))) + V4) + s(s(0 + V2))
... reduced in 10 steps to
	s(s(s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))))) = s(s((s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)))
... decomposed into new clause(s)
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
+++ treating clause
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
+++ inductive narrowing on conjecture
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
... induction variables of
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
... are:
	V2:nat
	V3:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
... with variable V2
+++ creating new conjecture
	s(s(s(V3) + (0 + V2)) + (s(0) + (V1 + 0))) = (s(s(s(0 + (s(V1) + V2)))) + V3) + (0 + 0)
+++ creating new conjecture
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + s(xts)))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + s(xts))
--- clause
	s(s(s(V3) + (0 + V2)) + (s(0) + (V1 + 0))) = (s(s(s(0 + (s(V1) + V2)))) + V3) + (0 + 0)
... reduced in 3 steps to
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
--- clause
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + s(xts)))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + s(xts))
... reduced in 5 steps to
	s(s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts)))) = s((s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
+++ moved
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
+++ inductive narrowing on conjecture
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
... induction variables of
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
... are:
	V1:nat
	V2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
... with variable V1
+++ creating new conjecture
	s(s(s(V2) + (0 + V1)) + (s(0) + 0)) = s(s(s(0 + (s(0) + V1)))) + V2
+++ creating new conjecture
	s(s(s(V2) + (0 + V1)) + (s(0) + s(xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
--- clause
	s(s(s(V2) + (0 + V1)) + (s(0) + 0)) = s(s(s(0 + (s(0) + V1)))) + V2
... reduced in 3 steps to
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
--- clause
	s(s(s(V2) + (0 + V1)) + (s(0) + s(xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
... reduced in 2 steps to
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
+++ moved
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
... induction variables of
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
... are:
	V2:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
... with variable V2
+++ creating new conjecture
	s(s(s(V2) + (0 + 0)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + 0)))) + V2) + (0 + xts)
+++ creating new conjecture
	s(s(s(V2) + (0 + s(xts2))) + (s(s(xts1)) + (V1 + xts1))) = (s(s(s(s(xts1) + (s(V1) + s(xts2))))) + V2) + (0 + xts1)
--- clause
	s(s(s(V2) + (0 + 0)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + 0)))) + V2) + (0 + xts)
... reduced in 4 steps to
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
--- clause
	s(s(s(V2) + (0 + s(xts2))) + (s(s(xts1)) + (V1 + xts1))) = (s(s(s(s(xts1) + (s(V1) + s(xts2))))) + V2) + (0 + xts1)
... reduced in 4 steps to
	s(s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1))) = (s(s(s(s(s(xts1) + (s(V1) + xts2))))) + V2) + (0 + xts1)
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
+++ moved
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
	s(s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1))) = (s(s(s(s(s(xts1) + (s(V1) + xts2))))) + V2) + (0 + xts1)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
	s(s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1))) = (s(s(s(s(s(xts1) + (s(V1) + xts2))))) + V2) + (0 + xts1)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
+++ inductive narrowing on conjecture
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... induction variables of
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... are:
	V1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... with variable V1
+++ creating new conjecture
	s(s(s(s(V) + (0 + 0)))) = s(s(s(0 + (s(0) + 0)))) + V
+++ creating new conjecture
	s(s(s(s(V) + (0 + s(xts))))) = s(s(s(0 + (s(0) + s(xts))))) + V
--- clause
	s(s(s(s(V) + (0 + 0)))) = s(s(s(0 + (s(0) + 0)))) + V
... reduced in 5 steps to
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
--- clause
	s(s(s(s(V) + (0 + s(xts))))) = s(s(s(0 + (s(0) + s(xts))))) + V
... reduced in 4 steps to
	s(s(s(s(s(V) + (0 + xts))))) = s(s(s(s(0 + (s(0) + xts))))) + V
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
+++ moved
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
	s(s(s(s(s(V) + (0 + xts))))) = s(s(s(s(0 + (s(0) + xts))))) + V
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(s(s(0 + (s(0) + xts))))) + V
... modified clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
	s(s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1))) = (s(s(s(s(s(xts1) + (s(V1) + xts2))))) + V2) + (0 + xts1)
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
+++ inductive narrowing on conjecture
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
... induction variables of
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
... are:
	V1:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
... with variable V1
+++ creating new conjecture
	s(s(s(s(V) + (0 + 0)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + 0)))) + V
+++ creating new conjecture
	s(s(s(s(V) + (0 + s(xts2))) + (s(0) + xts1))) = s(s(s(0 + (s(s(xts1)) + s(xts2))))) + V
--- clause
	s(s(s(s(V) + (0 + 0)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + 0)))) + V
... reduced in 5 steps to
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
--- clause
	s(s(s(s(V) + (0 + s(xts2))) + (s(0) + xts1))) = s(s(s(0 + (s(s(xts1)) + s(xts2))))) + V
... reduced in 4 steps to
	s(s(s(s(s(V) + (0 + xts2))) + (s(0) + xts1))) = s(s(s(s(0 + (s(s(xts1)) + xts2))))) + V
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
--- succeeded to apply non-orientable hypothese
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
... to clause
	s(s(s(s(V2) + (0 + V1)) + (s(0) + xts))) = s(s(s(0 + (s(s(xts)) + V1)))) + V2
... modified clause
	s(s(s(s(0 + (s(xts) + V2)))) + V1) = s(s(s(0 + (s(s(xts)) + V2)))) + V1

--- clause
	s(s(s(s(0 + (s(xts) + V2)))) + V1) = s(s(s(0 + (s(s(xts)) + V2)))) + V1
... oriented to rule
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
+++ added new clause(s)
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(V) + (0 + xts2))) + (s(0) + xts1))) = s(s(s(s(0 + (s(s(xts1)) + xts2))))) + V
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
	s(s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1))) = (s(s(s(s(s(xts1) + (s(V1) + xts2))))) + V2) + (0 + xts1)
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(V) + (0 + xts2))) + (s(0) + xts1))) = s(s(s(s(0 + (s(s(xts1)) + xts2))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
--- Oriented hypotheses:
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
... induction variables of
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
... are:
	V1:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
... with variable V1
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts) + 0)))) + V) + (0 + xts)
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(xts2) + s(xts1))))) + V) + (0 + xts2)
--- clause
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts) + 0)))) + V) + (0 + xts)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(xts2) + s(xts1))))) + V) + (0 + xts2)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(s(xts) + V1)))) + V2) + (0 + xts)
... oriented to rule
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
+++ added new clause(s)
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
... to conjectures
--- clause
	s(s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1))) = (s(s(s(s(s(xts1) + (s(V1) + xts2))))) + V2) + (0 + xts1)
... reduced in 1 step to
	s(s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1))) = s(s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1)))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(V) + (0 + xts2))) + (s(0) + xts1))) = s(s(s(s(0 + (s(s(xts1)) + xts2))))) + V
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
--- Oriented hypotheses:
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
... induction variables of
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
... with variable V
+++ creating new conjecture
	s(s(s(s(0)))) = s(s(s(s(0)))) + 0
+++ creating new conjecture
	s(s(s(s(s(xts))))) = s(s(s(s(0)))) + s(xts)
--- clause
	s(s(s(s(0)))) = s(s(s(s(0)))) + 0
... reduced to tautology
	s(s(s(s(0)))) = s(s(s(s(0))))
--- clause
	s(s(s(s(s(xts))))) = s(s(s(s(0)))) + s(xts)
... reduced in 1 step to
	s(s(s(s(s(xts))))) = s(s(s(s(s(0)))) + xts)
... decomposed into new clause(s)
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(V)))) = s(s(s(s(0)))) + V
... oriented to rule
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
+++ added new clause(s)
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... to conjectures
--- clause
	s(s(s(s(xts)))) = s(s(s(s(0)))) + xts
... reduced to tautology
	s(s(s(s(xts)))) = s(s(s(s(xts))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(V) + (0 + xts2))) + (s(0) + xts1))) = s(s(s(s(0 + (s(s(xts1)) + xts2))))) + V
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V
... induction variables of
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V
... with variable xts
+++ creating new conjecture
	s(s(s(s(0 + (s(0) + 0)))) + V) = s(s(s(s(0 + (s(0) + 0))))) + V
+++ creating new conjecture
	s(s(s(s(0 + (s(0) + s(xts))))) + V) = s(s(s(s(0 + (s(0) + s(xts)))))) + V
--- clause
	s(s(s(s(0 + (s(0) + 0)))) + V) = s(s(s(s(0 + (s(0) + 0))))) + V
... reduced in 7 steps to
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
--- clause
	s(s(s(s(0 + (s(0) + s(xts))))) + V) = s(s(s(s(0 + (s(0) + s(xts)))))) + V
... reduced in 4 steps to
	s(s(s(s(s(0 + (s(0) + xts))))) + V) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts))))) + V
... oriented to rule
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
+++ added new clause(s)
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
	s(s(s(s(s(0 + (s(0) + xts))))) + V) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
... to conjectures
--- clause
	s(s(s(s(s(0 + (s(0) + xts))))) + V) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
... reduced in 1 step to
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(V) + (0 + xts2))) + (s(0) + xts1))) = s(s(s(s(0 + (s(s(xts1)) + xts2))))) + V
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
... induction variables of
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
... with variable xts
+++ creating new conjecture
	s(s(s(s(V)) + (s(0) + 0))) = s(s(s(s(s(0 + 0))))) + V
+++ creating new conjecture
	s(s(s(s(V)) + (s(0) + s(xts)))) = s(s(s(s(s(0 + s(xts)))))) + V
--- clause
	s(s(s(s(V)) + (s(0) + 0))) = s(s(s(s(s(0 + 0))))) + V
... reduced in 4 steps to
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
--- clause
	s(s(s(s(V)) + (s(0) + s(xts)))) = s(s(s(s(s(0 + s(xts)))))) + V
... reduced in 3 steps to
	s(s(s(s(s(V)) + (s(0) + xts)))) = s(s(s(s(s(s(0 + xts)))))) + V
--- clause
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(V)) + (s(0) + xts))) = s(s(s(s(s(0 + xts))))) + V
... oriented to rule
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
+++ added new clause(s)
	s(s(s(s(s(V)) + (s(0) + xts)))) = s(s(s(s(s(s(0 + xts)))))) + V
... to conjectures
--- clause
	s(s(s(s(s(V) + (0 + xts2))) + (s(0) + xts1))) = s(s(s(s(0 + (s(s(xts1)) + xts2))))) + V
... reduced in 1 step to
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
--- clause
	s(s(s(s(s(V)) + (s(0) + xts)))) = s(s(s(s(s(s(0 + xts)))))) + V
... reduced in 1 step to
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
... induction variables of
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
... with variable xts1
+++ creating new conjecture
	s(s(s(s(s(0 + xts))))) + (s(V) + (0 + 0)) = s(s(s(s(0 + (s(s(xts)) + 0))))) + V
+++ creating new conjecture
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + s(xts1))) = s(s(s(s(0 + (s(s(xts2)) + s(xts1)))))) + V
--- clause
	s(s(s(s(s(0 + xts))))) + (s(V) + (0 + 0)) = s(s(s(s(0 + (s(s(xts)) + 0))))) + V
... reduced in 6 steps to
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
--- clause
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + s(xts1))) = s(s(s(s(0 + (s(s(xts2)) + s(xts1)))))) + V
... reduced in 5 steps to
	s(s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1))) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
--- clause
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
+++ moved
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1))) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
... to clause
	s(s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1))) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
... modified clause
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
... induction variables of
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
... are:
	V:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
... with variable V
+++ creating new conjecture
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + 0) + (0 + xts)
+++ creating new conjecture
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = (s(s(s(s(s(xts1))))) + s(xts2)) + (0 + xts1)
--- clause
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + 0) + (0 + xts)
... reduced in 1 step to
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
--- clause
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = (s(s(s(s(s(xts1))))) + s(xts2)) + (0 + xts1)
... reduced in 1 step to
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(xts)) + (0 + xts))) = (s(s(s(s(s(xts))))) + V) + (0 + xts)
... oriented to rule
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
+++ added new clause(s)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
... induction variables of
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts) + 0))))) + V) + (0 + xts)
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(xts2) + s(xts1)))))) + V) + (0 + xts2)
--- clause
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts) + 0))))) + V) + (0 + xts)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(xts2) + s(xts1)))))) + V) + (0 + xts2)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2))) = (s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2)
... oriented to rule
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
+++ added new clause(s)
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing on conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
... induction variables of
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + (V1 + 0)) = s(s(V2)) + (s(s(0)) + ((s(V1) + xts) + 0))
+++ creating new conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + s(xts1)))
--- clause
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + (V1 + 0)) = s(s(V2)) + (s(s(0)) + ((s(V1) + xts) + 0))
... reduced in 2 steps to
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
--- clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1))) = s(s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1)))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
+++ moved
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
... induction variables of
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
... with variable V
+++ creating new conjecture
	s(s(s(s(s(0))))) = s(s(s(s(s(0))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(0))))) + s(xts)
--- clause
	s(s(s(s(s(0))))) = s(s(s(s(s(0))))) + 0
... reduced to tautology
	s(s(s(s(s(0))))) = s(s(s(s(s(0)))))
--- clause
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(0))))) + s(xts)
... reduced in 1 step to
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(0))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(V))))) = s(s(s(s(s(0))))) + V
... oriented to rule
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
+++ added new clause(s)
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
... to conjectures
--- clause
	s(s(s(s(s(xts))))) = s(s(s(s(s(0))))) + xts
... reduced to tautology
	s(s(s(s(s(xts))))) = s(s(s(s(s(xts)))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
... induction variables of
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0 + (s(0) + 0)))) + V)) = s(s(s(s(s(0 + (s(0) + 0)))))) + V
+++ creating new conjecture
	s(s(s(s(s(0 + (s(0) + s(xts))))) + V)) = s(s(s(s(s(0 + (s(0) + s(xts))))))) + V
--- clause
	s(s(s(s(s(0 + (s(0) + 0)))) + V)) = s(s(s(s(s(0 + (s(0) + 0)))))) + V
... reduced in 7 steps to
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
--- clause
	s(s(s(s(s(0 + (s(0) + s(xts))))) + V)) = s(s(s(s(s(0 + (s(0) + s(xts))))))) + V
... reduced in 5 steps to
	s(s(s(s(s(s(0 + (s(0) + xts)))) + V))) = s(s(s(s(s(s(0 + (s(0) + xts))))))) + V
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))))) + V
... oriented to rule
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
+++ added new clause(s)
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(0 + (s(0) + xts)))) + V))) = s(s(s(s(s(s(0 + (s(0) + xts))))))) + V
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(0 + (s(0) + xts)))) + V))) = s(s(s(s(s(s(0 + (s(0) + xts))))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
... induction variables of
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(0 + 0))))) + V) = s(s(s(s(s(s(0 + 0)))))) + V
+++ creating new conjecture
	s(s(s(s(s(s(0 + s(xts)))))) + V) = s(s(s(s(s(s(0 + s(xts))))))) + V
--- clause
	s(s(s(s(s(s(0 + 0))))) + V) = s(s(s(s(s(s(0 + 0)))))) + V
... reduced in 3 steps to
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
--- clause
	s(s(s(s(s(s(0 + s(xts)))))) + V) = s(s(s(s(s(s(0 + s(xts))))))) + V
... reduced in 2 steps to
	s(s(s(s(s(s(s(0 + xts)))))) + V) = s(s(s(s(s(s(s(0 + xts))))))) + V
--- clause
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(0 + xts))))) + V) = s(s(s(s(s(s(0 + xts)))))) + V
... oriented to rule
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
+++ added new clause(s)
	s(s(s(s(s(s(s(0 + xts)))))) + V) = s(s(s(s(s(s(s(0 + xts))))))) + V
... to conjectures
--- clause
	s(s(s(s(s(s(0 + (s(0) + xts)))) + V))) = s(s(s(s(s(s(0 + (s(0) + xts))))))) + V
... reduced to tautology
	s(s(s(s(s(s(0 + (s(0) + xts)))) + V))) = s(s(s(s(s(s(0 + (s(0) + xts)))) + V)))
--- clause
	s(s(s(s(s(s(s(0 + xts)))))) + V) = s(s(s(s(s(s(s(0 + xts))))))) + V
... reduced in 1 step to
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
... induction variables of
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
... with variable xts1
+++ creating new conjecture
	s(s(s(s(s(0 + (s(s(xts)) + 0))))) + V) = s(s(s(s(s(0 + (s(s(xts)) + 0)))))) + V
+++ creating new conjecture
	s(s(s(s(s(0 + (s(s(xts2)) + s(xts1)))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + s(xts1))))))) + V
--- clause
	s(s(s(s(s(0 + (s(s(xts)) + 0))))) + V) = s(s(s(s(s(0 + (s(s(xts)) + 0)))))) + V
... reduced in 7 steps to
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
--- clause
	s(s(s(s(s(0 + (s(s(xts2)) + s(xts1)))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + s(xts1))))))) + V
... reduced to tautology
	s(s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V) = s(s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V)
--- clause
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
... subsumed by an existing conjecture
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V) = s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V
... oriented to rule
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
... induction variables of
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(0)) + (0 + 0))) = s(s(s(s(s(0))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(xts))) + (0 + s(xts)))) = s(s(s(s(s(s(xts)))))) + (0 + s(xts))
--- clause
	s(s(s(0)) + (s(s(0)) + (0 + 0))) = s(s(s(s(s(0))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(0))))) = s(s(s(s(s(0)))))
--- clause
	s(s(s(0)) + (s(s(s(xts))) + (0 + s(xts)))) = s(s(s(s(s(s(xts)))))) + (0 + s(xts))
... reduced in 5 steps to
	s(s(s(s(0)) + (s(s(s(xts))) + (0 + xts)))) = s(s(s(s(s(s(s(xts)))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) = s(s(s(s(s(xts))))) + (0 + xts)
... oriented to rule
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
+++ inductive narrowing on conjecture
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
... induction variables of
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
... with variable xts1
+++ creating new conjecture
	s(s(s(s(xts))) + (s(s(0)) + (0 + 0))) = s(s(s(s(s(s(0))))) + xts) + (0 + 0)
+++ creating new conjecture
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + s(xts1)))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + s(xts1))
--- clause
	s(s(s(s(xts))) + (s(s(0)) + (0 + 0))) = s(s(s(s(s(s(0))))) + xts) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(xts))))))
--- clause
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + s(xts1)))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + s(xts1))
... reduced in 5 steps to
	s(s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))) = s(s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1))
... decomposed into new clause(s)
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1))) = s(s(s(s(s(s(xts1))))) + xts2) + (0 + xts1)
... oriented to rule
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
+++ added new clause(s)
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
... induction variables of
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
... are:
	V:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
... with variable V
+++ creating new conjecture
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + 0) + (0 + xts)
+++ creating new conjecture
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = (s(s(s(s(s(s(xts1)))))) + s(xts2)) + (0 + xts1)
--- clause
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + 0) + (0 + xts)
... reduced in 1 step to
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
--- clause
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = (s(s(s(s(s(s(xts1)))))) + s(xts2)) + (0 + xts1)
... reduced in 1 step to
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(xts)) + (s(0) + xts))) = (s(s(s(s(s(s(xts)))))) + V) + (0 + xts)
... oriented to rule
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
+++ added new clause(s)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
... induction variables of
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts) + 0)))))) + V) + (0 + xts)
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(xts2) + s(xts1))))))) + V) + (0 + xts2)
--- clause
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts) + 0)))))) + V) + (0 + xts)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(xts2) + s(xts1))))))) + V) + (0 + xts2)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = (s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2)
... oriented to rule
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
+++ added new clause(s)
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
+++ inductive narrowing on conjecture
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
... induction variables of
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
... are:
	V1:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
... with variable V1
+++ creating new conjecture
	s(s(s(V) + (0 + xts))) + (s(s(0)) + 0) = s(s(V)) + (s(s(0)) + (s(0) + xts))
+++ creating new conjecture
	s(s(s(V) + (0 + xts2))) + (s(s(0)) + s(xts1)) = s(s(V)) + (s(s(0)) + (s(s(xts1)) + xts2))
--- clause
	s(s(s(V) + (0 + xts))) + (s(s(0)) + 0) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... reduced in 4 steps to
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
--- clause
	s(s(s(V) + (0 + xts2))) + (s(s(0)) + s(xts1)) = s(s(V)) + (s(s(0)) + (s(s(xts1)) + xts2))
... reduced in 2 steps to
	s(s(s(s(V) + (0 + xts2))) + (s(s(0)) + xts1)) = s(s(V)) + (s(s(0)) + (s(s(xts1)) + xts2))
+++ inductive narrowing succeeded
--- clause
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) = s(s(V2)) + (s(s(0)) + (s(V1) + xts))
... oriented to rule
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
+++ added new clause(s)
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(s(V) + (0 + xts2))) + (s(s(0)) + xts1)) = s(s(V)) + (s(s(0)) + (s(s(xts1)) + xts2))
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... modified clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
--- clause
	s(s(s(s(V) + (0 + xts2))) + (s(s(0)) + xts1)) = s(s(V)) + (s(s(0)) + (s(s(xts1)) + xts2))
... reduced in 1 step to
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing on conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
... induction variables of
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + (V1 + 0)) = s(s(V2)) + (s(s(s(0))) + ((s(V1) + xts) + 0))
+++ creating new conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + s(xts1)))
--- clause
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + (V1 + 0)) = s(s(V2)) + (s(s(s(0))) + ((s(V1) + xts) + 0))
... reduced in 2 steps to
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
--- clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1))) = s(s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1)))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
+++ moved
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... modified clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
... induction variables of
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
... with variable V
+++ creating new conjecture
	s(s(s(s(s(s(0)))))) = s(s(s(s(s(s(0)))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(0)))))) + s(xts)
--- clause
	s(s(s(s(s(s(0)))))) = s(s(s(s(s(s(0)))))) + 0
... reduced to tautology
	s(s(s(s(s(s(0)))))) = s(s(s(s(s(s(0))))))
--- clause
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(0)))))) + s(xts)
... reduced in 1 step to
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(s(0)))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(0)))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(0)))))) + V
... oriented to rule
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
+++ added new clause(s)
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(0)))))) + xts
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... modified clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
--- clause
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(0)))))) + xts
... reduced to tautology
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(xts))))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
... induction variables of
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(0 + 0))))) + V)) = s(s(s(s(s(s(s(0 + 0))))))) + V
+++ creating new conjecture
	s(s(s(s(s(s(s(0 + s(xts)))))) + V)) = s(s(s(s(s(s(s(0 + s(xts)))))))) + V
--- clause
	s(s(s(s(s(s(s(0 + 0))))) + V)) = s(s(s(s(s(s(s(0 + 0))))))) + V
... reduced in 3 steps to
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
--- clause
	s(s(s(s(s(s(s(0 + s(xts)))))) + V)) = s(s(s(s(s(s(s(0 + s(xts)))))))) + V
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(0 + xts))))) + V)) = s(s(s(s(s(s(s(0 + xts))))))) + V
... oriented to rule
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
+++ added new clause(s)
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... modified clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
... induction variables of
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(0))) + (0 + 0))) = s(s(s(s(s(s(0)))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + s(xts)))) = s(s(s(s(s(s(s(xts))))))) + (0 + s(xts))
--- clause
	s(s(s(0)) + (s(s(s(0))) + (0 + 0))) = s(s(s(s(s(s(0)))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(0)))))) = s(s(s(s(s(s(0))))))
--- clause
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + s(xts)))) = s(s(s(s(s(s(s(xts))))))) + (0 + s(xts))
... reduced in 5 steps to
	s(s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts)))) = s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
... oriented to rule
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... modified clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
+++ inductive narrowing on conjecture
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
... induction variables of
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
... with variable xts1
+++ creating new conjecture
	s(s(s(s(xts))) + (s(s(s(0))) + (0 + 0))) = s(s(s(s(s(s(s(0)))))) + xts) + (0 + 0)
+++ creating new conjecture
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + s(xts1)))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + s(xts1))
--- clause
	s(s(s(s(xts))) + (s(s(s(0))) + (0 + 0))) = s(s(s(s(s(s(s(0)))))) + xts) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(s(xts)))))))
--- clause
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + s(xts1)))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + s(xts1))
... reduced in 5 steps to
	s(s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))) = s(s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1))
... decomposed into new clause(s)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
... oriented to rule
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
+++ added new clause(s)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
... to conjectures
--- clause
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(s(s(s(xts1)))))) + xts2) + (0 + xts1)
... reduced in 1 step to
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1))) = s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... modified clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... decomposed into new clause(s)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
... induction variables of
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(0)) + (s(0) + 0))) = s(s(s(s(s(s(0)))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + s(xts)))) = s(s(s(s(s(s(s(xts))))))) + (0 + s(xts))
--- clause
	s(s(s(0)) + (s(s(0)) + (s(0) + 0))) = s(s(s(s(s(s(0)))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(0)))))) = s(s(s(s(s(s(0))))))
--- clause
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + s(xts)))) = s(s(s(s(s(s(s(xts))))))) + (0 + s(xts))
... reduced in 5 steps to
	s(s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts)))) = s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) = s(s(s(s(s(s(xts)))))) + (0 + xts)
... oriented to rule
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... modified clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
... induction variables of
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
... are:
	V:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
... with variable V
+++ creating new conjecture
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + 0) + (0 + xts)
+++ creating new conjecture
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = (s(s(s(s(s(s(s(xts1))))))) + s(xts2)) + (0 + xts1)
--- clause
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + 0) + (0 + xts)
... reduced in 1 step to
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
--- clause
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = (s(s(s(s(s(s(s(xts1))))))) + s(xts2)) + (0 + xts1)
... reduced in 1 step to
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts))) = (s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts)
... oriented to rule
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
+++ added new clause(s)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... modified clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
... induction variables of
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts) + 0))))))) + V) + (0 + xts)
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + s(xts1)))))))) + V) + (0 + xts2)
--- clause
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts) + 0))))))) + V) + (0 + xts)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + s(xts1)))))))) + V) + (0 + xts2)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2))) = (s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2)
... oriented to rule
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
+++ added new clause(s)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(V) + (0 + xts))))) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... modified clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
+++ inductive narrowing on conjecture
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... induction variables of
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... with variable xts
+++ creating new conjecture
	s(s(s(s(0 + (s(0) + 0)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + 0))
+++ creating new conjecture
	s(s(s(s(0 + (s(0) + s(xts))))) + V) = s(s(V)) + (s(s(0)) + (s(0) + s(xts)))
--- clause
	s(s(s(s(0 + (s(0) + 0)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + 0))
... reduced to tautology
	s(s(s(s(s(V))))) = s(s(s(s(s(V)))))
--- clause
	s(s(s(s(0 + (s(0) + s(xts))))) + V) = s(s(V)) + (s(s(0)) + (s(0) + s(xts)))
... reduced in 6 steps to
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(V)) + (s(s(0)) + (s(0) + xts)))
... decomposed into new clause(s)
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... oriented to rule
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
+++ added new clause(s)
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... to conjectures
--- clause
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(V)) + (s(s(0)) + (s(0) + xts))
... reduced to tautology
	s(s(s(s(0 + (s(0) + xts)))) + V) = s(s(s(s(0 + (s(0) + xts)))) + V)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
... induction variables of
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(V)) + (s(s(0)) + (s(xts) + 0))) = s(s(V)) + (s(s(0)) + (s(s(xts)) + 0))
+++ creating new conjecture
	s(s(s(V)) + (s(s(0)) + (s(xts2) + s(xts1)))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + s(xts1)))
--- clause
	s(s(s(V)) + (s(s(0)) + (s(xts) + 0))) = s(s(V)) + (s(s(0)) + (s(s(xts)) + 0))
... reduced to tautology
	s(s(s(s(V)) + (s(s(0)) + xts))) = s(s(s(s(V)) + (s(s(0)) + xts)))
--- clause
	s(s(s(V)) + (s(s(0)) + (s(xts2) + s(xts1)))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))) = s(s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)))
... decomposed into new clause(s)
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
... oriented to rule
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
+++ added new clause(s)
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
... to conjectures
--- clause
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1))
... reduced to tautology
	s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1))) = s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
+++ inductive narrowing on conjecture
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
... induction variables of
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
... are:
	V1:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
... with variable V1
+++ creating new conjecture
	s(s(s(V) + (0 + xts))) + (s(s(s(0))) + 0) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
+++ creating new conjecture
	s(s(s(V) + (0 + xts2))) + (s(s(s(0))) + s(xts1)) = s(s(V)) + (s(s(s(0))) + (s(s(xts1)) + xts2))
--- clause
	s(s(s(V) + (0 + xts))) + (s(s(s(0))) + 0) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... reduced in 5 steps to
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
--- clause
	s(s(s(V) + (0 + xts2))) + (s(s(s(0))) + s(xts1)) = s(s(V)) + (s(s(s(0))) + (s(s(xts1)) + xts2))
... reduced in 2 steps to
	s(s(s(s(V) + (0 + xts2))) + (s(s(s(0))) + xts1)) = s(s(V)) + (s(s(s(0))) + (s(s(xts1)) + xts2))
+++ inductive narrowing succeeded
--- clause
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) = s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
... oriented to rule
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
+++ added new clause(s)
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(s(V) + (0 + xts2))) + (s(s(s(0))) + xts1)) = s(s(V)) + (s(s(s(0))) + (s(s(xts1)) + xts2))
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
--- clause
	s(s(s(s(V) + (0 + xts2))) + (s(s(s(0))) + xts1)) = s(s(V)) + (s(s(s(0))) + (s(s(xts1)) + xts2))
... reduced in 1 step to
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing on conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
... induction variables of
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(V2) + (0 + xts))) + (s(s(s(s(0)))) + (V1 + 0)) = s(s(V2)) + (s(s(s(s(0)))) + ((s(V1) + xts) + 0))
+++ creating new conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + s(xts1)))
--- clause
	s(s(s(V2) + (0 + xts))) + (s(s(s(s(0)))) + (V1 + 0)) = s(s(V2)) + (s(s(s(s(0)))) + ((s(V1) + xts) + 0))
... reduced in 4 steps to
	s(s(s(V2) + (0 + xts))) + s(s(s(s(V1)))) = s(s(V2)) + s(s(s(s(s(V1) + xts))))
--- clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1))) = s(s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1)))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
+++ moved
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(V2) + (0 + xts))) + s(s(s(s(V1)))) = s(s(V2)) + s(s(s(s(s(V1) + xts))))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
--- clause
	s(s(s(V2) + (0 + xts))) + s(s(s(s(V1)))) = s(s(V2)) + s(s(s(s(s(V1) + xts))))
... reduced in 8 steps to
	s(s(s(s(s(s(s(V2) + (0 + xts))) + V1)))) = s(s(s(s(s(s(V2)) + (s(V1) + xts)))))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
... induction variables of
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
... with variable V
+++ creating new conjecture
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0))))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(s(s(s(0))))))) + s(xts)
--- clause
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0))))))) + 0
... reduced to tautology
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0)))))))
--- clause
	s(s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(s(s(s(0))))))) + s(xts)
... reduced in 1 step to
	s(s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(s(s(s(s(0))))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(s(0))))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(V))))))) = s(s(s(s(s(s(s(0))))))) + V
... oriented to rule
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
+++ added new clause(s)
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(s(0))))))) + xts
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
--- clause
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(s(0))))))) + xts
... reduced to tautology
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(s(xts)))))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
... induction variables of
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(s(0 + 0))))) + V))) = s(s(s(s(s(s(s(s(0 + 0)))))))) + V
+++ creating new conjecture
	s(s(s(s(s(s(s(s(0 + s(xts)))))) + V))) = s(s(s(s(s(s(s(s(0 + s(xts))))))))) + V
--- clause
	s(s(s(s(s(s(s(s(0 + 0))))) + V))) = s(s(s(s(s(s(s(s(0 + 0)))))))) + V
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
--- clause
	s(s(s(s(s(s(s(s(0 + s(xts)))))) + V))) = s(s(s(s(s(s(s(s(0 + s(xts))))))))) + V
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(s(0 + xts))))) + V))) = s(s(s(s(s(s(s(s(0 + xts)))))))) + V
... oriented to rule
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
+++ added new clause(s)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... induction variables of
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(s(0)))) + (0 + 0))) = s(s(s(s(s(s(s(0))))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + s(xts))
--- clause
	s(s(s(0)) + (s(s(s(s(0)))) + (0 + 0))) = s(s(s(s(s(s(s(0))))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0)))))))
--- clause
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + s(xts))
... reduced in 5 steps to
	s(s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... oriented to rule
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
+++ inductive narrowing on conjecture
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
... induction variables of
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
... with variable xts1
+++ creating new conjecture
	s(s(s(s(xts))) + (s(s(s(s(0)))) + (0 + 0))) = s(s(s(s(s(s(s(s(0))))))) + xts) + (0 + 0)
+++ creating new conjecture
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + s(xts1)))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + s(xts1))
--- clause
	s(s(s(s(xts))) + (s(s(s(s(0)))) + (0 + 0))) = s(s(s(s(s(s(s(s(0))))))) + xts) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(s(s(s(s(xts))))))))
--- clause
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + s(xts1)))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + s(xts1))
... reduced in 5 steps to
	s(s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))) = s(s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1))
... decomposed into new clause(s)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
... oriented to rule
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
+++ added new clause(s)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
... to conjectures
--- clause
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(s(s(s(xts1))))))) + xts2) + (0 + xts1)
... reduced in 1 step to
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... decomposed into new clause(s)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
+++ inductive narrowing on conjecture
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
... induction variables of
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(xts))) + (s(s(0)) + (s(0) + 0)) = s(s(s(xts))) + (s(s(s(0))) + (0 + 0))
+++ creating new conjecture
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + s(xts1))) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + s(xts1)))
--- clause
	s(s(s(xts))) + (s(s(0)) + (s(0) + 0)) = s(s(s(xts))) + (s(s(s(0))) + (0 + 0))
... reduced to tautology
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(xts))))))
--- clause
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + s(xts1))) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1))) = s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
... decomposed into new clause(s)
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
... oriented to rule
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
+++ added new clause(s)
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... induction variables of
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(0))) + (s(0) + 0))) = s(s(s(s(s(s(s(0))))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + s(xts))
--- clause
	s(s(s(0)) + (s(s(s(0))) + (s(0) + 0))) = s(s(s(s(s(s(s(0))))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0)))))))
--- clause
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + s(xts))
... reduced in 5 steps to
	s(s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts)))) = s(s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... oriented to rule
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... induction variables of
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(0)) + (s(s(0)) + (s(s(0)) + 0))) = s(s(s(s(s(s(s(0))))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + s(xts))
--- clause
	s(s(s(0)) + (s(s(0)) + (s(s(0)) + 0))) = s(s(s(s(s(s(s(0))))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(0))))))) = s(s(s(s(s(s(s(0)))))))
--- clause
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + s(xts))
... reduced in 5 steps to
	s(s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts)))) = s(s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(xts))))))) + (0 + xts)
... oriented to rule
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
... induction variables of
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
... are:
	V:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
... with variable V
+++ creating new conjecture
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + 0) + (0 + xts)
+++ creating new conjecture
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = (s(s(s(s(s(s(s(s(xts1)))))))) + s(xts2)) + (0 + xts1)
--- clause
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + 0) + (0 + xts)
... reduced in 1 step to
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- clause
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = (s(s(s(s(s(s(s(s(xts1)))))))) + s(xts2)) + (0 + xts1)
... reduced in 1 step to
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts))) = (s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts)
... oriented to rule
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
+++ added new clause(s)
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
... induction variables of
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts)) + (s(s(s(s(0)))) + xts))) = (s(s(s(s(s(s(s(s(s(xts) + 0)))))))) + V) + (0 + xts)
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + s(xts1))))))))) + V) + (0 + xts2)
--- clause
	s(s(s(V)) + (s(s(xts)) + (s(s(s(s(0)))) + xts))) = (s(s(s(s(s(s(s(s(s(xts) + 0)))))))) + V) + (0 + xts)
... reduced in 2 steps to
	s(s(s(V)) + (s(s(xts)) + s(s(s(s(xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + s(xts1))))))))) + V) + (0 + xts2)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2))) = (s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2)
... oriented to rule
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
+++ added new clause(s)
	s(s(s(V)) + (s(s(xts)) + s(s(s(s(xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
... to clause
	s(s(s(s(s(s(V) + (0 + xts)))))) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... modified clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
--- clause
	s(s(s(V)) + (s(s(xts)) + s(s(s(s(xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
... reduced in 8 steps to
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
+++ inductive narrowing on conjecture
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... induction variables of
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0 + (s(0) + 0)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + 0))
+++ creating new conjecture
	s(s(s(s(s(0 + (s(0) + s(xts))))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + s(xts)))
--- clause
	s(s(s(s(s(0 + (s(0) + 0)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + 0))
... reduced to tautology
	s(s(s(s(s(s(V)))))) = s(s(s(s(s(s(V))))))
--- clause
	s(s(s(s(s(0 + (s(0) + s(xts))))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + s(xts)))
... reduced in 6 steps to
	s(s(s(s(s(s(0 + (s(0) + xts)))) + V))) = s(s(s(V)) + (s(s(s(0))) + (s(0) + xts)))
... decomposed into new clause(s)
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... oriented to rule
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
+++ added new clause(s)
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... to conjectures
--- clause
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(V)) + (s(s(s(0))) + (s(0) + xts))
... reduced to tautology
	s(s(s(s(s(0 + (s(0) + xts)))) + V)) = s(s(s(s(s(0 + (s(0) + xts)))) + V))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
... induction variables of
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(V)) + (s(s(s(0))) + (s(xts) + 0))) = s(s(V)) + (s(s(s(0))) + (s(s(xts)) + 0))
+++ creating new conjecture
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + s(xts1)))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + s(xts1)))
--- clause
	s(s(s(V)) + (s(s(s(0))) + (s(xts) + 0))) = s(s(V)) + (s(s(s(0))) + (s(s(xts)) + 0))
... reduced to tautology
	s(s(s(s(V)) + (s(s(s(0))) + xts))) = s(s(s(s(V)) + (s(s(s(0))) + xts)))
--- clause
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + s(xts1)))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))) = s(s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)))
... decomposed into new clause(s)
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
... oriented to rule
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
+++ added new clause(s)
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
... to conjectures
--- clause
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1))
... reduced to tautology
	s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1))) = s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing on conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
... induction variables of
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(V2) + (0 + xts))) + (s(s(s(s(s(0))))) + (V1 + 0)) = s(s(V2)) + (s(s(s(s(s(0))))) + ((s(V1) + xts) + 0))
+++ creating new conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + s(xts1)))
--- clause
	s(s(s(V2) + (0 + xts))) + (s(s(s(s(s(0))))) + (V1 + 0)) = s(s(V2)) + (s(s(s(s(s(0))))) + ((s(V1) + xts) + 0))
... reduced in 4 steps to
	s(s(s(V2) + (0 + xts))) + s(s(s(s(s(V1))))) = s(s(V2)) + s(s(s(s(s(s(V1) + xts)))))
--- clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1))) = s(s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1)))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
+++ moved
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(V2) + (0 + xts))) + s(s(s(s(s(V1))))) = s(s(V2)) + s(s(s(s(s(s(V1) + xts)))))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
... to conjectures
--- clause
	s(s(s(V2) + (0 + xts))) + s(s(s(s(s(V1))))) = s(s(V2)) + s(s(s(s(s(s(V1) + xts)))))
... reduced in 10 steps to
	s(s(s(s(s(s(s(s(V2) + (0 + xts))) + V1))))) = s(s(s(s(s(s(s(V2)) + (s(V1) + xts))))))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
+++ inductive narrowing on conjecture
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... induction variables of
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(V2) + (0 + 0))) + V1 = s(s(V2)) + (s(V1) + 0)
+++ creating new conjecture
	s(s(s(V2) + (0 + s(xts)))) + V1 = s(s(V2)) + (s(V1) + s(xts))
--- clause
	s(s(s(V2) + (0 + 0))) + V1 = s(s(V2)) + (s(V1) + 0)
... reduced in 4 steps to
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
--- clause
	s(s(s(V2) + (0 + s(xts)))) + V1 = s(s(V2)) + (s(V1) + s(xts))
... reduced in 4 steps to
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(V2)) + (s(V1) + xts))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
+++ moved
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(V2)) + (s(V1) + xts))
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(0)) + (s(s(s(s(s(xts))))) + (0 + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... modified clause
	s(s(s(s(0) + (0 + (0 + xts)))) + s(s(s(s(xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- clause
	s(s(s(s(0) + (0 + (0 + xts)))) + s(s(s(s(xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... reduced in 4 steps to
	s(s(s(s(s(s(s(s(0) + (0 + (0 + xts)))) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(0)) + (s(s(s(s(xts)))) + (s(0) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... modified clause
	s(s(s(s(0) + (0 + (s(0) + xts)))) + s(s(s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- clause
	s(s(s(s(0) + (0 + (s(0) + xts)))) + s(s(s(xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... reduced in 3 steps to
	s(s(s(s(s(s(s(0) + (0 + (s(0) + xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(0)) + (s(s(s(xts))) + (s(s(0)) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... modified clause
	s(s(s(s(0) + (0 + (s(s(0)) + xts)))) + s(s(xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- clause
	s(s(s(s(0) + (0 + (s(s(0)) + xts)))) + s(s(xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... reduced in 2 steps to
	s(s(s(s(s(s(0) + (0 + (s(s(0)) + xts)))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... modified clause
	s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + s(xts)) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- clause
	s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + s(xts)) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... reduced in 1 step to
	s(s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + xts)) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(V2)) + (s(V1) + xts))
... modified clause
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
--- clause
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... subsumed by hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(s(s(s(s(s(0) + (0 + (0 + xts)))) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(s(s(s(s(0) + (0 + (s(0) + xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0) + (0 + (s(s(0)) + xts)))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + xts)) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
... induction variables of
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
... are:
	V:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
... with variable V
+++ creating new conjecture
	s(s(s(s(s(s(s(s(0)))))))) = s(s(s(s(s(s(s(s(0)))))))) + 0
+++ creating new conjecture
	s(s(s(s(s(s(s(s(s(xts))))))))) = s(s(s(s(s(s(s(s(0)))))))) + s(xts)
--- clause
	s(s(s(s(s(s(s(s(0)))))))) = s(s(s(s(s(s(s(s(0)))))))) + 0
... reduced to tautology
	s(s(s(s(s(s(s(s(0)))))))) = s(s(s(s(s(s(s(s(0))))))))
--- clause
	s(s(s(s(s(s(s(s(s(xts))))))))) = s(s(s(s(s(s(s(s(0)))))))) + s(xts)
... reduced in 1 step to
	s(s(s(s(s(s(s(s(s(xts))))))))) = s(s(s(s(s(s(s(s(s(0)))))))) + xts)
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(s(s(s(s(0)))))))) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(s(V)))))))) = s(s(s(s(s(s(s(s(0)))))))) + V
... oriented to rule
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
+++ added new clause(s)
	s(s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(s(s(s(s(0)))))))) + xts
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(s(s(s(s(s(0) + (0 + (0 + xts)))) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... modified clause
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(s(s(s(s(0) + (0 + (s(0) + xts)))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... modified clause
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(s(s(s(0) + (0 + (s(s(0)) + xts)))) + xts))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... modified clause
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + xts)) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... modified clause
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
--- clause
	s(s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(s(s(s(s(0)))))))) + xts
... reduced to tautology
	s(s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(s(s(s(s(xts))))))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
... induction variables of
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(s(s(0 + 0))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + 0))))))))) + V
+++ creating new conjecture
	s(s(s(s(s(s(s(s(s(0 + s(xts)))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + s(xts)))))))))) + V
--- clause
	s(s(s(s(s(s(s(s(s(0 + 0))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + 0))))))))) + V
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
--- clause
	s(s(s(s(s(s(s(s(s(0 + s(xts)))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + s(xts)))))))))) + V
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(s(s(0 + xts))))) + V)))) = s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V
... oriented to rule
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
+++ added new clause(s)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... induction variables of
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(0)) + (s(0) + (0 + 0))))))) = s(s(s(s(s(s(s(s(0)))))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(s(s(s(s(0)) + (s(s(xts)) + (0 + s(xts)))))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + s(xts))
--- clause
	s(s(s(s(s(s(s(0)) + (s(0) + (0 + 0))))))) = s(s(s(s(s(s(s(s(0)))))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(s(0)))))))) = s(s(s(s(s(s(s(s(0))))))))
--- clause
	s(s(s(s(s(s(s(0)) + (s(s(xts)) + (0 + s(xts)))))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + s(xts))
... reduced in 6 steps to
	s(s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts)))))) = s(s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... oriented to rule
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
+++ inductive narrowing on conjecture
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
... induction variables of
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
... with variable xts1
+++ creating new conjecture
	s(s(s(s(xts))) + (s(s(s(s(s(0))))) + (0 + 0))) = s(s(s(s(s(s(s(s(s(0)))))))) + xts) + (0 + 0)
+++ creating new conjecture
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + s(xts1)))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + s(xts1))
--- clause
	s(s(s(s(xts))) + (s(s(s(s(s(0))))) + (0 + 0))) = s(s(s(s(s(s(s(s(s(0)))))))) + xts) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(s(s(xts))))))))) = s(s(s(s(s(s(s(s(s(xts)))))))))
--- clause
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + s(xts1)))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + s(xts1))
... reduced in 5 steps to
	s(s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1)))) = s(s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1))
... decomposed into new clause(s)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
... oriented to rule
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
+++ added new clause(s)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
... to conjectures
--- clause
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(s(s(s(s(s(xts1)))))))) + xts2) + (0 + xts1)
... reduced in 1 step to
	s(s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1))) = s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
... decomposed into new clause(s)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
+++ inductive narrowing on conjecture
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
... induction variables of
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(xts))) + (s(s(0)) + (s(s(0)) + 0)) = s(s(s(xts))) + (s(s(s(s(0)))) + (0 + 0))
+++ creating new conjecture
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + s(xts1))) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + s(xts1)))
--- clause
	s(s(s(xts))) + (s(s(0)) + (s(s(0)) + 0)) = s(s(s(xts))) + (s(s(s(s(0)))) + (0 + 0))
... reduced to tautology
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(s(xts)))))))
--- clause
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + s(xts1))) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1))) = s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
... decomposed into new clause(s)
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
... oriented to rule
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
+++ added new clause(s)
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
+++ inductive narrowing on conjecture
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
... induction variables of
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(xts))) + (s(s(s(0))) + (s(0) + 0)) = s(s(s(xts))) + (s(s(s(s(0)))) + (0 + 0))
+++ creating new conjecture
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + s(xts1))) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + s(xts1)))
--- clause
	s(s(s(xts))) + (s(s(s(0))) + (s(0) + 0)) = s(s(s(xts))) + (s(s(s(s(0)))) + (0 + 0))
... reduced to tautology
	s(s(s(s(s(s(s(xts))))))) = s(s(s(s(s(s(s(xts)))))))
--- clause
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + s(xts1))) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1))) = s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
... decomposed into new clause(s)
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
+++ inductive narrowing succeeded
--- clause
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
... oriented to rule
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
+++ added new clause(s)
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... induction variables of
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(0)) + (s(0) + (s(0) + 0)))))) = s(s(s(s(s(s(s(s(0)))))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(s(s(s(0)) + (s(s(xts)) + (s(0) + s(xts))))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + s(xts))
--- clause
	s(s(s(s(s(s(0)) + (s(0) + (s(0) + 0)))))) = s(s(s(s(s(s(s(s(0)))))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(s(0)))))))) = s(s(s(s(s(s(s(s(0))))))))
--- clause
	s(s(s(s(s(s(0)) + (s(s(xts)) + (s(0) + s(xts))))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + s(xts))
... reduced in 6 steps to
	s(s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... oriented to rule
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... induction variables of
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(0)) + (s(0) + (s(s(0)) + 0))))) = s(s(s(s(s(s(s(s(0)))))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(s(s(0)) + (s(s(xts)) + (s(s(0)) + s(xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + s(xts))
--- clause
	s(s(s(s(s(0)) + (s(0) + (s(s(0)) + 0))))) = s(s(s(s(s(s(s(s(0)))))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(s(0)))))))) = s(s(s(s(s(s(s(s(0))))))))
--- clause
	s(s(s(s(s(0)) + (s(s(xts)) + (s(s(0)) + s(xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + s(xts))
... reduced in 6 steps to
	s(s(s(s(s(s(s(s(s(s(xts))))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... oriented to rule
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... induction variables of
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... with variable xts
+++ creating new conjecture
	s(s(s(s(0)) + (s(0) + (s(s(s(0))) + 0)))) = s(s(s(s(s(s(s(s(0)))))))) + (0 + 0)
+++ creating new conjecture
	s(s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + s(xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + s(xts))
--- clause
	s(s(s(s(0)) + (s(0) + (s(s(s(0))) + 0)))) = s(s(s(s(s(s(s(s(0)))))))) + (0 + 0)
... reduced to tautology
	s(s(s(s(s(s(s(s(0)))))))) = s(s(s(s(s(s(s(s(0))))))))
--- clause
	s(s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + s(xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + s(xts))
... reduced in 5 steps to
	s(s(s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts))))) = s(s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts))
... decomposed into new clause(s)
	s(s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
... oriented to rule
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
+++ added new clause(s)
	s(s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(s(0)) + (s(s(xts)) + (s(s(s(0))) + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... modified clause
	s(s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + s(xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- clause
	s(s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + s(xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... reduced in 1 step to
	s(s(s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
... induction variables of
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
... are:
	V:nat
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
... with variable V
+++ creating new conjecture
	s(s(s(s(s(s(s(0)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + 0) + (0 + xts)
+++ creating new conjecture
	s(s(s(s(s(s(s(s(xts2))) + (s(s(xts1)) + xts1)))))) = (s(s(s(s(s(s(s(s(s(xts1))))))))) + s(xts2)) + (0 + xts1)
--- clause
	s(s(s(s(s(s(s(0)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + 0) + (0 + xts)
... reduced in 1 step to
	s(s(s(s(s(s(s(0)) + (s(s(xts)) + xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- clause
	s(s(s(s(s(s(s(s(xts2))) + (s(s(xts1)) + xts1)))))) = (s(s(s(s(s(s(s(s(s(xts1))))))))) + s(xts2)) + (0 + xts1)
... reduced in 1 step to
	s(s(s(s(s(s(s(s(xts2))) + (s(s(xts1)) + xts1)))))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts)))))) = (s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts)
... oriented to rule
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
+++ added new clause(s)
	s(s(s(s(s(s(s(0)) + (s(s(xts)) + xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(xts2))) + (s(s(xts1)) + xts1)))))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(s(s(s(0) + (0 + (s(s(s(0))) + xts)))) + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... modified clause
	s(s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- clause
	s(s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... reduced in 1 step to
	s(s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(s(s(s(s(0)) + (s(s(xts)) + xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... modified clause
	s(s(s(s(s(s(s(s(0) + (0 + xts))) + s(xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- clause
	s(s(s(s(s(s(s(s(0) + (0 + xts))) + s(xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... reduced in 1 step to
	s(s(s(s(s(s(s(s(s(0) + (0 + xts))) + xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(s(0) + (0 + xts))) + xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(xts2))) + (s(s(xts1)) + xts1)))))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
+++ inductive narrowing on conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
... induction variables of
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
... with variable xts1
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts)) + (s(s(s(s(s(0))))) + xts))) = (s(s(s(s(s(s(s(s(s(s(xts) + 0))))))))) + V) + (0 + xts)
+++ creating new conjecture
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(s(xts1)))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + s(xts1)))))))))) + V) + (0 + xts2)
--- clause
	s(s(s(V)) + (s(s(xts)) + (s(s(s(s(s(0))))) + xts))) = (s(s(s(s(s(s(s(s(s(s(xts) + 0))))))))) + V) + (0 + xts)
... reduced in 2 steps to
	s(s(s(V)) + (s(s(xts)) + s(s(s(s(s(xts))))))) = (s(s(s(s(s(s(s(s(s(s(xts)))))))))) + V) + (0 + xts)
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(s(xts1)))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + s(xts1)))))))))) + V) + (0 + xts2)
... reduced in 1 step to
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(s(xts1)))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))))) + V) + (0 + xts2)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2)
... oriented to rule
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
+++ added new clause(s)
	s(s(s(V)) + (s(s(xts)) + s(s(s(s(s(xts))))))) = (s(s(s(s(s(s(s(s(s(s(xts)))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(s(xts1)))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))))) + V) + (0 + xts2)
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(s(s(s(s(s(s(0) + (0 + xts))) + xts)))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... modified clause
	s(s(s(s(s(s(s(s(0)) + (s(xts) + xts))))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
--- clause
	s(s(s(V)) + (s(s(xts)) + s(s(s(s(s(xts))))))) = (s(s(s(s(s(s(s(s(s(s(xts)))))))))) + V) + (0 + xts)
... reduced in 10 steps to
	s(s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))) = (s(s(s(s(s(s(s(s(s(s(xts)))))))))) + V) + (0 + xts)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(0)) + (s(xts) + xts))))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(xts2))) + (s(s(xts1)) + xts1)))))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))) = (s(s(s(s(s(s(s(s(s(s(xts)))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(s(xts1)))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))))) + V) + (0 + xts2)
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing on conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
... induction variables of
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
... with variable xts1
+++ creating new conjecture
	s(s(s(V2) + (0 + xts))) + (s(s(s(s(s(s(0)))))) + (V1 + 0)) = s(s(V2)) + (s(s(s(s(s(s(0)))))) + ((s(V1) + xts) + 0))
+++ creating new conjecture
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(s(xts1))))))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(s(s(s(s(xts1))))))) + ((s(V1) + xts2) + s(xts1)))
--- clause
	s(s(s(V2) + (0 + xts))) + (s(s(s(s(s(s(0)))))) + (V1 + 0)) = s(s(V2)) + (s(s(s(s(s(s(0)))))) + ((s(V1) + xts) + 0))
... reduced in 4 steps to
	s(s(s(V2) + (0 + xts))) + s(s(s(s(s(s(V1)))))) = s(s(V2)) + s(s(s(s(s(s(s(V1) + xts))))))
--- clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(s(xts1))))))) + (V1 + s(xts1))) = s(s(V2)) + (s(s(s(s(s(s(s(xts1))))))) + ((s(V1) + xts2) + s(xts1)))
... reduced in 6 steps to
	s(s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(s(xts1))))))) + (V1 + xts1))) = s(s(s(V2)) + (s(s(s(s(s(s(s(xts1))))))) + ((s(V1) + xts2) + xts1)))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(s(xts1))))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(s(xts1))))))) + ((s(V1) + xts2) + xts1))
+++ inductive narrowing succeeded
--- non-orientable clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
+++ moved
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
... to non-orientable hypotheses
+++ added new clause(s)
	s(s(s(V2) + (0 + xts))) + s(s(s(s(s(s(V1)))))) = s(s(V2)) + s(s(s(s(s(s(s(V1) + xts))))))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(s(xts1))))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(s(xts1))))))) + ((s(V1) + xts2) + xts1))
... to conjectures
--- clause
	s(s(s(V2) + (0 + xts))) + s(s(s(s(s(s(V1)))))) = s(s(V2)) + s(s(s(s(s(s(s(V1) + xts))))))
... reduced in 12 steps to
	s(s(s(s(s(s(s(s(s(V2) + (0 + xts))) + V1)))))) = s(s(s(s(s(s(s(s(V2)) + (s(V1) + xts)))))))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
--- clause
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... subsumed by hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
	s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(0)) + (s(xts) + xts))))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
	s(s(s(s(s(s(s(s(xts2))) + (s(s(xts1)) + xts1)))))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
	s(s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))) = (s(s(s(s(s(s(s(s(s(s(xts)))))))))) + V) + (0 + xts)
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(s(xts1)))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))))) + V) + (0 + xts2)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(s(xts1))))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(s(xts1))))))) + ((s(V1) + xts2) + xts1))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
+++ inductive narrowing on conjecture
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
... induction variables of
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
... are:
	V1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
... with variable V1
+++ creating new conjecture
	s(s(s(V))) + 0 = s(s(s(V)) + 0)
+++ creating new conjecture
	s(s(s(V))) + s(xts) = s(s(s(V)) + s(xts))
--- clause
	s(s(s(V))) + 0 = s(s(s(V)) + 0)
... reduced to tautology
	s(s(s(V))) = s(s(s(V)))
--- clause
	s(s(s(V))) + s(xts) = s(s(s(V)) + s(xts))
... reduced in 2 steps to
	s(s(s(s(V))) + xts) = s(s(s(s(V)) + xts))
... decomposed into new clause(s)
	s(s(s(V))) + xts = s(s(s(V)) + xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(V2))) + V1 = s(s(s(V2)) + V1)
... oriented to rule
	s(s(s(V2))) + V1 -> s(s(s(V2)) + V1)
+++ added new clause(s)
	s(s(s(V))) + xts = s(s(s(V)) + xts)
... to conjectures
--- clause
	s(s(s(s(V2) + (0 + xts)))) + V1 = s(s(s(s(V2) + (0 + xts))) + V1)
... reduced to tautology
	s(s(s(s(V2) + (0 + xts))) + V1) = s(s(s(s(V2) + (0 + xts))) + V1)
--- clause
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(0))))))))) + V
... reduced to tautology
	s(s(s(s(s(s(s(s(s(V))))))))) = s(s(s(s(s(s(s(s(s(V)))))))))
--- clause
	s(s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)))))))))) + V
... reduced to tautology
	s(s(s(s(s(s(s(s(s(s(0 + xts)) + V)))))))) = s(s(s(s(s(s(s(s(s(s(0 + xts)) + V))))))))
--- clause
	s(s(s(s(s(s(s(s(s(xts))))) + (0 + xts))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... reduced to tautology
	s(s(s(s(s(s(s(s(s(xts)) + (0 + xts)))))))) = s(s(s(s(s(s(s(s(s(xts)) + (0 + xts))))))))
--- clause
	s(s(s(s(xts2))) + (s(s(s(s(s(s(xts1)))))) + (0 + xts1))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
... reduced in 18 steps to
	s(s(s(s(xts2)) + s(s(s(s(s(s(xts1)) + (0 + xts1))))))) = s(s(s(s(s(s(s(s(s(s(xts1)) + xts2)) + (0 + xts1)))))))
--- clause
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(s(0))) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
... reduced in 6 steps to
	s(s(s(xts2)) + (s(s(xts1)) + s(s(s(0)) + xts1))) = s(s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1)))))
--- clause
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(s(0)) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
... reduced in 6 steps to
	s(s(s(xts2)) + s(s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1)))))
--- clause
	s(s(s(xts2))) + (s(s(s(s(xts1)))) + (s(0) + xts1)) = s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1))
... reduced in 11 steps to
	s(s(s(xts2)) + s(s(s(s(s(0 + xts1)) + xts1)))) = s(s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1)))))
--- clause
	s(s(s(s(s(s(s(s(s(xts)))))) + (0 + xts)))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... reduced to tautology
	s(s(s(s(s(s(s(s(s(xts)) + (0 + xts)))))))) = s(s(s(s(s(s(s(s(s(xts)) + (0 + xts))))))))
--- clause
	s(s(s(s(s(s(s(s(s(xts))))))) + (0 + xts))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... reduced to tautology
	s(s(s(s(s(s(s(s(s(xts)) + (0 + xts)))))))) = s(s(s(s(s(s(s(s(s(xts)) + (0 + xts))))))))
--- clause
	s(s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... reduced to tautology
	s(s(s(s(s(s(s(s(s(xts)) + (0 + xts)))))))) = s(s(s(s(s(s(s(s(s(xts)) + (0 + xts))))))))
--- clause
	s(s(s(s(s(s(s(s(0)) + (s(xts) + xts))))))) = s(s(s(s(s(s(s(s(s(xts))))))))) + (0 + xts)
... reduced in 7 steps to
	s(s(s(s(s(s(s(s(0)) + (s(xts) + xts))))))) = s(s(s(s(s(s(s(s(s(xts)) + (0 + xts))))))))
--- clause
	s(s(s(s(s(s(s(s(xts2))) + (s(s(xts1)) + xts1)))))) = s(s(s(s(s(s(s(s(s(s(xts1))))))))) + xts2) + (0 + xts1)
... reduced in 14 steps to
	s(s(s(s(s(s(s(s(xts2)) + (s(s(xts1)) + xts1))))))) = s(s(s(s(s(s(s(s(s(s(xts1)) + xts2)) + (0 + xts1)))))))
--- clause
	s(s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))) = (s(s(s(s(s(s(s(s(s(s(xts)))))))))) + V) + (0 + xts)
... reduced in 14 steps to
	s(s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))) = s(s(s(s(s(s(s(s(s(s(xts)) + V)) + (0 + xts)))))))
--- clause
	s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(s(xts1)))))) + xts2))) = (s(s(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))))) + V) + (0 + xts2)
... reduced in 18 steps to
	s(s(s(V)) + (s(s(xts2)) + s(s(s(s(s(s(xts1)) + xts2)))))) = s(s(s(s(s(s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2)))))))
--- clause
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(s(xts1))))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(s(xts1))))))) + ((s(V1) + xts2) + xts1))
... reduced in 10 steps to
	s(s(s(V2) + (0 + xts2))) + s(s(s(s(s(s(s(xts1)) + (V1 + xts1)))))) = s(s(V2)) + s(s(s(s(s(s(s(xts1)) + ((s(V1) + xts2) + xts1))))))
--- clause
	s(s(s(V))) + xts = s(s(s(V)) + xts)
... reduced to tautology
	s(s(s(V)) + xts) = s(s(s(V)) + xts)
... decomposed into new clause(s)
	s(s(xts2)) + s(s(s(s(s(s(xts1)) + (0 + xts1))))) = s(s(s(s(s(s(s(s(xts1)) + xts2)) + (0 + xts1)))))
... decomposed into new clause(s)
	s(s(xts2)) + (s(s(xts1)) + s(s(s(0)) + xts1)) = s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1))))
... decomposed into new clause(s)
	s(s(xts2)) + s(s(s(xts1)) + (s(s(0)) + xts1)) = s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1))))
... decomposed into new clause(s)
	s(s(xts2)) + s(s(s(s(s(0 + xts1)) + xts1))) = s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1))))
... decomposed into new clause(s)
	s(s(0)) + (s(xts) + xts) = s(s(s(xts)) + (0 + xts))
... decomposed into new clause(s)
	s(s(xts2)) + (s(s(xts1)) + xts1) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
... decomposed into new clause(s)
	s(s(V)) + (s(s(xts)) + xts) = s(s(s(s(xts)) + V)) + (0 + xts)
... decomposed into new clause(s)
	s(s(V)) + (s(s(xts2)) + s(s(s(s(s(s(xts1)) + xts2))))) = s(s(s(s(s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))))))

+++ Status of the Inference System
--- Conjectures:
	s(s(s(V2) + (0 + xts2))) + s(s(s(s(s(s(s(xts1)) + (V1 + xts1)))))) = s(s(V2)) + s(s(s(s(s(s(s(xts1)) + ((s(V1) + xts2) + xts1))))))
	s(s(xts2)) + s(s(s(s(s(s(xts1)) + (0 + xts1))))) = s(s(s(s(s(s(s(s(xts1)) + xts2)) + (0 + xts1)))))
	s(s(xts2)) + (s(s(xts1)) + s(s(s(0)) + xts1)) = s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1))))
	s(s(xts2)) + s(s(s(xts1)) + (s(s(0)) + xts1)) = s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1))))
	s(s(xts2)) + s(s(s(s(s(0 + xts1)) + xts1))) = s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1))))
	s(s(0)) + (s(xts) + xts) = s(s(s(xts)) + (0 + xts))
	s(s(xts2)) + (s(s(xts1)) + xts1) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
	s(s(V)) + (s(s(xts)) + xts) = s(s(s(s(xts)) + V)) + (0 + xts)
	s(s(V)) + (s(s(xts2)) + s(s(s(s(s(s(xts1)) + xts2))))) = s(s(s(s(s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))))))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(V2))) + V1 -> s(s(s(V2)) + V1)
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

--- clause
	s(s(s(V2) + (0 + xts2))) + s(s(s(s(s(s(s(xts1)) + (V1 + xts1)))))) = s(s(V2)) + s(s(s(s(s(s(s(xts1)) + ((s(V1) + xts2) + xts1))))))
... reduced in 10 steps to
	s(s(s(s(s(s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1))))))) = s(s(s(s(s(s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1)))))))
--- clause
	s(s(xts2)) + s(s(s(s(s(s(xts1)) + (0 + xts1))))) = s(s(s(s(s(s(s(s(xts1)) + xts2)) + (0 + xts1)))))
... reduced in 4 steps to
	s(s(s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1)))))) = s(s(s(s(s(s(s(s(xts1)) + xts2)) + (0 + xts1)))))
--- clause
	s(s(xts2)) + (s(s(xts1)) + s(s(s(0)) + xts1)) = s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1))))
... reduced in 5 steps to
	s(s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1)))))
--- clause
	s(s(xts2)) + s(s(s(xts1)) + (s(s(0)) + xts1)) = s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1))))
... reduced in 4 steps to
	s(s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1)))))
--- clause
	s(s(xts2)) + s(s(s(s(s(0 + xts1)) + xts1))) = s(s(xts2)) + s(s(s(s(s(xts1)) + (0 + xts1))))
... reduced in 6 steps to
	s(s(s(s(s(xts2)) + (s(s(0 + xts1)) + xts1)))) = s(s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1)))))
--- clause
	s(s(V)) + (s(s(xts2)) + s(s(s(s(s(s(xts1)) + xts2))))) = s(s(s(s(s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))))))
... reduced in 8 steps to
	s(s(s(s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))))) = s(s(s(s(s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))))))
... decomposed into new clause(s)
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
... decomposed into new clause(s)
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
... decomposed into new clause(s)
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1))))
... decomposed into new clause(s)
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1))))
... decomposed into new clause(s)
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + (0 + xts1))
... decomposed into new clause(s)
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
--- clause
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
... subsumed by hypothese
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
+++ treating clause
	s(s(0)) + (s(xts) + xts) = s(s(s(xts)) + (0 + xts))
+++ inductive narrowing on conjecture
	s(s(0)) + (s(xts) + xts) = s(s(s(xts)) + (0 + xts))
... induction variables of
	s(s(0)) + (s(xts) + xts) = s(s(s(xts)) + (0 + xts))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(0)) + (s(xts) + xts) = s(s(s(xts)) + (0 + xts))
... with variable xts
+++ creating new conjecture
	s(s(0)) + (s(0) + 0) = s(s(s(0)) + (0 + 0))
+++ creating new conjecture
	s(s(0)) + (s(s(xts)) + s(xts)) = s(s(s(s(xts))) + (0 + s(xts)))
--- clause
	s(s(0)) + (s(0) + 0) = s(s(s(0)) + (0 + 0))
... reduced to tautology
	s(s(s(0))) = s(s(s(0)))
--- clause
	s(s(0)) + (s(s(xts)) + s(xts)) = s(s(s(s(xts))) + (0 + s(xts)))
... reduced in 5 steps to
	s(s(s(0)) + (s(s(xts)) + xts)) = s(s(s(s(s(xts)) + (0 + xts))))
... decomposed into new clause(s)
	s(s(0)) + (s(s(xts)) + xts) = s(s(s(s(xts)) + (0 + xts)))
+++ inductive narrowing succeeded
--- clause
	s(s(0)) + (s(xts) + xts) = s(s(s(xts)) + (0 + xts))
... oriented to rule
	s(s(0)) + (s(xts) + xts) -> s(s(s(xts)) + (0 + xts))
+++ added new clause(s)
	s(s(0)) + (s(s(xts)) + xts) = s(s(s(s(xts)) + (0 + xts)))
... to conjectures
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(0)) + (s(s(xts)) + xts) = s(s(s(s(xts)) + (0 + xts)))
... modified clause
	s(s(s(0) + (0 + xts))) + s(xts) = s(s(s(s(xts)) + (0 + xts)))
--- clause
	s(s(s(0) + (0 + xts))) + s(xts) = s(s(s(s(xts)) + (0 + xts)))
... reduced in 1 step to
	s(s(s(s(0) + (0 + xts))) + xts) = s(s(s(s(xts)) + (0 + xts)))
... decomposed into new clause(s)
	s(s(s(0) + (0 + xts))) + xts = s(s(s(xts)) + (0 + xts))

+++ Status of the Inference System
--- Conjectures:
	s(s(xts2)) + (s(s(xts1)) + xts1) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
	s(s(V)) + (s(s(xts)) + xts) = s(s(s(s(xts)) + V)) + (0 + xts)
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1))))
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1))))
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + (0 + xts1))
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
	s(s(s(0) + (0 + xts))) + xts = s(s(s(xts)) + (0 + xts))
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(V2))) + V1 -> s(s(s(V2)) + V1)
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(0)) + (s(xts) + xts) -> s(s(s(xts)) + (0 + xts))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(xts2)) + (s(s(xts1)) + xts1) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
+++ inductive narrowing on conjecture
	s(s(xts2)) + (s(s(xts1)) + xts1) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
... induction variables of
	s(s(xts2)) + (s(s(xts1)) + xts1) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(xts2)) + (s(s(xts1)) + xts1) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
... with variable xts1
+++ creating new conjecture
	s(s(xts)) + (s(s(0)) + 0) = s(s(s(s(0)) + xts)) + (0 + 0)
+++ creating new conjecture
	s(s(xts2)) + (s(s(s(xts1))) + s(xts1)) = s(s(s(s(s(xts1))) + xts2)) + (0 + s(xts1))
--- clause
	s(s(xts)) + (s(s(0)) + 0) = s(s(s(s(0)) + xts)) + (0 + 0)
... reduced in 6 steps to
	s(s(s(s(xts)))) = s(s(s(s(0)) + xts))
--- clause
	s(s(xts2)) + (s(s(s(xts1))) + s(xts1)) = s(s(s(s(s(xts1))) + xts2)) + (0 + s(xts1))
... reduced in 7 steps to
	s(s(s(xts2)) + s(s(s(xts1)) + xts1)) = s(s(s(s(s(s(xts1)) + xts2)) + (0 + xts1)))
... decomposed into new clause(s)
	s(s(xts)) = s(s(0)) + xts
... decomposed into new clause(s)
	s(s(xts2)) + s(s(s(xts1)) + xts1) = s(s(s(s(s(xts1)) + xts2)) + (0 + xts1))
+++ inductive narrowing succeeded
--- clause
	s(s(xts2)) + (s(s(xts1)) + xts1) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
... oriented to rule
	s(s(s(s(xts2)) + xts1)) + (0 + xts2) -> s(s(xts2)) + (s(s(xts1)) + xts1)
+++ added new clause(s)
	s(s(xts)) = s(s(0)) + xts
	s(s(xts2)) + s(s(s(xts1)) + xts1) = s(s(s(s(s(xts1)) + xts2)) + (0 + xts1))
... to conjectures
--- clause
	s(s(V)) + (s(s(xts)) + xts) = s(s(s(s(xts)) + V)) + (0 + xts)
... reduced to tautology
	s(s(V)) + (s(s(xts)) + xts) = s(s(V)) + (s(s(xts)) + xts)
--- clause
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(s(s(xts1)) + xts2)) + (0 + xts1)
... reduced in 1 step to
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + (s(s(xts1)) + xts1)
--- succeeded to apply non-orientable hypothese
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
... to clause
	s(s(s(0) + (0 + xts))) + xts = s(s(s(xts)) + (0 + xts))
... modified clause
	s(s(0)) + (s(xts) + xts) = s(s(s(xts)) + (0 + xts))
--- clause
	s(s(0)) + (s(xts) + xts) = s(s(s(xts)) + (0 + xts))
... reduced to tautology
	s(s(s(xts)) + (0 + xts)) = s(s(s(xts)) + (0 + xts))
--- clause
	s(s(xts2)) + s(s(s(xts1)) + xts1) = s(s(s(s(s(xts1)) + xts2)) + (0 + xts1))
... reduced to tautology
	s(s(s(xts2)) + (s(s(xts1)) + xts1)) = s(s(s(xts2)) + (s(s(xts1)) + xts1))

+++ Status of the Inference System
--- Conjectures:
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1))))
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1))))
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + (0 + xts1))
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
	s(s(xts)) = s(s(0)) + xts
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(V2))) + V1 -> s(s(s(V2)) + V1)
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(0)) + (s(xts) + xts) -> s(s(s(xts)) + (0 + xts))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(xts2)) + xts1)) + (0 + xts2) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + (s(s(xts1)) + xts1)
+++ inductive narrowing on conjecture
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + (s(s(xts1)) + xts1)
... induction variables of
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + (s(s(xts1)) + xts1)
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + (s(s(xts1)) + xts1)
... with variable xts1
+++ creating new conjecture
	s(s(xts)) + (s(s(0)) + (0 + 0)) = s(s(xts)) + (s(s(0)) + 0)
+++ creating new conjecture
	s(s(xts2)) + (s(s(s(xts1))) + (0 + s(xts1))) = s(s(xts2)) + (s(s(s(xts1))) + s(xts1))
--- clause
	s(s(xts)) + (s(s(0)) + (0 + 0)) = s(s(xts)) + (s(s(0)) + 0)
... reduced to tautology
	s(s(s(s(xts)))) = s(s(s(s(xts))))
--- clause
	s(s(xts2)) + (s(s(s(xts1))) + (0 + s(xts1))) = s(s(xts2)) + (s(s(s(xts1))) + s(xts1))
... reduced in 7 steps to
	s(s(s(xts2)) + s(s(s(xts1)) + (0 + xts1))) = s(s(s(xts2)) + s(s(s(xts1)) + xts1))
... decomposed into new clause(s)
	s(s(xts2)) + s(s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + s(s(s(xts1)) + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + (s(s(xts1)) + xts1)
... oriented to rule
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) -> s(s(xts2)) + (s(s(xts1)) + xts1)
+++ added new clause(s)
	s(s(xts2)) + s(s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + s(s(s(xts1)) + xts1)
... to conjectures
--- clause
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1))))
... reduced in 1 step to
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
--- clause
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + (0 + xts1))))
... reduced in 1 step to
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
--- clause
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + (0 + xts1))
... reduced in 1 step to
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + xts1)
--- clause
	s(s(xts2)) + s(s(s(xts1)) + (0 + xts1)) = s(s(xts2)) + s(s(s(xts1)) + xts1)
... reduced to tautology
	s(s(s(xts2)) + (s(s(xts1)) + xts1)) = s(s(s(xts2)) + (s(s(xts1)) + xts1))

+++ Status of the Inference System
--- Conjectures:
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
	s(s(xts)) = s(s(0)) + xts
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(V2))) + V1 -> s(s(s(V2)) + V1)
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(0)) + (s(xts) + xts) -> s(s(s(xts)) + (0 + xts))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(xts2)) + xts1)) + (0 + xts2) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
+++ inductive narrowing on conjecture
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
... induction variables of
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
... with variable xts1
+++ creating new conjecture
	s(s(xts)) + (s(s(0)) + (s(s(0)) + 0)) = s(s(s(s(xts)) + (s(s(0)) + 0)))
+++ creating new conjecture
	s(s(xts2)) + (s(s(s(xts1))) + (s(s(0)) + s(xts1))) = s(s(s(s(xts2)) + (s(s(s(xts1))) + s(xts1))))
--- clause
	s(s(xts)) + (s(s(0)) + (s(s(0)) + 0)) = s(s(s(s(xts)) + (s(s(0)) + 0)))
... reduced to tautology
	s(s(s(s(s(s(xts)))))) = s(s(s(s(s(s(xts))))))
--- clause
	s(s(xts2)) + (s(s(s(xts1))) + (s(s(0)) + s(xts1))) = s(s(s(s(xts2)) + (s(s(s(xts1))) + s(xts1))))
... reduced in 7 steps to
	s(s(s(xts2)) + s(s(s(xts1)) + (s(s(0)) + xts1))) = s(s(s(s(s(xts2)) + s(s(s(xts1)) + xts1))))
... decomposed into new clause(s)
	s(s(xts2)) + s(s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + s(s(s(xts1)) + xts1)))
+++ inductive narrowing succeeded
--- clause
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
... oriented to rule
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
+++ added new clause(s)
	s(s(xts2)) + s(s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + s(s(s(xts1)) + xts1)))
... to conjectures
--- clause
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
... reduced to tautology
	s(s(s(s(xts2)) + (s(s(xts1)) + xts1))) = s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
--- clause
	s(s(xts2)) + s(s(s(xts1)) + (s(s(0)) + xts1)) = s(s(s(s(xts2)) + s(s(s(xts1)) + xts1)))
... reduced to tautology
	s(s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))) = s(s(s(s(s(xts2)) + (s(s(xts1)) + xts1))))

+++ Status of the Inference System
--- Conjectures:
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
	s(s(xts)) = s(s(0)) + xts
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(V2))) + V1 -> s(s(s(V2)) + V1)
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(0)) + (s(xts) + xts) -> s(s(s(xts)) + (0 + xts))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(xts2)) + xts1)) + (0 + xts2) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + xts1)
+++ inductive narrowing on conjecture
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + xts1)
... induction variables of
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + xts1)
... are:
	xts1:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + xts1)
... with variable xts1
+++ creating new conjecture
	s(s(xts)) + (s(s(0 + 0)) + 0) = s(s(xts)) + (s(s(0)) + 0)
+++ creating new conjecture
	s(s(xts2)) + (s(s(0 + s(xts1))) + s(xts1)) = s(s(xts2)) + (s(s(s(xts1))) + s(xts1))
--- clause
	s(s(xts)) + (s(s(0 + 0)) + 0) = s(s(xts)) + (s(s(0)) + 0)
... reduced to tautology
	s(s(s(s(xts)))) = s(s(s(s(xts))))
--- clause
	s(s(xts2)) + (s(s(0 + s(xts1))) + s(xts1)) = s(s(xts2)) + (s(s(s(xts1))) + s(xts1))
... reduced in 7 steps to
	s(s(s(xts2)) + s(s(s(0 + xts1)) + xts1)) = s(s(s(xts2)) + s(s(s(xts1)) + xts1))
... decomposed into new clause(s)
	s(s(xts2)) + s(s(s(0 + xts1)) + xts1) = s(s(xts2)) + s(s(s(xts1)) + xts1)
+++ inductive narrowing succeeded
--- clause
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) = s(s(xts2)) + (s(s(xts1)) + xts1)
... oriented to rule
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) -> s(s(xts2)) + (s(s(xts1)) + xts1)
+++ added new clause(s)
	s(s(xts2)) + s(s(s(0 + xts1)) + xts1) = s(s(xts2)) + s(s(s(xts1)) + xts1)
... to conjectures
--- clause
	s(s(xts2)) + s(s(s(0 + xts1)) + xts1) = s(s(xts2)) + s(s(s(xts1)) + xts1)
... reduced to tautology
	s(s(s(xts2)) + (s(s(xts1)) + xts1)) = s(s(s(xts2)) + (s(s(xts1)) + xts1))

+++ Status of the Inference System
--- Conjectures:
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
	s(s(xts)) = s(s(0)) + xts
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(V2))) + V1 -> s(s(s(V2)) + V1)
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(0)) + (s(xts) + xts) -> s(s(s(xts)) + (0 + xts))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(xts2)) + xts1)) + (0 + xts2) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
+++ inductive narrowing on conjecture
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
... induction variables of
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
... are:
	xts1:nat
	xts2:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
... with variable xts1
+++ creating new conjecture
	s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)) = s(s(s(s(s(s(xts) + 0)) + V)) + (0 + xts))
+++ creating new conjecture
	s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)) = s(s(s(s(s(s(xts2) + s(xts1))) + V)) + (0 + xts2))
--- clause
	s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)) = s(s(s(s(s(s(xts) + 0)) + V)) + (0 + xts))
... reduced to tautology
	s(s(s(s(V)) + (s(s(xts)) + xts))) = s(s(s(s(V)) + (s(s(xts)) + xts)))
--- clause
	s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)) = s(s(s(s(s(s(xts2) + s(xts1))) + V)) + (0 + xts2))
... reduced in 4 steps to
	s(s(V)) + (s(s(xts2)) + s(s(s(xts1)) + xts2)) = s(s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2)))
+++ inductive narrowing succeeded
--- clause
	s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)) = s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2))
... oriented to rule
	s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2)) -> s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))
+++ added new clause(s)
	s(s(V)) + (s(s(xts2)) + s(s(s(xts1)) + xts2)) = s(s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2)))
... to conjectures
--- clause
	s(s(V)) + (s(s(xts2)) + s(s(s(xts1)) + xts2)) = s(s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2)))
... reduced to tautology
	s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))) = s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))

+++ Status of the Inference System
--- Conjectures:
	s(s(xts)) = s(s(0)) + xts
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(V2))) + V1 -> s(s(s(V2)) + V1)
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(0)) + (s(xts) + xts) -> s(s(s(xts)) + (0 + xts))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(xts2)) + xts1)) + (0 + xts2) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2)) -> s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

+++ treating clause
	s(s(xts)) = s(s(0)) + xts
+++ inductive narrowing on conjecture
	s(s(xts)) = s(s(0)) + xts
... induction variables of
	s(s(xts)) = s(s(0)) + xts
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(xts)) = s(s(0)) + xts
... with variable xts
+++ creating new conjecture
	s(s(0)) = s(s(0)) + 0
+++ creating new conjecture
	s(s(s(xts))) = s(s(0)) + s(xts)
--- clause
	s(s(0)) = s(s(0)) + 0
... reduced to tautology
	s(s(0)) = s(s(0))
--- clause
	s(s(s(xts))) = s(s(0)) + s(xts)
... reduced in 1 step to
	s(s(s(xts))) = s(s(s(0)) + xts)
... decomposed into new clause(s)
	s(s(xts)) = s(s(0)) + xts
+++ inductive narrowing succeeded
--- clause
	s(s(xts)) = s(s(0)) + xts
... oriented to rule
	s(s(0)) + xts -> s(s(xts))
+++ added new clause(s)
	s(s(xts)) = s(s(0)) + xts
... to conjectures
--- clause
	s(s(xts)) = s(s(0)) + xts
... reduced to tautology
	s(s(xts)) = s(s(xts))

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	s(s(s(V4) + (0 + V3)) + (s(V2) + (V1 + V2))) = (s(s(s(V2 + (s(V1) + V3)))) + V4) + (0 + V2)
	s(s(s(V3) + (0 + V2)) + (s(0) + V1)) = s(s(s(0 + (s(V1) + V2)))) + V3
	s(s(s(V3) + (0 + V2)) + (s(s(xts)) + (V1 + xts))) = (s(s(s(s(xts) + (s(V1) + V2)))) + V3) + (0 + xts)
	s(s(s(s(V2) + (0 + V1)))) = s(s(s(0 + (s(0) + V1)))) + V2
	s(s(s(s(s(0 + xts2))))) + (s(V) + (0 + xts1)) = s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V
	s(s(s(V2) + (0 + xts2))) + (s(s(xts1)) + (V1 + xts1)) = s(s(V2)) + (s(s(xts1)) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(xts1))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(xts1))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(xts1)))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(xts1)))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(xts1))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(xts1))))) + ((s(V1) + xts2) + xts1))
	s(s(s(V2) + (0 + xts))) + V1 = s(s(V2)) + (s(V1) + xts)
	s(s(s(V2) + (0 + xts2))) + (s(s(s(s(s(s(xts1)))))) + (V1 + xts1)) = s(s(V2)) + (s(s(s(s(s(s(xts1)))))) + ((s(V1) + xts2) + xts1))
--- Oriented hypotheses:
	s(s(0)) + xts -> s(s(xts))
	s(s(s(s(0)))) + V -> s(s(s(s(V))))
	s(s(s(V2))) + V1 -> s(s(s(V2)) + V1)
	s(s(s(s(s(0))))) + V -> s(s(s(s(s(V)))))
	s(s(s(s(s(s(0)))))) + V -> s(s(s(s(s(s(V))))))
	s(s(0)) + (s(xts) + xts) -> s(s(s(xts)) + (0 + xts))
	s(s(s(s(s(s(s(0))))))) + V -> s(s(s(s(s(s(s(V)))))))
	s(s(s(s(V)) + (s(0) + xts))) -> s(s(s(s(s(0 + xts))))) + V
	s(s(s(s(s(s(s(s(0)))))))) + V -> s(s(s(s(s(s(s(s(V))))))))
	s(s(s(s(s(s(0 + xts)))))) + V -> s(s(s(s(s(s(0 + xts))))) + V)
	s(s(s(s(0 + (s(0) + xts))))) + V -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(s(s(s(s(0 + xts))))))) + V -> s(s(s(s(s(s(s(0 + xts))))) + V))
	s(s(V)) + (s(s(0)) + (s(0) + xts)) -> s(s(s(s(0 + (s(0) + xts)))) + V)
	s(s(s(0)) + (s(s(xts)) + (0 + xts))) -> s(s(s(s(s(xts))))) + (0 + xts)
	s(s(s(0 + (s(s(xts)) + V2)))) + V1 -> s(s(s(s(0 + (s(xts) + V2)))) + V1)
	s(s(s(s(xts2)) + xts1)) + (0 + xts2) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(xts2)) + (s(s(0 + xts1)) + xts1) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	s(s(s(s(s(0 + (s(0) + xts)))))) + V -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(s(s(s(s(s(0 + xts)))))))) + V -> s(s(s(s(s(s(s(s(0 + xts))))) + V)))
	s(s(xts2)) + (s(s(xts1)) + (0 + xts1)) -> s(s(xts2)) + (s(s(xts1)) + xts1)
	(s(s(s(s(s(xts))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (0 + xts)))
	s(s(V)) + (s(s(s(0))) + (s(0) + xts)) -> s(s(s(s(s(0 + (s(0) + xts)))) + V))
	s(s(s(0)) + (s(s(s(xts))) + (0 + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(0) + xts))) -> s(s(s(s(s(s(xts)))))) + (0 + xts)
	s(s(s(V2) + (0 + xts))) + (s(s(0)) + V1) -> s(s(V2)) + (s(s(0)) + (s(V1) + xts))
	s(s(s(s(s(s(s(s(s(0 + xts))))))))) + V -> s(s(s(s(s(s(s(s(s(0 + xts))))) + V))))
	(s(s(s(s(s(s(xts)))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(0) + xts)))
	s(s(s(0)) + (s(s(s(s(xts)))) + (0 + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(s(xts))) + (s(0) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	s(s(s(0)) + (s(s(xts)) + (s(s(0)) + xts))) -> s(s(s(s(s(s(s(xts))))))) + (0 + xts)
	(s(s(s(s(s(xts) + V2)))) + V1) + (0 + xts) -> s(s(s(V2)) + (s(s(xts)) + (V1 + xts)))
	s(s(V)) + (s(s(0)) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(0)) + (s(xts2) + xts1)))
	s(s(s(V2) + (0 + xts))) + (s(s(s(0))) + V1) -> s(s(V2)) + (s(s(s(0))) + (s(V1) + xts))
	s(s(xts2)) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(s(xts2)) + (s(s(xts1)) + xts1)))
	(s(s(s(s(s(s(s(xts))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(0)) + xts)))
	s(s(s(s(0)) + (s(xts) + (s(s(s(0))) + xts)))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(0 + (s(s(xts2)) + xts1)))))) + V -> s(s(s(s(s(0 + (s(s(xts2)) + xts1))))) + V)
	s(s(s(s(s(0)) + (s(xts) + (s(s(0)) + xts))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(0)) + (s(xts) + (s(0) + xts)))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(s(0)) + (s(xts) + (0 + xts))))))) -> s(s(s(s(s(s(s(s(xts)))))))) + (0 + xts)
	s(s(s(s(s(s(xts2))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(xts1)) + (0 + xts1)))
	s(s(V)) + (s(s(s(0))) + (s(s(xts2)) + xts1)) -> s(s(s(V)) + (s(s(s(0))) + (s(xts2) + xts1)))
	s(s(s(xts2))) + (s(s(xts1)) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1))
	(s(s(s(s(s(s(s(s(s(xts))))))))) + V) + (0 + xts) -> s(s(s(s(s(s(s(V)) + (s(s(xts)) + xts))))))
	(s(s(s(s(s(s(s(s(xts)))))))) + V) + (0 + xts) -> s(s(s(V)) + (s(s(xts)) + (s(s(s(0))) + xts)))
	s(s(s(s(s(s(xts2) + xts1)) + V)) + (0 + xts2)) -> s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2))
	(s(s(s(s(s(s(xts2) + xts1))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(xts1) + xts2)))
	s(s(s(s(s(s(s(xts2)))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(xts1))) + (0 + xts1)))
	s(s(s(xts2))) + (s(s(s(xts1))) + (s(0) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	s(s(s(xts2))) + (s(s(xts1)) + (s(s(0)) + xts1)) -> s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1))
	(s(s(s(s(s(s(s(xts2) + xts1)))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(xts1)) + xts2)))
	s(s(s(s(s(s(s(s(xts2))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(xts1)))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(xts2) + xts1))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(xts1))) + xts2)))
	s(s(s(s(s(s(s(s(s(xts2)))))))) + xts1) + (0 + xts2) -> s(s(s(s(xts2))) + (s(s(s(s(s(xts1))))) + (0 + xts1)))
	(s(s(s(s(s(s(s(s(s(xts2) + xts1)))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(xts1)))) + xts2)))
	(s(s(s(s(s(s(s(s(s(s(xts2) + xts1))))))))) + V) + (0 + xts2) -> s(s(s(V)) + (s(s(xts2)) + (s(s(s(s(s(xts1))))) + xts2)))
--- Primal Grammar:
	<empty>

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 67
... Number of induction steps      = 67
... Number of equational steps     = 37
... Number of case rewriting steps = 0
... Elapsed time (seconds)         = 6.653
