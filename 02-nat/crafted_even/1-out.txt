+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 1-in.txt
+++ output      = 1-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 10
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification BOOL from bool successfully parsed
+++ specification OR from or successfully parsed
+++ specification NAT from nat successfully parsed
+++ specification ADD from add successfully parsed
+++ specification MULT from mult successfully parsed
+++ specification Crafted from 1-in.txt successfully parsed
+++ Listing
         1: specification Crafted
         2: sorts
         3:      bool nat
         4: constructors
         5:      0: -> nat
         6:      false: -> bool
         7:      s: nat -> nat
         8:      true: -> bool
         9: defined functions
        10:      *: nat nat -> nat
        11:      +: nat nat -> nat
        12:      even: nat -> bool
        13:      ||: bool bool -> bool
        14: precedence
        15:      even > * > || > + > s > 0 > false = true
        16: axioms
        17:      x * 0 = 0;
        18:      x + 0 = x;
        19:      even(0) = true;
        20:      even(s(0)) = false;
        21:      true || true = true;
        22:      x + s(y) = s(x + y);
        23:      false || true = true;
        24:      true || false = true;
        25:      false || false = false;
        26:      x * s(y) = (x * y) + x;
        27:      even(s(s(x))) = even(x);
        28: conjectures
        29:      even(x) || even(y) = even(x * y);
        30: end
+++ finitary sorts: bool
+++ Rewrite System 
	x * 0 -> 0
	x + 0 -> x
	even(0) -> true
	even(s(0)) -> false
	true || true -> true
	x + s(y) -> s(x + y)
	false || true -> true
	true || false -> true
	false || false -> false
	x * s(y) -> (x * y) + x
	even(s(s(x))) -> even(x)
+++ inductive positions:
... for *: 1
... for +: 1
... for even: 0 0.0
... for ||: 0 1
+++ maximal depths of left-hand sides:
... for ||: 1
... for even: 3
... for +: 2
... for *: 2
+++ general maximal depth = 3
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for ||
... ... bool
		x
... for even
... ... nat
		0
		s(0)
		s(s(x))
... for +
... ... nat
		0
		s(x)
... for *
... ... nat
		0
		s(x)

+++ conjecture(s)
	even(x) || even(y) = even(x * y)

+++ inference system initiated
+++ treating clause
	even(x) || even(y) = even(x * y)
+++ inductive narrowing on conjecture
	even(x) || even(y) = even(x * y)
... induction variables of
	even(x) || even(y) = even(x * y)
... are:
	x:nat
	y:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	even(x) || even(y) = even(x * y)
... with variable x
+++ creating new conjecture
	even(0) || even(y) = even(0 * y)
+++ creating new conjecture
	even(s(0)) || even(y) = even(s(0) * y)
+++ creating new conjecture
	even(s(s(xts))) || even(y) = even(s(s(xts)) * y)
--- clause
	even(0) || even(y) = even(0 * y)
... reduced in 1 step to
	true || even(y) = even(0 * y)
--- clause
	even(s(0)) || even(y) = even(s(0) * y)
... reduced in 1 step to
	false || even(y) = even(s(0) * y)
--- clause
	even(s(s(xts))) || even(y) = even(s(s(xts)) * y)
... reduced in 1 step to
	even(xts) || even(y) = even(s(s(xts)) * y)
+++ inductive narrowing succeeded
--- clause
	even(x) || even(y) = even(x * y)
... oriented to rule
	even(x * y) -> even(x) || even(y)
+++ added new clause(s)
	true || even(y) = even(0 * y)
	false || even(y) = even(s(0) * y)
	even(xts) || even(y) = even(s(s(xts)) * y)
... to conjectures
--- clause
	true || even(y) = even(0 * y)
... reduced in 1 step to
	true || even(y) = even(0) || even(y)
--- clause
	false || even(y) = even(s(0) * y)
... reduced in 1 step to
	false || even(y) = even(s(0)) || even(y)
--- clause
	even(xts) || even(y) = even(s(s(xts)) * y)
... reduced in 1 step to
	even(xts) || even(y) = even(s(s(xts))) || even(y)

+++ Status of the Inference System
--- Conjectures:
	true || even(y) = even(0) || even(y)
	false || even(y) = even(s(0)) || even(y)
	even(xts) || even(y) = even(s(s(xts))) || even(y)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	even(x * y) -> even(x) || even(y)
--- Primal Grammar:
	<empty>

--- clause
	true || even(y) = even(0) || even(y)
... reduced to tautology
	true || even(y) = true || even(y)
--- clause
	false || even(y) = even(s(0)) || even(y)
... reduced to tautology
	false || even(y) = false || even(y)
--- clause
	even(xts) || even(y) = even(s(s(xts))) || even(y)
... reduced to tautology
	even(xts) || even(y) = even(xts) || even(y)

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	even(x * y) -> even(x) || even(y)
--- Primal Grammar:
	<empty>

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 2
... Number of induction steps      = 1
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Elapsed time (seconds)         = 0.004
